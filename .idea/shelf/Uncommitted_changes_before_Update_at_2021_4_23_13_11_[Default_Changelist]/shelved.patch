Index: src/main/java/GUI/Member/ProfileMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/ProfileMember.java b/src/main/java/GUI/Member/ProfileMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/ProfileMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,502 +0,0 @@
-package GUI.Member;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 10:48:29 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class ProfileMember extends JFrame {
-    public ProfileMember() {
-        initComponents();
-    }
-
-    private void editButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        EditProfileMember.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        balance = new JLabel();
-        uidGym = new JLabel();
-        avatar = new JButton();
-        nameTip = new JLabel();
-        emailTip = new JLabel();
-        phoneNumberTip = new JLabel();
-        genderTip = new JLabel();
-        name = new JLabel();
-        email = new JLabel();
-        phoneNumber = new JLabel();
-        gender = new JLabel();
-        editButton = new JButton();
-        decorationLine2 = new JPanel();
-        decorationLine3 = new JPanel();
-        decorationLine4 = new JPanel();
-        decorationLine5 = new JPanel();
-        decorationLine6 = new JPanel();
-        decorationLine7 = new JPanel();
-        decorationLine8 = new JPanel();
-        decorationLine9 = new JPanel();
-        decorationLine10 = new JPanel();
-        decorationLine11 = new JPanel();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- balance ----
-            balance.setText("Balance: 1200$");
-            balance.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            balance.setForeground(Color.gray);
-            body.add(balance);
-            balance.setBounds(35, 93, 160, balance.getPreferredSize().height);
-
-            //---- uidGym ----
-            uidGym.setText("UID:88888888 GYM: Muscle King ");
-            uidGym.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            uidGym.setForeground(Color.gray);
-            uidGym.setHorizontalAlignment(SwingConstants.RIGHT);
-            body.add(uidGym);
-            uidGym.setBounds(470, 93, 300, 24);
-
-            //---- avatar ----
-            avatar.setBackground(SystemColor.textHighlight);
-            avatar.setBorderPainted(false);
-            body.add(avatar);
-            avatar.setBounds(295, 145, 150, 150);
-
-            //---- nameTip ----
-            nameTip.setText("Name");
-            nameTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            nameTip.setBackground(Color.white);
-            nameTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            nameTip.setForeground(Color.gray);
-            body.add(nameTip);
-            nameTip.setBounds(175, 340, 175, nameTip.getPreferredSize().height);
-
-            //---- emailTip ----
-            emailTip.setText("Email");
-            emailTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            emailTip.setBackground(Color.white);
-            emailTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            emailTip.setForeground(Color.gray);
-            body.add(emailTip);
-            emailTip.setBounds(175, 400, 175, 23);
-
-            //---- phoneNumberTip ----
-            phoneNumberTip.setText("Phone Number");
-            phoneNumberTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            phoneNumberTip.setBackground(Color.white);
-            phoneNumberTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumberTip.setForeground(Color.gray);
-            body.add(phoneNumberTip);
-            phoneNumberTip.setBounds(175, 460, 175, 23);
-
-            //---- genderTip ----
-            genderTip.setText("Gender");
-            genderTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            genderTip.setBackground(Color.white);
-            genderTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            genderTip.setForeground(Color.gray);
-            body.add(genderTip);
-            genderTip.setBounds(175, 520, 175, 23);
-
-            //---- name ----
-            name.setText("Your Name");
-            name.setHorizontalAlignment(SwingConstants.LEFT);
-            name.setBackground(Color.white);
-            name.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            name.setForeground(Color.gray);
-            body.add(name);
-            name.setBounds(390, 340, 175, 23);
-
-            //---- email ----
-            email.setText("username@example.com");
-            email.setHorizontalAlignment(SwingConstants.LEFT);
-            email.setBackground(Color.white);
-            email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            email.setForeground(Color.gray);
-            body.add(email);
-            email.setBounds(390, 400, 255, 23);
-
-            //---- phoneNumber ----
-            phoneNumber.setText("+86 123 4567 8910");
-            phoneNumber.setHorizontalAlignment(SwingConstants.LEFT);
-            phoneNumber.setBackground(Color.white);
-            phoneNumber.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumber.setForeground(Color.gray);
-            body.add(phoneNumber);
-            phoneNumber.setBounds(390, 460, 255, 23);
-
-            //---- gender ----
-            gender.setText("Female");
-            gender.setHorizontalAlignment(SwingConstants.LEFT);
-            gender.setBackground(Color.white);
-            gender.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            gender.setForeground(Color.gray);
-            body.add(gender);
-            gender.setBounds(390, 520, 255, 23);
-
-            //---- editButton ----
-            editButton.setBorderPainted(false);
-            editButton.setBackground(SystemColor.textHighlight);
-            editButton.setText("EDIT");
-            editButton.setForeground(Color.white);
-            editButton.addActionListener(e -> editButtonActionPerformed(e));
-            body.add(editButton);
-            editButton.setBounds(35, 585, 90, 40);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(new Color(220, 220, 220));
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 380, 315, 2);
-
-            //======== decorationLine3 ========
-            {
-                decorationLine3.setBackground(new Color(220, 220, 220));
-                decorationLine3.setBorder(null);
-                decorationLine3.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine3.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine3.setMinimumSize(preferredSize);
-                    decorationLine3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine3);
-            decorationLine3.setBounds(35, 440, 315, 2);
-
-            //======== decorationLine4 ========
-            {
-                decorationLine4.setBackground(new Color(220, 220, 220));
-                decorationLine4.setBorder(null);
-                decorationLine4.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine4.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine4.setMinimumSize(preferredSize);
-                    decorationLine4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine4);
-            decorationLine4.setBounds(35, 500, 315, 2);
-
-            //======== decorationLine5 ========
-            {
-                decorationLine5.setBackground(new Color(220, 220, 220));
-                decorationLine5.setBorder(null);
-                decorationLine5.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine5.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine5.setMinimumSize(preferredSize);
-                    decorationLine5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine5);
-            decorationLine5.setBounds(35, 557, 315, 2);
-
-            //======== decorationLine6 ========
-            {
-                decorationLine6.setBackground(new Color(220, 220, 220));
-                decorationLine6.setBorder(null);
-                decorationLine6.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine6.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine6.setMinimumSize(preferredSize);
-                    decorationLine6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine6);
-            decorationLine6.setBounds(35, 325, 315, 2);
-
-            //======== decorationLine7 ========
-            {
-                decorationLine7.setBackground(new Color(220, 220, 220));
-                decorationLine7.setBorder(null);
-                decorationLine7.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine7.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine7.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine7.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine7.setMinimumSize(preferredSize);
-                    decorationLine7.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine7);
-            decorationLine7.setBounds(390, 325, 375, 2);
-
-            //======== decorationLine8 ========
-            {
-                decorationLine8.setBackground(new Color(220, 220, 220));
-                decorationLine8.setBorder(null);
-                decorationLine8.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine8.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine8.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine8.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine8.setMinimumSize(preferredSize);
-                    decorationLine8.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine8);
-            decorationLine8.setBounds(390, 380, 375, 2);
-
-            //======== decorationLine9 ========
-            {
-                decorationLine9.setBackground(new Color(220, 220, 220));
-                decorationLine9.setBorder(null);
-                decorationLine9.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine9.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine9.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine9.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine9.setMinimumSize(preferredSize);
-                    decorationLine9.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine9);
-            decorationLine9.setBounds(390, 440, 375, 2);
-
-            //======== decorationLine10 ========
-            {
-                decorationLine10.setBackground(new Color(220, 220, 220));
-                decorationLine10.setBorder(null);
-                decorationLine10.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine10.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine10.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine10.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine10.setMinimumSize(preferredSize);
-                    decorationLine10.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine10);
-            decorationLine10.setBounds(390, 500, 375, 2);
-
-            //======== decorationLine11 ========
-            {
-                decorationLine11.setBackground(new Color(220, 220, 220));
-                decorationLine11.setBorder(null);
-                decorationLine11.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine11.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine11.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine11.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine11.setMinimumSize(preferredSize);
-                    decorationLine11.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine11);
-            decorationLine11.setBounds(390, 557, 375, 2);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel balance;
-    private JLabel uidGym;
-    private JButton avatar;
-    private JLabel nameTip;
-    private JLabel emailTip;
-    private JLabel phoneNumberTip;
-    private JLabel genderTip;
-    private JLabel name;
-    private JLabel email;
-    private JLabel phoneNumber;
-    private JLabel gender;
-    private JButton editButton;
-    private JPanel decorationLine2;
-    private JPanel decorationLine3;
-    private JPanel decorationLine4;
-    private JPanel decorationLine5;
-    private JPanel decorationLine6;
-    private JPanel decorationLine7;
-    private JPanel decorationLine8;
-    private JPanel decorationLine9;
-    private JPanel decorationLine10;
-    private JPanel decorationLine11;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        ProfileMember.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    ProfileMember frame = new ProfileMember();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: Test/Java/org/qmbupt/grp85/gui/OtherGuiTest.java
===================================================================
diff --git a/Test/Java/org/qmbupt/grp85/gui/OtherGuiTest.java b/Test/Java/org/qmbupt/grp85/gui/OtherGuiTest.java
deleted file mode 100644
--- a/Test/Java/org/qmbupt/grp85/gui/OtherGuiTest.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,4 +0,0 @@
-package org.qmbupt.grp85.gui;
-
-public class OtherGuiTest {
-}
Index: src/main/java/GUI/Other/Login.java
===================================================================
diff --git a/src/main/java/GUI/Other/Login.java b/src/main/java/GUI/Other/Login.java
deleted file mode 100644
--- a/src/main/java/GUI/Other/Login.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,212 +0,0 @@
-package GUI.Other;
-
-import GUI.Admin.NavigatorAdmin;
-import GUI.Coach.NavigatorCoach;
-import GUI.Member.NavigatorMember;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 16:14:44 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class Login extends JFrame {
-    public Login() {
-        initComponents();
-    }
-
-    private void loginButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        if(this.userButton.isSelected()){
-            NavigatorMember.run();
-        }
-        else if(this.coachButton.isSelected()){
-            NavigatorCoach.run();
-        }
-        else if(this.adminButton.isSelected()){
-            NavigatorAdmin.run();
-        }
-
-    }
-
-    private void signUpButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        SignUp.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        loginBody = new JPanel();
-        loginIcon = new JLabel();
-        loginButton = new JButton();
-        userButton = new JRadioButton();
-        adminButton = new JRadioButton();
-        coachButton = new JRadioButton();
-        username = new JTextField();
-        password = new JPasswordField();
-        signUpTip = new JPanel();
-        signUpMsg = new JLabel();
-        signUpButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== loginBody ========
-        {
-            loginBody.setBackground(Color.white);
-            loginBody.setLayout(null);
-
-            //---- loginIcon ----
-            loginIcon.setText("LOGIN");
-            loginIcon.setBackground(Color.white);
-            loginIcon.setHorizontalAlignment(SwingConstants.CENTER);
-            loginIcon.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            loginBody.add(loginIcon);
-            loginIcon.setBounds(140, 0, 120, 60);
-
-            //---- loginButton ----
-            loginButton.setText("LOGIN");
-            loginButton.setBackground(new Color(217, 0, 27));
-            loginButton.setForeground(Color.white);
-            loginButton.setBorderPainted(false);
-            loginButton.addActionListener(e -> loginButtonActionPerformed(e));
-            loginBody.add(loginButton);
-            loginButton.setBounds(50, 310, 300, 50);
-
-            //---- userButton ----
-            userButton.setText("User");
-            userButton.setBackground(UIManager.getColor("Button.darcula.disabledText.shadow"));
-            userButton.setSelected(true);
-            loginBody.add(userButton);
-            userButton.setBounds(new Rectangle(new Point(55, 95), userButton.getPreferredSize()));
-
-            //---- adminButton ----
-            adminButton.setText("GUI/Admin");
-            adminButton.setBackground(UIManager.getColor("Button.darcula.disabledText.shadow"));
-            loginBody.add(adminButton);
-            adminButton.setBounds(280, 95, 70, 21);
-
-            //---- coachButton ----
-            coachButton.setText("Coach");
-            coachButton.setBackground(UIManager.getColor("Button.darcula.disabledText.shadow"));
-            loginBody.add(coachButton);
-            coachButton.setBounds(165, 95, 70, 21);
-
-            //---- username ----
-            username.setBackground(new Color(242, 242, 242));
-            username.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            loginBody.add(username);
-            username.setBounds(50, 130, 300, 50);
-
-            //---- password ----
-            password.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 18));
-            password.setBackground(new Color(242, 242, 242));
-            loginBody.add(password);
-            password.setBounds(50, 190, 300, 50);
-
-            //======== signUpTip ========
-            {
-                signUpTip.setBackground(Color.white);
-                signUpTip.setLayout(new GridLayout());
-
-                //---- signUpMsg ----
-                signUpMsg.setText("Not a member?");
-                signUpMsg.setBackground(Color.white);
-                signUpMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                signUpMsg.setHorizontalAlignment(SwingConstants.RIGHT);
-                signUpTip.add(signUpMsg);
-
-                //---- signUpButton ----
-                signUpButton.setText("Sign up now");
-                signUpButton.setForeground(new Color(22, 155, 213));
-                signUpButton.setBackground(Color.white);
-                signUpButton.setBorderPainted(false);
-                signUpButton.setHorizontalAlignment(SwingConstants.LEFT);
-                signUpButton.addActionListener(e -> signUpButtonActionPerformed(e));
-                signUpTip.add(signUpButton);
-            }
-            loginBody.add(signUpTip);
-            signUpTip.setBounds(92, 570, 215, 50);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < loginBody.getComponentCount(); i++) {
-                    Rectangle bounds = loginBody.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = loginBody.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                loginBody.setMinimumSize(preferredSize);
-                loginBody.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(loginBody);
-        loginBody.setBounds(0, 0, 400, 675);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-
-        //---- UserType ----
-        var UserType = new ButtonGroup();
-        UserType.add(userButton);
-        UserType.add(adminButton);
-        UserType.add(coachButton);
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel loginBody;
-    private JLabel loginIcon;
-    private JButton loginButton;
-    private JRadioButton userButton;
-    private JRadioButton adminButton;
-    private JRadioButton coachButton;
-    private JTextField username;
-    private JPasswordField password;
-    private JPanel signUpTip;
-    private JLabel signUpMsg;
-    private JButton signUpButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        Login.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    Login frame = new Login();
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/LessonDetailCoach.java
===================================================================
diff --git a/src/main/java/GUI/Coach/LessonDetailCoach.java b/src/main/java/GUI/Coach/LessonDetailCoach.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/LessonDetailCoach.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,189 +0,0 @@
-package GUI.Coach;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 16:56:55 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class LessonDetailCoach extends JFrame {
-    public LessonDetailCoach() {
-        initComponents();
-    }
-
-    private void editButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        UploadModify.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lessonPicture = new JLabel();
-        lessonName = new JLabel();
-        lessionMsg = new JTextPane();
-        coachAvatar = new JLabel();
-        coachName = new JLabel();
-        coachMsg = new JTextPane();
-        editButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Detail of Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- lessonPicture ----
-            lessonPicture.setText("Lesson Picture");
-            lessonPicture.setBorder(LineBorder.createBlackLineBorder());
-            lessonPicture.setHorizontalAlignment(SwingConstants.CENTER);
-            body.add(lessonPicture);
-            lessonPicture.setBounds(30, 165, 300, 251);
-
-            //---- lessonName ----
-            lessonName.setText("Lesson Name");
-            lessonName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 32));
-            lessonName.setBackground(Color.white);
-            body.add(lessonName);
-            lessonName.setBounds(350, 165, 267, 42);
-
-            //---- lessionMsg ----
-            lessionMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar sic tempor. Sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus pronin sapien nunc accuan eget.");
-            lessionMsg.setBackground(Color.white);
-            lessionMsg.setBorder(null);
-            lessionMsg.setCaretColor(Color.white);
-            lessionMsg.setDisabledTextColor(Color.white);
-            lessionMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            lessionMsg.setEditable(false);
-            body.add(lessionMsg);
-            lessionMsg.setBounds(350, 215, 398, 138);
-
-            //---- coachAvatar ----
-            coachAvatar.setText("Coach");
-            coachAvatar.setBorder(LineBorder.createBlackLineBorder());
-            coachAvatar.setHorizontalAlignment(SwingConstants.CENTER);
-            body.add(coachAvatar);
-            coachAvatar.setBounds(30, 440, 75, 75);
-
-            //---- coachName ----
-            coachName.setText("Coach Name");
-            coachName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 24));
-            coachName.setBackground(Color.white);
-            body.add(coachName);
-            coachName.setBounds(115, 440, 190, 42);
-
-            //---- coachMsg ----
-            coachMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo.");
-            coachMsg.setBackground(Color.white);
-            coachMsg.setBorder(null);
-            coachMsg.setCaretColor(Color.white);
-            coachMsg.setDisabledTextColor(Color.white);
-            coachMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            coachMsg.setEditable(false);
-            body.add(coachMsg);
-            coachMsg.setBounds(115, 475, 525, 45);
-
-            //---- editButton ----
-            editButton.setText("EDIT");
-            editButton.setBackground(new Color(217, 0, 27));
-            editButton.setBorder(null);
-            editButton.setForeground(Color.white);
-            editButton.addActionListener(e -> editButtonActionPerformed(e));
-            body.add(editButton);
-            editButton.setBounds(30, 570, 100, 50);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel lessonPicture;
-    private JLabel lessonName;
-    private JTextPane lessionMsg;
-    private JLabel coachAvatar;
-    private JLabel coachName;
-    private JTextPane coachMsg;
-    private JButton editButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        LessonDetailCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    LessonDetailCoach frame = new LessonDetailCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/PlanHomeCoach.java
===================================================================
diff --git a/src/main/java/GUI/Coach/PlanHomeCoach.java b/src/main/java/GUI/Coach/PlanHomeCoach.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/PlanHomeCoach.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,569 +0,0 @@
-package GUI.Coach;
-
-import GUI.Member.ViewMemberProfile;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 22:25:44 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class PlanHomeCoach extends JFrame {
-    public PlanHomeCoach() {
-        initComponents();
-    }
-
-    private void profileButton1ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        ViewMemberProfile.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        planDetail = new JPanel();
-        lessonName1 = new JLabel();
-        coachName1 = new JLabel();
-        startTime1 = new JLabel();
-        deleteButton1 = new JButton();
-        profileButton1 = new JButton();
-        decorationLine2 = new JPanel();
-        planDetail2 = new JPanel();
-        lessonName2 = new JLabel();
-        coachName2 = new JLabel();
-        startTime2 = new JLabel();
-        deleteButton2 = new JButton();
-        profileButton2 = new JButton();
-        planDetail3 = new JPanel();
-        lessonName3 = new JLabel();
-        coachName3 = new JLabel();
-        startTime3 = new JLabel();
-        deleteButton3 = new JButton();
-        profileButton3 = new JButton();
-        planDetail4 = new JPanel();
-        lessonName4 = new JLabel();
-        coachName4 = new JLabel();
-        startTime4 = new JLabel();
-        deleteButton4 = new JButton();
-        profileButton4 = new JButton();
-        planDetail5 = new JPanel();
-        lessonName5 = new JLabel();
-        coachName5 = new JLabel();
-        startTime5 = new JLabel();
-        deleteButton5 = new JButton();
-        profileButton5 = new JButton();
-        planDetail6 = new JPanel();
-        lessonName6 = new JLabel();
-        coachName6 = new JLabel();
-        startTime6 = new JLabel();
-        deleteButton6 = new JButton();
-        profileButton6 = new JButton();
-        nextPageButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Plan");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(25, 45, 240, title.getPreferredSize().height);
-
-            //======== planDetail ========
-            {
-                planDetail.setLayout(null);
-
-                //---- lessonName1 ----
-                lessonName1.setText("Lesson Name");
-                lessonName1.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName1.setBackground(Color.white);
-                planDetail.add(lessonName1);
-                lessonName1.setBounds(10, 0, 190, 42);
-
-                //---- coachName1 ----
-                coachName1.setText("Member Name");
-                coachName1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName1.setForeground(Color.gray);
-                planDetail.add(coachName1);
-                coachName1.setBounds(10, 40, 150, coachName1.getPreferredSize().height);
-
-                //---- startTime1 ----
-                startTime1.setText("2021-04-8 12:00");
-                startTime1.setForeground(Color.gray);
-                planDetail.add(startTime1);
-                startTime1.setBounds(new Rectangle(new Point(170, 45), startTime1.getPreferredSize()));
-
-                //---- deleteButton1 ----
-                deleteButton1.setText("DELETE");
-                deleteButton1.setBorderPainted(false);
-                deleteButton1.setBackground(new Color(217, 0, 27));
-                deleteButton1.setForeground(Color.white);
-                planDetail.add(deleteButton1);
-                deleteButton1.setBounds(610, 15, 100, 40);
-
-                //---- profileButton1 ----
-                profileButton1.setText("PROFILE");
-                profileButton1.setBorderPainted(false);
-                profileButton1.setBackground(Color.white);
-                profileButton1.addActionListener(e -> profileButton1ActionPerformed(e));
-                planDetail.add(profileButton1);
-                profileButton1.setBounds(495, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail.setMinimumSize(preferredSize);
-                    planDetail.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail);
-            planDetail.setBounds(45, 135, 720, 70);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(Color.lightGray);
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 135, 4, 470);
-
-            //======== planDetail2 ========
-            {
-                planDetail2.setLayout(null);
-
-                //---- lessonName2 ----
-                lessonName2.setText("Lesson Name");
-                lessonName2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName2.setBackground(Color.white);
-                planDetail2.add(lessonName2);
-                lessonName2.setBounds(10, 0, 190, 42);
-
-                //---- coachName2 ----
-                coachName2.setText("Member Name");
-                coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName2.setForeground(Color.gray);
-                planDetail2.add(coachName2);
-                coachName2.setBounds(10, 40, 150, coachName2.getPreferredSize().height);
-
-                //---- startTime2 ----
-                startTime2.setText("2021-04-8 12:00");
-                startTime2.setForeground(Color.gray);
-                planDetail2.add(startTime2);
-                startTime2.setBounds(new Rectangle(new Point(170, 45), startTime2.getPreferredSize()));
-
-                //---- deleteButton2 ----
-                deleteButton2.setText("DELETE");
-                deleteButton2.setBorderPainted(false);
-                deleteButton2.setBackground(new Color(217, 0, 27));
-                deleteButton2.setForeground(Color.white);
-                planDetail2.add(deleteButton2);
-                deleteButton2.setBounds(610, 15, 100, 40);
-
-                //---- profileButton2 ----
-                profileButton2.setText("PROFILE");
-                profileButton2.setBorderPainted(false);
-                profileButton2.setBackground(Color.white);
-                planDetail2.add(profileButton2);
-                profileButton2.setBounds(495, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail2.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail2.setMinimumSize(preferredSize);
-                    planDetail2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail2);
-            planDetail2.setBounds(45, 210, 720, 70);
-
-            //======== planDetail3 ========
-            {
-                planDetail3.setLayout(null);
-
-                //---- lessonName3 ----
-                lessonName3.setText("Lesson Name");
-                lessonName3.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName3.setBackground(Color.white);
-                planDetail3.add(lessonName3);
-                lessonName3.setBounds(10, 0, 190, 42);
-
-                //---- coachName3 ----
-                coachName3.setText("Member Name");
-                coachName3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName3.setForeground(Color.gray);
-                planDetail3.add(coachName3);
-                coachName3.setBounds(10, 40, 150, coachName3.getPreferredSize().height);
-
-                //---- startTime3 ----
-                startTime3.setText("2021-04-8 12:00");
-                startTime3.setForeground(Color.gray);
-                planDetail3.add(startTime3);
-                startTime3.setBounds(new Rectangle(new Point(170, 45), startTime3.getPreferredSize()));
-
-                //---- deleteButton3 ----
-                deleteButton3.setText("DELETE");
-                deleteButton3.setBorderPainted(false);
-                deleteButton3.setBackground(new Color(217, 0, 27));
-                deleteButton3.setForeground(Color.white);
-                planDetail3.add(deleteButton3);
-                deleteButton3.setBounds(610, 15, 100, 40);
-
-                //---- profileButton3 ----
-                profileButton3.setText("PROFILE");
-                profileButton3.setBorderPainted(false);
-                profileButton3.setBackground(Color.white);
-                planDetail3.add(profileButton3);
-                profileButton3.setBounds(495, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail3.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail3.setMinimumSize(preferredSize);
-                    planDetail3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail3);
-            planDetail3.setBounds(45, 285, 720, 70);
-
-            //======== planDetail4 ========
-            {
-                planDetail4.setLayout(null);
-
-                //---- lessonName4 ----
-                lessonName4.setText("Lesson Name");
-                lessonName4.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName4.setBackground(Color.white);
-                planDetail4.add(lessonName4);
-                lessonName4.setBounds(10, 0, 190, 42);
-
-                //---- coachName4 ----
-                coachName4.setText("Member Name");
-                coachName4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName4.setForeground(Color.gray);
-                planDetail4.add(coachName4);
-                coachName4.setBounds(10, 40, 150, coachName4.getPreferredSize().height);
-
-                //---- startTime4 ----
-                startTime4.setText("2021-04-8 12:00");
-                startTime4.setForeground(Color.gray);
-                planDetail4.add(startTime4);
-                startTime4.setBounds(new Rectangle(new Point(170, 45), startTime4.getPreferredSize()));
-
-                //---- deleteButton4 ----
-                deleteButton4.setText("DELETE");
-                deleteButton4.setBorderPainted(false);
-                deleteButton4.setBackground(new Color(217, 0, 27));
-                deleteButton4.setForeground(Color.white);
-                planDetail4.add(deleteButton4);
-                deleteButton4.setBounds(610, 15, 100, 40);
-
-                //---- profileButton4 ----
-                profileButton4.setText("PROFILE");
-                profileButton4.setBorderPainted(false);
-                profileButton4.setBackground(Color.white);
-                planDetail4.add(profileButton4);
-                profileButton4.setBounds(495, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail4.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail4.setMinimumSize(preferredSize);
-                    planDetail4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail4);
-            planDetail4.setBounds(45, 360, 720, 70);
-
-            //======== planDetail5 ========
-            {
-                planDetail5.setLayout(null);
-
-                //---- lessonName5 ----
-                lessonName5.setText("Lesson Name");
-                lessonName5.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName5.setBackground(Color.white);
-                planDetail5.add(lessonName5);
-                lessonName5.setBounds(10, 0, 190, 42);
-
-                //---- coachName5 ----
-                coachName5.setText("Member Name");
-                coachName5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName5.setForeground(Color.gray);
-                planDetail5.add(coachName5);
-                coachName5.setBounds(10, 40, 150, coachName5.getPreferredSize().height);
-
-                //---- startTime5 ----
-                startTime5.setText("2021-04-8 12:00");
-                startTime5.setForeground(Color.gray);
-                planDetail5.add(startTime5);
-                startTime5.setBounds(new Rectangle(new Point(170, 45), startTime5.getPreferredSize()));
-
-                //---- deleteButton5 ----
-                deleteButton5.setText("DELETE");
-                deleteButton5.setBorderPainted(false);
-                deleteButton5.setBackground(new Color(217, 0, 27));
-                deleteButton5.setForeground(Color.white);
-                planDetail5.add(deleteButton5);
-                deleteButton5.setBounds(610, 15, 100, 40);
-
-                //---- profileButton5 ----
-                profileButton5.setText("PROFILE");
-                profileButton5.setBorderPainted(false);
-                profileButton5.setBackground(Color.white);
-                planDetail5.add(profileButton5);
-                profileButton5.setBounds(495, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail5.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail5.setMinimumSize(preferredSize);
-                    planDetail5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail5);
-            planDetail5.setBounds(45, 435, 720, 70);
-
-            //======== planDetail6 ========
-            {
-                planDetail6.setLayout(null);
-
-                //---- lessonName6 ----
-                lessonName6.setText("Lesson Name");
-                lessonName6.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName6.setBackground(Color.white);
-                planDetail6.add(lessonName6);
-                lessonName6.setBounds(10, 0, 190, 42);
-
-                //---- coachName6 ----
-                coachName6.setText("Member Name");
-                coachName6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName6.setForeground(Color.gray);
-                planDetail6.add(coachName6);
-                coachName6.setBounds(10, 40, 150, coachName6.getPreferredSize().height);
-
-                //---- startTime6 ----
-                startTime6.setText("2021-04-8 12:00");
-                startTime6.setForeground(Color.gray);
-                planDetail6.add(startTime6);
-                startTime6.setBounds(new Rectangle(new Point(170, 45), startTime6.getPreferredSize()));
-
-                //---- deleteButton6 ----
-                deleteButton6.setText("DELETE");
-                deleteButton6.setBorderPainted(false);
-                deleteButton6.setBackground(new Color(217, 0, 27));
-                deleteButton6.setForeground(Color.white);
-                planDetail6.add(deleteButton6);
-                deleteButton6.setBounds(610, 15, 100, 40);
-
-                //---- profileButton6 ----
-                profileButton6.setText("PROFILE");
-                profileButton6.setBorderPainted(false);
-                profileButton6.setBackground(Color.white);
-                planDetail6.add(profileButton6);
-                profileButton6.setBounds(495, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail6.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail6.setMinimumSize(preferredSize);
-                    planDetail6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail6);
-            planDetail6.setBounds(45, 510, 720, 70);
-
-            //---- nextPageButton ----
-            nextPageButton.setBorderPainted(false);
-            nextPageButton.setBackground(SystemColor.textHighlight);
-            nextPageButton.setText("NEXT");
-            nextPageButton.setForeground(Color.white);
-            body.add(nextPageButton);
-            nextPageButton.setBounds(655, 595, 100, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(-10, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel planDetail;
-    private JLabel lessonName1;
-    private JLabel coachName1;
-    private JLabel startTime1;
-    private JButton deleteButton1;
-    private JButton profileButton1;
-    private JPanel decorationLine2;
-    private JPanel planDetail2;
-    private JLabel lessonName2;
-    private JLabel coachName2;
-    private JLabel startTime2;
-    private JButton deleteButton2;
-    private JButton profileButton2;
-    private JPanel planDetail3;
-    private JLabel lessonName3;
-    private JLabel coachName3;
-    private JLabel startTime3;
-    private JButton deleteButton3;
-    private JButton profileButton3;
-    private JPanel planDetail4;
-    private JLabel lessonName4;
-    private JLabel coachName4;
-    private JLabel startTime4;
-    private JButton deleteButton4;
-    private JButton profileButton4;
-    private JPanel planDetail5;
-    private JLabel lessonName5;
-    private JLabel coachName5;
-    private JLabel startTime5;
-    private JButton deleteButton5;
-    private JButton profileButton5;
-    private JPanel planDetail6;
-    private JLabel lessonName6;
-    private JLabel coachName6;
-    private JLabel startTime6;
-    private JButton deleteButton6;
-    private JButton profileButton6;
-    private JButton nextPageButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        PlanHomeCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    PlanHomeCoach frame = new PlanHomeCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: Test/Java/org/qmbupt/grp85/gui/CoachGuiTest.java
===================================================================
diff --git a/Test/Java/org/qmbupt/grp85/gui/CoachGuiTest.java b/Test/Java/org/qmbupt/grp85/gui/CoachGuiTest.java
deleted file mode 100644
--- a/Test/Java/org/qmbupt/grp85/gui/CoachGuiTest.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,4 +0,0 @@
-package org.qmbupt.grp85.gui;
-
-public class CoachGuiTest {
-}
Index: Test/Java/org/qmbupt/grp85/gui/AdminGuiTest.java
===================================================================
diff --git a/Test/Java/org/qmbupt/grp85/gui/AdminGuiTest.java b/Test/Java/org/qmbupt/grp85/gui/AdminGuiTest.java
deleted file mode 100644
--- a/Test/Java/org/qmbupt/grp85/gui/AdminGuiTest.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,10 +0,0 @@
-package org.qmbupt.grp85.gui;
-import GUI.Admin.ALLLessonAdmin;
-import org.junit.jupiter.api.Test;
-
-public class AdminGuiTest {
-    @Test
-    public void testAllLessonAdmin(){
-        ALLLessonAdmin.run();
-    }
-}
Index: src/main/java/GUI/Member/ViewMemberProfile.java
===================================================================
diff --git a/src/main/java/GUI/Member/ViewMemberProfile.java b/src/main/java/GUI/Member/ViewMemberProfile.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/ViewMemberProfile.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,475 +0,0 @@
-package GUI.Member;
-
-import java.awt.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 10:47:17 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class ViewMemberProfile extends JFrame {
-    public ViewMemberProfile() {
-        initComponents();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        uidGym = new JLabel();
-        avatar = new JButton();
-        nameTip = new JLabel();
-        emailTip = new JLabel();
-        phoneNumberTip = new JLabel();
-        genderTip = new JLabel();
-        name = new JLabel();
-        email = new JLabel();
-        phoneNumber = new JLabel();
-        gender = new JLabel();
-        decorationLine2 = new JPanel();
-        decorationLine3 = new JPanel();
-        decorationLine4 = new JPanel();
-        decorationLine5 = new JPanel();
-        decorationLine6 = new JPanel();
-        decorationLine7 = new JPanel();
-        decorationLine8 = new JPanel();
-        decorationLine9 = new JPanel();
-        decorationLine10 = new JPanel();
-        decorationLine11 = new JPanel();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- uidGym ----
-            uidGym.setText("UID:88888888 GYM: Muscle King ");
-            uidGym.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            uidGym.setForeground(Color.gray);
-            uidGym.setHorizontalAlignment(SwingConstants.RIGHT);
-            body.add(uidGym);
-            uidGym.setBounds(470, 93, 300, 24);
-
-            //---- avatar ----
-            avatar.setBackground(SystemColor.textHighlight);
-            avatar.setBorderPainted(false);
-            body.add(avatar);
-            avatar.setBounds(295, 145, 150, 150);
-
-            //---- nameTip ----
-            nameTip.setText("Name");
-            nameTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            nameTip.setBackground(Color.white);
-            nameTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            nameTip.setForeground(Color.gray);
-            body.add(nameTip);
-            nameTip.setBounds(175, 340, 175, nameTip.getPreferredSize().height);
-
-            //---- emailTip ----
-            emailTip.setText("Email");
-            emailTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            emailTip.setBackground(Color.white);
-            emailTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            emailTip.setForeground(Color.gray);
-            body.add(emailTip);
-            emailTip.setBounds(175, 400, 175, 23);
-
-            //---- phoneNumberTip ----
-            phoneNumberTip.setText("Phone Number");
-            phoneNumberTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            phoneNumberTip.setBackground(Color.white);
-            phoneNumberTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumberTip.setForeground(Color.gray);
-            body.add(phoneNumberTip);
-            phoneNumberTip.setBounds(175, 460, 175, 23);
-
-            //---- genderTip ----
-            genderTip.setText("Gender");
-            genderTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            genderTip.setBackground(Color.white);
-            genderTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            genderTip.setForeground(Color.gray);
-            body.add(genderTip);
-            genderTip.setBounds(175, 520, 175, 23);
-
-            //---- name ----
-            name.setText("Your Name");
-            name.setHorizontalAlignment(SwingConstants.LEFT);
-            name.setBackground(Color.white);
-            name.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            name.setForeground(Color.gray);
-            body.add(name);
-            name.setBounds(390, 340, 175, 23);
-
-            //---- email ----
-            email.setText("username@example.com");
-            email.setHorizontalAlignment(SwingConstants.LEFT);
-            email.setBackground(Color.white);
-            email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            email.setForeground(Color.gray);
-            body.add(email);
-            email.setBounds(390, 400, 255, 23);
-
-            //---- phoneNumber ----
-            phoneNumber.setText("+86 123 4567 8910");
-            phoneNumber.setHorizontalAlignment(SwingConstants.LEFT);
-            phoneNumber.setBackground(Color.white);
-            phoneNumber.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumber.setForeground(Color.gray);
-            body.add(phoneNumber);
-            phoneNumber.setBounds(390, 460, 255, 23);
-
-            //---- gender ----
-            gender.setText("Female");
-            gender.setHorizontalAlignment(SwingConstants.LEFT);
-            gender.setBackground(Color.white);
-            gender.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            gender.setForeground(Color.gray);
-            body.add(gender);
-            gender.setBounds(390, 520, 255, 23);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(new Color(220, 220, 220));
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 380, 315, 2);
-
-            //======== decorationLine3 ========
-            {
-                decorationLine3.setBackground(new Color(220, 220, 220));
-                decorationLine3.setBorder(null);
-                decorationLine3.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine3.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine3.setMinimumSize(preferredSize);
-                    decorationLine3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine3);
-            decorationLine3.setBounds(35, 440, 315, 2);
-
-            //======== decorationLine4 ========
-            {
-                decorationLine4.setBackground(new Color(220, 220, 220));
-                decorationLine4.setBorder(null);
-                decorationLine4.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine4.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine4.setMinimumSize(preferredSize);
-                    decorationLine4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine4);
-            decorationLine4.setBounds(35, 500, 315, 2);
-
-            //======== decorationLine5 ========
-            {
-                decorationLine5.setBackground(new Color(220, 220, 220));
-                decorationLine5.setBorder(null);
-                decorationLine5.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine5.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine5.setMinimumSize(preferredSize);
-                    decorationLine5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine5);
-            decorationLine5.setBounds(35, 557, 315, 2);
-
-            //======== decorationLine6 ========
-            {
-                decorationLine6.setBackground(new Color(220, 220, 220));
-                decorationLine6.setBorder(null);
-                decorationLine6.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine6.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine6.setMinimumSize(preferredSize);
-                    decorationLine6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine6);
-            decorationLine6.setBounds(35, 325, 315, 2);
-
-            //======== decorationLine7 ========
-            {
-                decorationLine7.setBackground(new Color(220, 220, 220));
-                decorationLine7.setBorder(null);
-                decorationLine7.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine7.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine7.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine7.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine7.setMinimumSize(preferredSize);
-                    decorationLine7.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine7);
-            decorationLine7.setBounds(390, 325, 375, 2);
-
-            //======== decorationLine8 ========
-            {
-                decorationLine8.setBackground(new Color(220, 220, 220));
-                decorationLine8.setBorder(null);
-                decorationLine8.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine8.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine8.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine8.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine8.setMinimumSize(preferredSize);
-                    decorationLine8.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine8);
-            decorationLine8.setBounds(390, 380, 375, 2);
-
-            //======== decorationLine9 ========
-            {
-                decorationLine9.setBackground(new Color(220, 220, 220));
-                decorationLine9.setBorder(null);
-                decorationLine9.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine9.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine9.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine9.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine9.setMinimumSize(preferredSize);
-                    decorationLine9.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine9);
-            decorationLine9.setBounds(390, 440, 375, 2);
-
-            //======== decorationLine10 ========
-            {
-                decorationLine10.setBackground(new Color(220, 220, 220));
-                decorationLine10.setBorder(null);
-                decorationLine10.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine10.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine10.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine10.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine10.setMinimumSize(preferredSize);
-                    decorationLine10.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine10);
-            decorationLine10.setBounds(390, 500, 375, 2);
-
-            //======== decorationLine11 ========
-            {
-                decorationLine11.setBackground(new Color(220, 220, 220));
-                decorationLine11.setBorder(null);
-                decorationLine11.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine11.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine11.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine11.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine11.setMinimumSize(preferredSize);
-                    decorationLine11.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine11);
-            decorationLine11.setBounds(390, 557, 375, 2);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel uidGym;
-    private JButton avatar;
-    private JLabel nameTip;
-    private JLabel emailTip;
-    private JLabel phoneNumberTip;
-    private JLabel genderTip;
-    private JLabel name;
-    private JLabel email;
-    private JLabel phoneNumber;
-    private JLabel gender;
-    private JPanel decorationLine2;
-    private JPanel decorationLine3;
-    private JPanel decorationLine4;
-    private JPanel decorationLine5;
-    private JPanel decorationLine6;
-    private JPanel decorationLine7;
-    private JPanel decorationLine8;
-    private JPanel decorationLine9;
-    private JPanel decorationLine10;
-    private JPanel decorationLine11;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        ViewMemberProfile.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    ViewMemberProfile frame = new ViewMemberProfile();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Admin/NavigatorAdmin.java
===================================================================
diff --git a/src/main/java/GUI/Admin/NavigatorAdmin.java b/src/main/java/GUI/Admin/NavigatorAdmin.java
deleted file mode 100644
--- a/src/main/java/GUI/Admin/NavigatorAdmin.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,285 +0,0 @@
-package GUI.Admin;
-
-import GUI.Other.Login;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 13:25:02 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class NavigatorAdmin extends JFrame {
-    public NavigatorAdmin() {
-        initComponents();
-    }
-
-    private void userManageActionPerformed(ActionEvent e) {
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorAdmin.run();
-        UserManageAll.run();
-    }
-
-    private void lessonManageActionPerformed(ActionEvent e) {
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorAdmin.run();
-        ALLLesson.run();
-    }
-
-    private void VenuesManageActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorAdmin.run();
-    }
-
-    private void switchAccountActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        Login.run();
-    }
-
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        label1 = new JButton();
-        username = new JLabel();
-        welcomeMsg = new JLabel();
-        decorationLine1 = new JLabel();
-        menu = new JPanel();
-        userManageMenu = new JPanel();
-        userManage = new JButton();
-        lessonManageMenu = new JPanel();
-        lessonManage = new JButton();
-        VenuesManageMenu = new JPanel();
-        VenuesManage = new JButton();
-        label2 = new JButton();
-        label3 = new JButton();
-        label4 = new JButton();
-        switchAccount = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- label1 ----
-            label1.setText("avatar");
-            label1.setBackground(Color.black);
-            label1.setForeground(Color.white);
-            label1.setHorizontalAlignment(SwingConstants.CENTER);
-            label1.setBorderPainted(false);
-            body.add(label1);
-            label1.setBounds(20, 20, 75, 75);
-
-            //---- username ----
-            username.setText("Username");
-            username.setBackground(Color.white);
-            username.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-            body.add(username);
-            username.setBounds(new Rectangle(new Point(100, 30), username.getPreferredSize()));
-
-            //---- welcomeMsg ----
-            welcomeMsg.setText("Welcome, .....");
-            body.add(welcomeMsg);
-            welcomeMsg.setBounds(new Rectangle(new Point(103, 60), welcomeMsg.getPreferredSize()));
-
-            //---- decorationLine1 ----
-            decorationLine1.setBackground(Color.black);
-            decorationLine1.setText("     ");
-            decorationLine1.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine1);
-            decorationLine1.setBounds(25, 115, 300, 2);
-
-            //======== menu ========
-            {
-                menu.setLayout(new GridLayout(0, 1));
-
-                //======== userManageMenu ========
-                {
-                    userManageMenu.setBackground(Color.white);
-                    userManageMenu.setLayout(new GridLayout());
-
-                    //---- userManage ----
-                    userManage.setText("User Management");
-                    userManage.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    userManage.setBackground(Color.white);
-                    userManage.setBorderPainted(false);
-                    userManage.setHorizontalAlignment(SwingConstants.LEFT);
-                    userManage.addActionListener(e -> userManageActionPerformed(e));
-                    userManageMenu.add(userManage);
-                }
-                menu.add(userManageMenu);
-
-                //======== lessonManageMenu ========
-                {
-                    lessonManageMenu.setBackground(Color.white);
-                    lessonManageMenu.setLayout(new GridLayout());
-
-                    //---- lessonManage ----
-                    lessonManage.setText("Lesson Management ");
-                    lessonManage.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    lessonManage.setBackground(Color.white);
-                    lessonManage.setBorderPainted(false);
-                    lessonManage.setHorizontalAlignment(SwingConstants.LEFT);
-                    lessonManage.addActionListener(e -> lessonManageActionPerformed(e));
-                    lessonManageMenu.add(lessonManage);
-                }
-                menu.add(lessonManageMenu);
-
-                //======== VenuesManageMenu ========
-                {
-                    VenuesManageMenu.setBackground(Color.white);
-                    VenuesManageMenu.setLayout(new GridLayout());
-
-                    //---- VenuesManage ----
-                    VenuesManage.setText("Venues Management");
-                    VenuesManage.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    VenuesManage.setBackground(Color.white);
-                    VenuesManage.setBorderPainted(false);
-                    VenuesManage.setHorizontalAlignment(SwingConstants.LEFT);
-                    VenuesManage.addActionListener(e -> VenuesManageActionPerformed(e));
-                    VenuesManageMenu.add(VenuesManage);
-                }
-                menu.add(VenuesManageMenu);
-            }
-            body.add(menu);
-            menu.setBounds(50, 135, 280, 200);
-
-            //---- label2 ----
-            label2.setText("Icon");
-            label2.setBackground(Color.black);
-            label2.setForeground(Color.white);
-            label2.setHorizontalAlignment(SwingConstants.CENTER);
-            label2.setBorderPainted(false);
-            body.add(label2);
-            label2.setBounds(20, 157, 25, 25);
-
-            //---- label3 ----
-            label3.setText("Icon");
-            label3.setBackground(Color.black);
-            label3.setForeground(Color.white);
-            label3.setHorizontalAlignment(SwingConstants.CENTER);
-            label3.setBorderPainted(false);
-            body.add(label3);
-            label3.setBounds(20, 222, 25, 25);
-
-            //---- label4 ----
-            label4.setText("Icon");
-            label4.setBackground(Color.black);
-            label4.setForeground(Color.white);
-            label4.setHorizontalAlignment(SwingConstants.CENTER);
-            label4.setBorderPainted(false);
-            body.add(label4);
-            label4.setBounds(20, 290, 25, 25);
-
-            //---- switchAccount ----
-            switchAccount.setText("Switch Account");
-            switchAccount.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            switchAccount.setBackground(Color.white);
-            switchAccount.setBorderPainted(false);
-            switchAccount.addActionListener(e -> switchAccountActionPerformed(e));
-            body.add(switchAccount);
-            switchAccount.setBounds(-5, 595, 175, 60);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 350, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JButton label1;
-    private JLabel username;
-    private JLabel welcomeMsg;
-    private JLabel decorationLine1;
-    private JPanel menu;
-    private JPanel userManageMenu;
-    private JButton userManage;
-    private JPanel lessonManageMenu;
-    private JButton lessonManage;
-    private JPanel VenuesManageMenu;
-    private JButton VenuesManage;
-    private JButton label2;
-    private JButton label3;
-    private JButton label4;
-    private JButton switchAccount;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        NavigatorAdmin.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    NavigatorAdmin frame = new NavigatorAdmin();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-1100/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-
-}
Index: src/main/java/GUI/Member/PlanHomeMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/PlanHomeMember.java b/src/main/java/GUI/Member/PlanHomeMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/PlanHomeMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,505 +0,0 @@
-package GUI.Member;
-
-import java.awt.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 22:22:46 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class PlanHomeMember extends JFrame {
-    public PlanHomeMember() {
-        initComponents();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        planDetail = new JPanel();
-        lessonName1 = new JLabel();
-        coachName1 = new JLabel();
-        startTime1 = new JLabel();
-        deleteButton1 = new JButton();
-        decorationLine2 = new JPanel();
-        planDetail2 = new JPanel();
-        lessonName2 = new JLabel();
-        coachName2 = new JLabel();
-        startTime2 = new JLabel();
-        deleteButton2 = new JButton();
-        planDetail3 = new JPanel();
-        lessonName3 = new JLabel();
-        coachName3 = new JLabel();
-        startTime3 = new JLabel();
-        deleteButton3 = new JButton();
-        planDetail4 = new JPanel();
-        lessonName4 = new JLabel();
-        coachName4 = new JLabel();
-        startTime4 = new JLabel();
-        deleteButton4 = new JButton();
-        planDetail5 = new JPanel();
-        lessonName5 = new JLabel();
-        coachName5 = new JLabel();
-        startTime5 = new JLabel();
-        deleteButton5 = new JButton();
-        planDetail6 = new JPanel();
-        lessonName6 = new JLabel();
-        coachName6 = new JLabel();
-        startTime6 = new JLabel();
-        deleteButton6 = new JButton();
-        nextPageButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Plan");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(25, 45, 240, title.getPreferredSize().height);
-
-            //======== planDetail ========
-            {
-                planDetail.setLayout(null);
-
-                //---- lessonName1 ----
-                lessonName1.setText("Lesson Name");
-                lessonName1.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName1.setBackground(Color.white);
-                planDetail.add(lessonName1);
-                lessonName1.setBounds(10, 0, 190, 42);
-
-                //---- coachName1 ----
-                coachName1.setText("Coach Name");
-                coachName1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName1.setForeground(Color.gray);
-                planDetail.add(coachName1);
-                coachName1.setBounds(new Rectangle(new Point(10, 40), coachName1.getPreferredSize()));
-
-                //---- startTime1 ----
-                startTime1.setText("2021-04-8 12:00");
-                startTime1.setForeground(Color.gray);
-                planDetail.add(startTime1);
-                startTime1.setBounds(new Rectangle(new Point(170, 45), startTime1.getPreferredSize()));
-
-                //---- deleteButton1 ----
-                deleteButton1.setText("DELETE");
-                deleteButton1.setBorderPainted(false);
-                deleteButton1.setBackground(new Color(217, 0, 27));
-                deleteButton1.setForeground(Color.white);
-                planDetail.add(deleteButton1);
-                deleteButton1.setBounds(610, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail.setMinimumSize(preferredSize);
-                    planDetail.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail);
-            planDetail.setBounds(45, 135, 720, 70);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(Color.lightGray);
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 135, 4, 470);
-
-            //======== planDetail2 ========
-            {
-                planDetail2.setLayout(null);
-
-                //---- lessonName2 ----
-                lessonName2.setText("Lesson Name");
-                lessonName2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName2.setBackground(Color.white);
-                planDetail2.add(lessonName2);
-                lessonName2.setBounds(10, 0, 190, 42);
-
-                //---- coachName2 ----
-                coachName2.setText("Coach Name");
-                coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName2.setForeground(Color.gray);
-                planDetail2.add(coachName2);
-                coachName2.setBounds(new Rectangle(new Point(10, 40), coachName2.getPreferredSize()));
-
-                //---- startTime2 ----
-                startTime2.setText("2021-04-8 12:00");
-                startTime2.setForeground(Color.gray);
-                planDetail2.add(startTime2);
-                startTime2.setBounds(new Rectangle(new Point(170, 45), startTime2.getPreferredSize()));
-
-                //---- deleteButton2 ----
-                deleteButton2.setText("DELETE");
-                deleteButton2.setBorderPainted(false);
-                deleteButton2.setBackground(new Color(217, 0, 27));
-                deleteButton2.setForeground(Color.white);
-                planDetail2.add(deleteButton2);
-                deleteButton2.setBounds(610, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail2.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail2.setMinimumSize(preferredSize);
-                    planDetail2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail2);
-            planDetail2.setBounds(45, 210, 720, 70);
-
-            //======== planDetail3 ========
-            {
-                planDetail3.setLayout(null);
-
-                //---- lessonName3 ----
-                lessonName3.setText("Lesson Name");
-                lessonName3.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName3.setBackground(Color.white);
-                planDetail3.add(lessonName3);
-                lessonName3.setBounds(10, 0, 190, 42);
-
-                //---- coachName3 ----
-                coachName3.setText("Coach Name");
-                coachName3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName3.setForeground(Color.gray);
-                planDetail3.add(coachName3);
-                coachName3.setBounds(new Rectangle(new Point(10, 40), coachName3.getPreferredSize()));
-
-                //---- startTime3 ----
-                startTime3.setText("2021-04-8 12:00");
-                startTime3.setForeground(Color.gray);
-                planDetail3.add(startTime3);
-                startTime3.setBounds(new Rectangle(new Point(170, 45), startTime3.getPreferredSize()));
-
-                //---- deleteButton3 ----
-                deleteButton3.setText("DELETE");
-                deleteButton3.setBorderPainted(false);
-                deleteButton3.setBackground(new Color(217, 0, 27));
-                deleteButton3.setForeground(Color.white);
-                planDetail3.add(deleteButton3);
-                deleteButton3.setBounds(610, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail3.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail3.setMinimumSize(preferredSize);
-                    planDetail3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail3);
-            planDetail3.setBounds(45, 285, 720, 70);
-
-            //======== planDetail4 ========
-            {
-                planDetail4.setLayout(null);
-
-                //---- lessonName4 ----
-                lessonName4.setText("Lesson Name");
-                lessonName4.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName4.setBackground(Color.white);
-                planDetail4.add(lessonName4);
-                lessonName4.setBounds(10, 0, 190, 42);
-
-                //---- coachName4 ----
-                coachName4.setText("Coach Name");
-                coachName4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName4.setForeground(Color.gray);
-                planDetail4.add(coachName4);
-                coachName4.setBounds(new Rectangle(new Point(10, 40), coachName4.getPreferredSize()));
-
-                //---- startTime4 ----
-                startTime4.setText("2021-04-8 12:00");
-                startTime4.setForeground(Color.gray);
-                planDetail4.add(startTime4);
-                startTime4.setBounds(new Rectangle(new Point(170, 45), startTime4.getPreferredSize()));
-
-                //---- deleteButton4 ----
-                deleteButton4.setText("DELETE");
-                deleteButton4.setBorderPainted(false);
-                deleteButton4.setBackground(new Color(217, 0, 27));
-                deleteButton4.setForeground(Color.white);
-                planDetail4.add(deleteButton4);
-                deleteButton4.setBounds(610, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail4.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail4.setMinimumSize(preferredSize);
-                    planDetail4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail4);
-            planDetail4.setBounds(45, 360, 720, 70);
-
-            //======== planDetail5 ========
-            {
-                planDetail5.setLayout(null);
-
-                //---- lessonName5 ----
-                lessonName5.setText("Lesson Name");
-                lessonName5.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName5.setBackground(Color.white);
-                planDetail5.add(lessonName5);
-                lessonName5.setBounds(10, 0, 190, 42);
-
-                //---- coachName5 ----
-                coachName5.setText("Coach Name");
-                coachName5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName5.setForeground(Color.gray);
-                planDetail5.add(coachName5);
-                coachName5.setBounds(new Rectangle(new Point(10, 40), coachName5.getPreferredSize()));
-
-                //---- startTime5 ----
-                startTime5.setText("2021-04-8 12:00");
-                startTime5.setForeground(Color.gray);
-                planDetail5.add(startTime5);
-                startTime5.setBounds(new Rectangle(new Point(170, 45), startTime5.getPreferredSize()));
-
-                //---- deleteButton5 ----
-                deleteButton5.setText("DELETE");
-                deleteButton5.setBorderPainted(false);
-                deleteButton5.setBackground(new Color(217, 0, 27));
-                deleteButton5.setForeground(Color.white);
-                planDetail5.add(deleteButton5);
-                deleteButton5.setBounds(610, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail5.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail5.setMinimumSize(preferredSize);
-                    planDetail5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail5);
-            planDetail5.setBounds(45, 435, 720, 70);
-
-            //======== planDetail6 ========
-            {
-                planDetail6.setLayout(null);
-
-                //---- lessonName6 ----
-                lessonName6.setText("Lesson Name");
-                lessonName6.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-                lessonName6.setBackground(Color.white);
-                planDetail6.add(lessonName6);
-                lessonName6.setBounds(10, 0, 190, 42);
-
-                //---- coachName6 ----
-                coachName6.setText("Coach Name");
-                coachName6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                coachName6.setForeground(Color.gray);
-                planDetail6.add(coachName6);
-                coachName6.setBounds(new Rectangle(new Point(10, 40), coachName6.getPreferredSize()));
-
-                //---- startTime6 ----
-                startTime6.setText("2021-04-8 12:00");
-                startTime6.setForeground(Color.gray);
-                planDetail6.add(startTime6);
-                startTime6.setBounds(new Rectangle(new Point(170, 45), startTime6.getPreferredSize()));
-
-                //---- deleteButton6 ----
-                deleteButton6.setText("DELETE");
-                deleteButton6.setBorderPainted(false);
-                deleteButton6.setBackground(new Color(217, 0, 27));
-                deleteButton6.setForeground(Color.white);
-                planDetail6.add(deleteButton6);
-                deleteButton6.setBounds(610, 15, 100, 40);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < planDetail6.getComponentCount(); i++) {
-                        Rectangle bounds = planDetail6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = planDetail6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    planDetail6.setMinimumSize(preferredSize);
-                    planDetail6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(planDetail6);
-            planDetail6.setBounds(45, 510, 720, 70);
-
-            //---- nextPageButton ----
-            nextPageButton.setBorderPainted(false);
-            nextPageButton.setBackground(SystemColor.textHighlight);
-            nextPageButton.setText("NEXT");
-            nextPageButton.setForeground(Color.white);
-            body.add(nextPageButton);
-            nextPageButton.setBounds(655, 595, 100, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(-10, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel planDetail;
-    private JLabel lessonName1;
-    private JLabel coachName1;
-    private JLabel startTime1;
-    private JButton deleteButton1;
-    private JPanel decorationLine2;
-    private JPanel planDetail2;
-    private JLabel lessonName2;
-    private JLabel coachName2;
-    private JLabel startTime2;
-    private JButton deleteButton2;
-    private JPanel planDetail3;
-    private JLabel lessonName3;
-    private JLabel coachName3;
-    private JLabel startTime3;
-    private JButton deleteButton3;
-    private JPanel planDetail4;
-    private JLabel lessonName4;
-    private JLabel coachName4;
-    private JLabel startTime4;
-    private JButton deleteButton4;
-    private JPanel planDetail5;
-    private JLabel lessonName5;
-    private JLabel coachName5;
-    private JLabel startTime5;
-    private JButton deleteButton5;
-    private JPanel planDetail6;
-    private JLabel lessonName6;
-    private JLabel coachName6;
-    private JLabel startTime6;
-    private JButton deleteButton6;
-    private JButton nextPageButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        PlanHomeMember.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    PlanHomeMember frame = new PlanHomeMember();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Member/LessonVideo.java
===================================================================
diff --git a/src/main/java/GUI/Member/LessonVideo.java b/src/main/java/GUI/Member/LessonVideo.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/LessonVideo.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,174 +0,0 @@
-package GUI.Member;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 21:24:43 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class LessonVideo extends JFrame {
-    public LessonVideo() {
-        initComponents();
-    }
-
-    private void lessonHomeButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonHomeMember.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        panel1 = new JPanel();
-        lessonName = new JLabel();
-        lessionMsg = new JTextPane();
-        lessonHomeButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Lesson Video");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //======== panel1 ========
-            {
-                panel1.setBackground(SystemColor.menu);
-                panel1.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < panel1.getComponentCount(); i++) {
-                        Rectangle bounds = panel1.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = panel1.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    panel1.setMinimumSize(preferredSize);
-                    panel1.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(panel1);
-            panel1.setBounds(30, 130, 750, 350);
-
-            //---- lessonName ----
-            lessonName.setText("Lesson Name");
-            lessonName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 32));
-            lessonName.setBackground(Color.white);
-            body.add(lessonName);
-            lessonName.setBounds(30, 485, 267, 42);
-
-            //---- lessionMsg ----
-            lessionMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar sic tempor. Sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus pronin sapien nunc accuan eget.");
-            lessionMsg.setBackground(Color.white);
-            lessionMsg.setBorder(null);
-            lessionMsg.setCaretColor(Color.white);
-            lessionMsg.setDisabledTextColor(Color.white);
-            lessionMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            lessionMsg.setEditable(false);
-            body.add(lessionMsg);
-            lessionMsg.setBounds(30, 535, 750, 138);
-
-            //---- lessonHomeButton ----
-            lessonHomeButton.setBorderPainted(false);
-            lessonHomeButton.setBackground(SystemColor.textHighlight);
-            lessonHomeButton.setText("LESSON HOME");
-            lessonHomeButton.setForeground(Color.white);
-            lessonHomeButton.addActionListener(e -> lessonHomeButtonActionPerformed(e));
-            body.add(lessonHomeButton);
-            lessonHomeButton.setBounds(640, 45, 140, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel panel1;
-    private JLabel lessonName;
-    private JTextPane lessionMsg;
-    private JButton lessonHomeButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        LessonVideo.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    LessonVideo frame = new LessonVideo();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/ProfileCoach.java
===================================================================
diff --git a/src/main/java/GUI/Coach/ProfileCoach.java b/src/main/java/GUI/Coach/ProfileCoach.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/ProfileCoach.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,493 +0,0 @@
-package GUI.Coach;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 11:43:16 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class ProfileCoach extends JFrame {
-    public ProfileCoach() {
-        initComponents();
-    }
-
-    private void editButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        EditProfileCoach.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        uidGym = new JLabel();
-        avatar = new JButton();
-        nameTip = new JLabel();
-        emailTip = new JLabel();
-        phoneNumberTip = new JLabel();
-        genderTip = new JLabel();
-        name = new JLabel();
-        email = new JLabel();
-        phoneNumber = new JLabel();
-        gender = new JLabel();
-        editButton = new JButton();
-        decorationLine2 = new JPanel();
-        decorationLine3 = new JPanel();
-        decorationLine4 = new JPanel();
-        decorationLine5 = new JPanel();
-        decorationLine6 = new JPanel();
-        decorationLine7 = new JPanel();
-        decorationLine8 = new JPanel();
-        decorationLine9 = new JPanel();
-        decorationLine10 = new JPanel();
-        decorationLine11 = new JPanel();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- uidGym ----
-            uidGym.setText("UID:88888888 GYM: Muscle King ");
-            uidGym.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            uidGym.setForeground(Color.gray);
-            uidGym.setHorizontalAlignment(SwingConstants.RIGHT);
-            body.add(uidGym);
-            uidGym.setBounds(470, 93, 300, 24);
-
-            //---- avatar ----
-            avatar.setBackground(SystemColor.textHighlight);
-            avatar.setBorderPainted(false);
-            body.add(avatar);
-            avatar.setBounds(295, 145, 150, 150);
-
-            //---- nameTip ----
-            nameTip.setText("Name");
-            nameTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            nameTip.setBackground(Color.white);
-            nameTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            nameTip.setForeground(Color.gray);
-            body.add(nameTip);
-            nameTip.setBounds(175, 340, 175, nameTip.getPreferredSize().height);
-
-            //---- emailTip ----
-            emailTip.setText("Email");
-            emailTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            emailTip.setBackground(Color.white);
-            emailTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            emailTip.setForeground(Color.gray);
-            body.add(emailTip);
-            emailTip.setBounds(175, 400, 175, 23);
-
-            //---- phoneNumberTip ----
-            phoneNumberTip.setText("Phone Number");
-            phoneNumberTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            phoneNumberTip.setBackground(Color.white);
-            phoneNumberTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumberTip.setForeground(Color.gray);
-            body.add(phoneNumberTip);
-            phoneNumberTip.setBounds(175, 460, 175, 23);
-
-            //---- genderTip ----
-            genderTip.setText("Gender");
-            genderTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            genderTip.setBackground(Color.white);
-            genderTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            genderTip.setForeground(Color.gray);
-            body.add(genderTip);
-            genderTip.setBounds(175, 520, 175, 23);
-
-            //---- name ----
-            name.setText("Your Name");
-            name.setHorizontalAlignment(SwingConstants.LEFT);
-            name.setBackground(Color.white);
-            name.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            name.setForeground(Color.gray);
-            body.add(name);
-            name.setBounds(390, 340, 175, 23);
-
-            //---- email ----
-            email.setText("username@example.com");
-            email.setHorizontalAlignment(SwingConstants.LEFT);
-            email.setBackground(Color.white);
-            email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            email.setForeground(Color.gray);
-            body.add(email);
-            email.setBounds(390, 400, 255, 23);
-
-            //---- phoneNumber ----
-            phoneNumber.setText("+86 123 4567 8910");
-            phoneNumber.setHorizontalAlignment(SwingConstants.LEFT);
-            phoneNumber.setBackground(Color.white);
-            phoneNumber.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumber.setForeground(Color.gray);
-            body.add(phoneNumber);
-            phoneNumber.setBounds(390, 460, 255, 23);
-
-            //---- gender ----
-            gender.setText("Female");
-            gender.setHorizontalAlignment(SwingConstants.LEFT);
-            gender.setBackground(Color.white);
-            gender.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            gender.setForeground(Color.gray);
-            body.add(gender);
-            gender.setBounds(390, 520, 255, 23);
-
-            //---- editButton ----
-            editButton.setBorderPainted(false);
-            editButton.setBackground(SystemColor.textHighlight);
-            editButton.setText("EDIT");
-            editButton.setForeground(Color.white);
-            editButton.addActionListener(e -> editButtonActionPerformed(e));
-            body.add(editButton);
-            editButton.setBounds(35, 585, 90, 40);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(new Color(220, 220, 220));
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 380, 315, 2);
-
-            //======== decorationLine3 ========
-            {
-                decorationLine3.setBackground(new Color(220, 220, 220));
-                decorationLine3.setBorder(null);
-                decorationLine3.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine3.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine3.setMinimumSize(preferredSize);
-                    decorationLine3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine3);
-            decorationLine3.setBounds(35, 440, 315, 2);
-
-            //======== decorationLine4 ========
-            {
-                decorationLine4.setBackground(new Color(220, 220, 220));
-                decorationLine4.setBorder(null);
-                decorationLine4.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine4.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine4.setMinimumSize(preferredSize);
-                    decorationLine4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine4);
-            decorationLine4.setBounds(35, 500, 315, 2);
-
-            //======== decorationLine5 ========
-            {
-                decorationLine5.setBackground(new Color(220, 220, 220));
-                decorationLine5.setBorder(null);
-                decorationLine5.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine5.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine5.setMinimumSize(preferredSize);
-                    decorationLine5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine5);
-            decorationLine5.setBounds(35, 557, 315, 2);
-
-            //======== decorationLine6 ========
-            {
-                decorationLine6.setBackground(new Color(220, 220, 220));
-                decorationLine6.setBorder(null);
-                decorationLine6.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine6.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine6.setMinimumSize(preferredSize);
-                    decorationLine6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine6);
-            decorationLine6.setBounds(35, 325, 315, 2);
-
-            //======== decorationLine7 ========
-            {
-                decorationLine7.setBackground(new Color(220, 220, 220));
-                decorationLine7.setBorder(null);
-                decorationLine7.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine7.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine7.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine7.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine7.setMinimumSize(preferredSize);
-                    decorationLine7.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine7);
-            decorationLine7.setBounds(390, 325, 375, 2);
-
-            //======== decorationLine8 ========
-            {
-                decorationLine8.setBackground(new Color(220, 220, 220));
-                decorationLine8.setBorder(null);
-                decorationLine8.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine8.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine8.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine8.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine8.setMinimumSize(preferredSize);
-                    decorationLine8.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine8);
-            decorationLine8.setBounds(390, 380, 375, 2);
-
-            //======== decorationLine9 ========
-            {
-                decorationLine9.setBackground(new Color(220, 220, 220));
-                decorationLine9.setBorder(null);
-                decorationLine9.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine9.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine9.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine9.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine9.setMinimumSize(preferredSize);
-                    decorationLine9.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine9);
-            decorationLine9.setBounds(390, 440, 375, 2);
-
-            //======== decorationLine10 ========
-            {
-                decorationLine10.setBackground(new Color(220, 220, 220));
-                decorationLine10.setBorder(null);
-                decorationLine10.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine10.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine10.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine10.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine10.setMinimumSize(preferredSize);
-                    decorationLine10.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine10);
-            decorationLine10.setBounds(390, 500, 375, 2);
-
-            //======== decorationLine11 ========
-            {
-                decorationLine11.setBackground(new Color(220, 220, 220));
-                decorationLine11.setBorder(null);
-                decorationLine11.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine11.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine11.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine11.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine11.setMinimumSize(preferredSize);
-                    decorationLine11.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine11);
-            decorationLine11.setBounds(390, 557, 375, 2);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel uidGym;
-    private JButton avatar;
-    private JLabel nameTip;
-    private JLabel emailTip;
-    private JLabel phoneNumberTip;
-    private JLabel genderTip;
-    private JLabel name;
-    private JLabel email;
-    private JLabel phoneNumber;
-    private JLabel gender;
-    private JButton editButton;
-    private JPanel decorationLine2;
-    private JPanel decorationLine3;
-    private JPanel decorationLine4;
-    private JPanel decorationLine5;
-    private JPanel decorationLine6;
-    private JPanel decorationLine7;
-    private JPanel decorationLine8;
-    private JPanel decorationLine9;
-    private JPanel decorationLine10;
-    private JPanel decorationLine11;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        ProfileCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    ProfileCoach frame = new ProfileCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,11 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/../../../../../../../../../../../:\Users\newtr\Documents\我的文件\大学\大学课程\大二\java\Group85\.idea/dataSources/
-/dataSources.local.xml
-/out/
-# Editor-based HTTP Client requests
-/httpRequests/
-#GUI designer
-*.jfd
Index: src/main/java/GUI/Admin/UserManageAllAdmin.java
===================================================================
diff --git a/src/main/java/GUI/Admin/UserManageAllAdmin.java b/src/main/java/GUI/Admin/UserManageAllAdmin.java
deleted file mode 100644
--- a/src/main/java/GUI/Admin/UserManageAllAdmin.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,1412 +0,0 @@
-/*
- * Created by JFormDesigner on Fri Apr 23 10:37:03 CST 2021
- */
-
-package GUI.Admin;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-
-/**
- * @author Anna
- */
-public class UserManageAllAdmin extends JFrame {
-    public UserManageAllAdmin() {
-        initComponents();
-    }
-
-    private void moreButton1ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-    }
-
-    private void moreButton9ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        coachName = new JLabel();
-        customerNextButton = new JButton();
-        customer1 = new JPanel();
-        avatar1 = new JPanel();
-        firstName1 = new JLabel();
-        lastName1 = new JLabel();
-        moreButton1 = new JButton();
-        customer2 = new JPanel();
-        avatar2 = new JPanel();
-        firstName2 = new JLabel();
-        lastName2 = new JLabel();
-        moreButton2 = new JButton();
-        customer3 = new JPanel();
-        avatar3 = new JPanel();
-        firstName3 = new JLabel();
-        lastName3 = new JLabel();
-        moreButton3 = new JButton();
-        customer4 = new JPanel();
-        avatar4 = new JPanel();
-        firstName4 = new JLabel();
-        lastName4 = new JLabel();
-        moreButton4 = new JButton();
-        customer5 = new JPanel();
-        avatar5 = new JPanel();
-        firstName5 = new JLabel();
-        lastName5 = new JLabel();
-        moreButton5 = new JButton();
-        customer6 = new JPanel();
-        avatar6 = new JPanel();
-        firstName6 = new JLabel();
-        lastName6 = new JLabel();
-        moreButton6 = new JButton();
-        customer7 = new JPanel();
-        avatar7 = new JPanel();
-        firstName7 = new JLabel();
-        lastName7 = new JLabel();
-        moreButton7 = new JButton();
-        customer8 = new JPanel();
-        avatar8 = new JPanel();
-        firstName8 = new JLabel();
-        lastName8 = new JLabel();
-        moreButton8 = new JButton();
-        decorationLine2 = new JLabel();
-        coachName2 = new JLabel();
-        coachNextButton = new JButton();
-        customer9 = new JPanel();
-        avatar9 = new JPanel();
-        firstName9 = new JLabel();
-        lastName9 = new JLabel();
-        moreButton9 = new JButton();
-        customer10 = new JPanel();
-        avatar10 = new JPanel();
-        firstName10 = new JLabel();
-        lastName10 = new JLabel();
-        moreButton10 = new JButton();
-        customer11 = new JPanel();
-        avatar11 = new JPanel();
-        firstName11 = new JLabel();
-        lastName11 = new JLabel();
-        moreButton11 = new JButton();
-        customer12 = new JPanel();
-        avatar12 = new JPanel();
-        firstName12 = new JLabel();
-        lastName12 = new JLabel();
-        moreButton12 = new JButton();
-        customer13 = new JPanel();
-        avatar13 = new JPanel();
-        firstName13 = new JLabel();
-        lastName13 = new JLabel();
-        moreButton13 = new JButton();
-        customer14 = new JPanel();
-        avatar14 = new JPanel();
-        firstName14 = new JLabel();
-        lastName14 = new JLabel();
-        moreButton14 = new JButton();
-        customer15 = new JPanel();
-        avatar15 = new JPanel();
-        firstName15 = new JLabel();
-        lastName15 = new JLabel();
-        moreButton15 = new JButton();
-        customer16 = new JPanel();
-        avatar16 = new JPanel();
-        firstName16 = new JLabel();
-        lastName16 = new JLabel();
-        moreButton16 = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("User Management");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- coachName ----
-            coachName.setText("Customer");
-            coachName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 24));
-            coachName.setBackground(Color.white);
-            body.add(coachName);
-            coachName.setBounds(35, 120, 190, 42);
-
-            //---- customerNextButton ----
-            customerNextButton.setText("NEXT");
-            customerNextButton.setBackground(SystemColor.menu);
-            customerNextButton.setBorder(null);
-            body.add(customerNextButton);
-            customerNextButton.setBounds(680, 125, 85, 35);
-
-            //======== customer1 ========
-            {
-                customer1.setBackground(SystemColor.menu);
-                customer1.setLayout(null);
-
-                //======== avatar1 ========
-                {
-                    avatar1.setBackground(Color.white);
-                    avatar1.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar1.getComponentCount(); i++) {
-                            Rectangle bounds = avatar1.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar1.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar1.setMinimumSize(preferredSize);
-                        avatar1.setPreferredSize(preferredSize);
-                    }
-                }
-                customer1.add(avatar1);
-                avatar1.setBounds(10, 10, 75, 75);
-
-                //---- firstName1 ----
-                firstName1.setText("First Name");
-                firstName1.setFont(firstName1.getFont().deriveFont(firstName1.getFont().getStyle() | Font.BOLD, firstName1.getFont().getSize() + 2f));
-                firstName1.setBackground(SystemColor.menu);
-                customer1.add(firstName1);
-                firstName1.setBounds(90, 10, 80, firstName1.getPreferredSize().height);
-
-                //---- lastName1 ----
-                lastName1.setText("Last Name");
-                lastName1.setFont(lastName1.getFont().deriveFont(lastName1.getFont().getStyle() | Font.BOLD, lastName1.getFont().getSize() + 2f));
-                lastName1.setBackground(SystemColor.menu);
-                customer1.add(lastName1);
-                lastName1.setBounds(90, 27, 85, 17);
-
-                //---- moreButton1 ----
-                moreButton1.setText("MORE");
-                moreButton1.setBackground(Color.white);
-                moreButton1.setBorderPainted(false);
-                moreButton1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                moreButton1.addActionListener(e -> moreButton1ActionPerformed(e));
-                customer1.add(moreButton1);
-                moreButton1.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer1.getComponentCount(); i++) {
-                        Rectangle bounds = customer1.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer1.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer1.setMinimumSize(preferredSize);
-                    customer1.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer1);
-            customer1.setBounds(35, 165, 175, 100);
-
-            //======== customer2 ========
-            {
-                customer2.setBackground(SystemColor.menu);
-                customer2.setLayout(null);
-
-                //======== avatar2 ========
-                {
-                    avatar2.setBackground(Color.white);
-                    avatar2.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar2.getComponentCount(); i++) {
-                            Rectangle bounds = avatar2.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar2.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar2.setMinimumSize(preferredSize);
-                        avatar2.setPreferredSize(preferredSize);
-                    }
-                }
-                customer2.add(avatar2);
-                avatar2.setBounds(10, 10, 75, 75);
-
-                //---- firstName2 ----
-                firstName2.setText("First Name");
-                firstName2.setFont(firstName2.getFont().deriveFont(firstName2.getFont().getStyle() | Font.BOLD, firstName2.getFont().getSize() + 2f));
-                firstName2.setBackground(SystemColor.menu);
-                customer2.add(firstName2);
-                firstName2.setBounds(90, 10, 80, firstName2.getPreferredSize().height);
-
-                //---- lastName2 ----
-                lastName2.setText("Last Name");
-                lastName2.setFont(lastName2.getFont().deriveFont(lastName2.getFont().getStyle() | Font.BOLD, lastName2.getFont().getSize() + 2f));
-                lastName2.setBackground(SystemColor.menu);
-                customer2.add(lastName2);
-                lastName2.setBounds(90, 27, 85, 17);
-
-                //---- moreButton2 ----
-                moreButton2.setText("MORE");
-                moreButton2.setBackground(Color.white);
-                moreButton2.setBorderPainted(false);
-                moreButton2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer2.add(moreButton2);
-                moreButton2.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer2.getComponentCount(); i++) {
-                        Rectangle bounds = customer2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer2.setMinimumSize(preferredSize);
-                    customer2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer2);
-            customer2.setBounds(220, 165, 175, 100);
-
-            //======== customer3 ========
-            {
-                customer3.setBackground(SystemColor.menu);
-                customer3.setLayout(null);
-
-                //======== avatar3 ========
-                {
-                    avatar3.setBackground(Color.white);
-                    avatar3.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar3.getComponentCount(); i++) {
-                            Rectangle bounds = avatar3.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar3.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar3.setMinimumSize(preferredSize);
-                        avatar3.setPreferredSize(preferredSize);
-                    }
-                }
-                customer3.add(avatar3);
-                avatar3.setBounds(10, 10, 75, 75);
-
-                //---- firstName3 ----
-                firstName3.setText("First Name");
-                firstName3.setFont(firstName3.getFont().deriveFont(firstName3.getFont().getStyle() | Font.BOLD, firstName3.getFont().getSize() + 2f));
-                firstName3.setBackground(SystemColor.menu);
-                customer3.add(firstName3);
-                firstName3.setBounds(90, 10, 80, firstName3.getPreferredSize().height);
-
-                //---- lastName3 ----
-                lastName3.setText("Last Name");
-                lastName3.setFont(lastName3.getFont().deriveFont(lastName3.getFont().getStyle() | Font.BOLD, lastName3.getFont().getSize() + 2f));
-                lastName3.setBackground(SystemColor.menu);
-                customer3.add(lastName3);
-                lastName3.setBounds(90, 27, 85, 17);
-
-                //---- moreButton3 ----
-                moreButton3.setText("MORE");
-                moreButton3.setBackground(Color.white);
-                moreButton3.setBorderPainted(false);
-                moreButton3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer3.add(moreButton3);
-                moreButton3.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer3.getComponentCount(); i++) {
-                        Rectangle bounds = customer3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer3.setMinimumSize(preferredSize);
-                    customer3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer3);
-            customer3.setBounds(405, 165, 175, 100);
-
-            //======== customer4 ========
-            {
-                customer4.setBackground(SystemColor.menu);
-                customer4.setLayout(null);
-
-                //======== avatar4 ========
-                {
-                    avatar4.setBackground(Color.white);
-                    avatar4.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar4.getComponentCount(); i++) {
-                            Rectangle bounds = avatar4.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar4.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar4.setMinimumSize(preferredSize);
-                        avatar4.setPreferredSize(preferredSize);
-                    }
-                }
-                customer4.add(avatar4);
-                avatar4.setBounds(10, 10, 75, 75);
-
-                //---- firstName4 ----
-                firstName4.setText("First Name");
-                firstName4.setFont(firstName4.getFont().deriveFont(firstName4.getFont().getStyle() | Font.BOLD, firstName4.getFont().getSize() + 2f));
-                firstName4.setBackground(SystemColor.menu);
-                customer4.add(firstName4);
-                firstName4.setBounds(90, 10, 80, firstName4.getPreferredSize().height);
-
-                //---- lastName4 ----
-                lastName4.setText("Last Name");
-                lastName4.setFont(lastName4.getFont().deriveFont(lastName4.getFont().getStyle() | Font.BOLD, lastName4.getFont().getSize() + 2f));
-                lastName4.setBackground(SystemColor.menu);
-                customer4.add(lastName4);
-                lastName4.setBounds(90, 27, 85, 17);
-
-                //---- moreButton4 ----
-                moreButton4.setText("MORE");
-                moreButton4.setBackground(Color.white);
-                moreButton4.setBorderPainted(false);
-                moreButton4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer4.add(moreButton4);
-                moreButton4.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer4.getComponentCount(); i++) {
-                        Rectangle bounds = customer4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer4.setMinimumSize(preferredSize);
-                    customer4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer4);
-            customer4.setBounds(590, 165, 175, 100);
-
-            //======== customer5 ========
-            {
-                customer5.setBackground(SystemColor.menu);
-                customer5.setLayout(null);
-
-                //======== avatar5 ========
-                {
-                    avatar5.setBackground(Color.white);
-                    avatar5.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar5.getComponentCount(); i++) {
-                            Rectangle bounds = avatar5.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar5.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar5.setMinimumSize(preferredSize);
-                        avatar5.setPreferredSize(preferredSize);
-                    }
-                }
-                customer5.add(avatar5);
-                avatar5.setBounds(10, 10, 75, 75);
-
-                //---- firstName5 ----
-                firstName5.setText("First Name");
-                firstName5.setFont(firstName5.getFont().deriveFont(firstName5.getFont().getStyle() | Font.BOLD, firstName5.getFont().getSize() + 2f));
-                firstName5.setBackground(SystemColor.menu);
-                customer5.add(firstName5);
-                firstName5.setBounds(90, 10, 80, firstName5.getPreferredSize().height);
-
-                //---- lastName5 ----
-                lastName5.setText("Last Name");
-                lastName5.setFont(lastName5.getFont().deriveFont(lastName5.getFont().getStyle() | Font.BOLD, lastName5.getFont().getSize() + 2f));
-                lastName5.setBackground(SystemColor.menu);
-                customer5.add(lastName5);
-                lastName5.setBounds(90, 27, 85, 17);
-
-                //---- moreButton5 ----
-                moreButton5.setText("MORE");
-                moreButton5.setBackground(Color.white);
-                moreButton5.setBorderPainted(false);
-                moreButton5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer5.add(moreButton5);
-                moreButton5.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer5.getComponentCount(); i++) {
-                        Rectangle bounds = customer5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer5.setMinimumSize(preferredSize);
-                    customer5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer5);
-            customer5.setBounds(35, 275, 175, 100);
-
-            //======== customer6 ========
-            {
-                customer6.setBackground(SystemColor.menu);
-                customer6.setLayout(null);
-
-                //======== avatar6 ========
-                {
-                    avatar6.setBackground(Color.white);
-                    avatar6.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar6.getComponentCount(); i++) {
-                            Rectangle bounds = avatar6.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar6.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar6.setMinimumSize(preferredSize);
-                        avatar6.setPreferredSize(preferredSize);
-                    }
-                }
-                customer6.add(avatar6);
-                avatar6.setBounds(10, 10, 75, 75);
-
-                //---- firstName6 ----
-                firstName6.setText("First Name");
-                firstName6.setFont(firstName6.getFont().deriveFont(firstName6.getFont().getStyle() | Font.BOLD, firstName6.getFont().getSize() + 2f));
-                firstName6.setBackground(SystemColor.menu);
-                customer6.add(firstName6);
-                firstName6.setBounds(90, 10, 80, firstName6.getPreferredSize().height);
-
-                //---- lastName6 ----
-                lastName6.setText("Last Name");
-                lastName6.setFont(lastName6.getFont().deriveFont(lastName6.getFont().getStyle() | Font.BOLD, lastName6.getFont().getSize() + 2f));
-                lastName6.setBackground(SystemColor.menu);
-                customer6.add(lastName6);
-                lastName6.setBounds(90, 27, 85, 17);
-
-                //---- moreButton6 ----
-                moreButton6.setText("MORE");
-                moreButton6.setBackground(Color.white);
-                moreButton6.setBorderPainted(false);
-                moreButton6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer6.add(moreButton6);
-                moreButton6.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer6.getComponentCount(); i++) {
-                        Rectangle bounds = customer6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer6.setMinimumSize(preferredSize);
-                    customer6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer6);
-            customer6.setBounds(220, 275, 175, 100);
-
-            //======== customer7 ========
-            {
-                customer7.setBackground(SystemColor.menu);
-                customer7.setLayout(null);
-
-                //======== avatar7 ========
-                {
-                    avatar7.setBackground(Color.white);
-                    avatar7.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar7.getComponentCount(); i++) {
-                            Rectangle bounds = avatar7.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar7.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar7.setMinimumSize(preferredSize);
-                        avatar7.setPreferredSize(preferredSize);
-                    }
-                }
-                customer7.add(avatar7);
-                avatar7.setBounds(10, 10, 75, 75);
-
-                //---- firstName7 ----
-                firstName7.setText("First Name");
-                firstName7.setFont(firstName7.getFont().deriveFont(firstName7.getFont().getStyle() | Font.BOLD, firstName7.getFont().getSize() + 2f));
-                firstName7.setBackground(SystemColor.menu);
-                customer7.add(firstName7);
-                firstName7.setBounds(90, 10, 80, firstName7.getPreferredSize().height);
-
-                //---- lastName7 ----
-                lastName7.setText("Last Name");
-                lastName7.setFont(lastName7.getFont().deriveFont(lastName7.getFont().getStyle() | Font.BOLD, lastName7.getFont().getSize() + 2f));
-                lastName7.setBackground(SystemColor.menu);
-                customer7.add(lastName7);
-                lastName7.setBounds(90, 27, 85, 17);
-
-                //---- moreButton7 ----
-                moreButton7.setText("MORE");
-                moreButton7.setBackground(Color.white);
-                moreButton7.setBorderPainted(false);
-                moreButton7.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer7.add(moreButton7);
-                moreButton7.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer7.getComponentCount(); i++) {
-                        Rectangle bounds = customer7.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer7.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer7.setMinimumSize(preferredSize);
-                    customer7.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer7);
-            customer7.setBounds(405, 275, 175, 100);
-
-            //======== customer8 ========
-            {
-                customer8.setBackground(SystemColor.menu);
-                customer8.setLayout(null);
-
-                //======== avatar8 ========
-                {
-                    avatar8.setBackground(Color.white);
-                    avatar8.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar8.getComponentCount(); i++) {
-                            Rectangle bounds = avatar8.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar8.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar8.setMinimumSize(preferredSize);
-                        avatar8.setPreferredSize(preferredSize);
-                    }
-                }
-                customer8.add(avatar8);
-                avatar8.setBounds(10, 10, 75, 75);
-
-                //---- firstName8 ----
-                firstName8.setText("First Name");
-                firstName8.setFont(firstName8.getFont().deriveFont(firstName8.getFont().getStyle() | Font.BOLD, firstName8.getFont().getSize() + 2f));
-                firstName8.setBackground(SystemColor.menu);
-                customer8.add(firstName8);
-                firstName8.setBounds(90, 10, 80, firstName8.getPreferredSize().height);
-
-                //---- lastName8 ----
-                lastName8.setText("Last Name");
-                lastName8.setFont(lastName8.getFont().deriveFont(lastName8.getFont().getStyle() | Font.BOLD, lastName8.getFont().getSize() + 2f));
-                lastName8.setBackground(SystemColor.menu);
-                customer8.add(lastName8);
-                lastName8.setBounds(90, 27, 85, 17);
-
-                //---- moreButton8 ----
-                moreButton8.setText("MORE");
-                moreButton8.setBackground(Color.white);
-                moreButton8.setBorderPainted(false);
-                moreButton8.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer8.add(moreButton8);
-                moreButton8.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer8.getComponentCount(); i++) {
-                        Rectangle bounds = customer8.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer8.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer8.setMinimumSize(preferredSize);
-                    customer8.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer8);
-            customer8.setBounds(590, 275, 175, 100);
-
-            //---- decorationLine2 ----
-            decorationLine2.setBackground(Color.black);
-            decorationLine2.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 380, 730, 2);
-
-            //---- coachName2 ----
-            coachName2.setText("Coach");
-            coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 24));
-            coachName2.setBackground(Color.white);
-            body.add(coachName2);
-            coachName2.setBounds(35, 385, 190, 42);
-
-            //---- coachNextButton ----
-            coachNextButton.setText("NEXT");
-            coachNextButton.setBackground(SystemColor.menu);
-            coachNextButton.setBorder(null);
-            body.add(coachNextButton);
-            coachNextButton.setBounds(680, 390, 85, 35);
-
-            //======== customer9 ========
-            {
-                customer9.setBackground(SystemColor.menu);
-                customer9.setLayout(null);
-
-                //======== avatar9 ========
-                {
-                    avatar9.setBackground(Color.white);
-                    avatar9.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar9.getComponentCount(); i++) {
-                            Rectangle bounds = avatar9.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar9.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar9.setMinimumSize(preferredSize);
-                        avatar9.setPreferredSize(preferredSize);
-                    }
-                }
-                customer9.add(avatar9);
-                avatar9.setBounds(10, 10, 75, 75);
-
-                //---- firstName9 ----
-                firstName9.setText("First Name");
-                firstName9.setFont(firstName9.getFont().deriveFont(firstName9.getFont().getStyle() | Font.BOLD, firstName9.getFont().getSize() + 2f));
-                firstName9.setBackground(SystemColor.menu);
-                customer9.add(firstName9);
-                firstName9.setBounds(90, 10, 80, firstName9.getPreferredSize().height);
-
-                //---- lastName9 ----
-                lastName9.setText("Last Name");
-                lastName9.setFont(lastName9.getFont().deriveFont(lastName9.getFont().getStyle() | Font.BOLD, lastName9.getFont().getSize() + 2f));
-                lastName9.setBackground(SystemColor.menu);
-                customer9.add(lastName9);
-                lastName9.setBounds(90, 27, 85, 17);
-
-                //---- moreButton9 ----
-                moreButton9.setText("MORE");
-                moreButton9.setBackground(Color.white);
-                moreButton9.setBorderPainted(false);
-                moreButton9.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                moreButton9.addActionListener(e -> moreButton9ActionPerformed(e));
-                customer9.add(moreButton9);
-                moreButton9.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer9.getComponentCount(); i++) {
-                        Rectangle bounds = customer9.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer9.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer9.setMinimumSize(preferredSize);
-                    customer9.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer9);
-            customer9.setBounds(35, 430, 175, 100);
-
-            //======== customer10 ========
-            {
-                customer10.setBackground(SystemColor.menu);
-                customer10.setLayout(null);
-
-                //======== avatar10 ========
-                {
-                    avatar10.setBackground(Color.white);
-                    avatar10.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar10.getComponentCount(); i++) {
-                            Rectangle bounds = avatar10.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar10.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar10.setMinimumSize(preferredSize);
-                        avatar10.setPreferredSize(preferredSize);
-                    }
-                }
-                customer10.add(avatar10);
-                avatar10.setBounds(10, 10, 75, 75);
-
-                //---- firstName10 ----
-                firstName10.setText("First Name");
-                firstName10.setFont(firstName10.getFont().deriveFont(firstName10.getFont().getStyle() | Font.BOLD, firstName10.getFont().getSize() + 2f));
-                firstName10.setBackground(SystemColor.menu);
-                customer10.add(firstName10);
-                firstName10.setBounds(90, 10, 80, firstName10.getPreferredSize().height);
-
-                //---- lastName10 ----
-                lastName10.setText("Last Name");
-                lastName10.setFont(lastName10.getFont().deriveFont(lastName10.getFont().getStyle() | Font.BOLD, lastName10.getFont().getSize() + 2f));
-                lastName10.setBackground(SystemColor.menu);
-                customer10.add(lastName10);
-                lastName10.setBounds(90, 27, 85, 17);
-
-                //---- moreButton10 ----
-                moreButton10.setText("MORE");
-                moreButton10.setBackground(Color.white);
-                moreButton10.setBorderPainted(false);
-                moreButton10.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer10.add(moreButton10);
-                moreButton10.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer10.getComponentCount(); i++) {
-                        Rectangle bounds = customer10.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer10.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer10.setMinimumSize(preferredSize);
-                    customer10.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer10);
-            customer10.setBounds(220, 430, 175, 100);
-
-            //======== customer11 ========
-            {
-                customer11.setBackground(SystemColor.menu);
-                customer11.setLayout(null);
-
-                //======== avatar11 ========
-                {
-                    avatar11.setBackground(Color.white);
-                    avatar11.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar11.getComponentCount(); i++) {
-                            Rectangle bounds = avatar11.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar11.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar11.setMinimumSize(preferredSize);
-                        avatar11.setPreferredSize(preferredSize);
-                    }
-                }
-                customer11.add(avatar11);
-                avatar11.setBounds(10, 10, 75, 75);
-
-                //---- firstName11 ----
-                firstName11.setText("First Name");
-                firstName11.setFont(firstName11.getFont().deriveFont(firstName11.getFont().getStyle() | Font.BOLD, firstName11.getFont().getSize() + 2f));
-                firstName11.setBackground(SystemColor.menu);
-                customer11.add(firstName11);
-                firstName11.setBounds(90, 10, 80, firstName11.getPreferredSize().height);
-
-                //---- lastName11 ----
-                lastName11.setText("Last Name");
-                lastName11.setFont(lastName11.getFont().deriveFont(lastName11.getFont().getStyle() | Font.BOLD, lastName11.getFont().getSize() + 2f));
-                lastName11.setBackground(SystemColor.menu);
-                customer11.add(lastName11);
-                lastName11.setBounds(90, 27, 85, 17);
-
-                //---- moreButton11 ----
-                moreButton11.setText("MORE");
-                moreButton11.setBackground(Color.white);
-                moreButton11.setBorderPainted(false);
-                moreButton11.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer11.add(moreButton11);
-                moreButton11.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer11.getComponentCount(); i++) {
-                        Rectangle bounds = customer11.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer11.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer11.setMinimumSize(preferredSize);
-                    customer11.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer11);
-            customer11.setBounds(405, 430, 175, 100);
-
-            //======== customer12 ========
-            {
-                customer12.setBackground(SystemColor.menu);
-                customer12.setLayout(null);
-
-                //======== avatar12 ========
-                {
-                    avatar12.setBackground(Color.white);
-                    avatar12.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar12.getComponentCount(); i++) {
-                            Rectangle bounds = avatar12.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar12.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar12.setMinimumSize(preferredSize);
-                        avatar12.setPreferredSize(preferredSize);
-                    }
-                }
-                customer12.add(avatar12);
-                avatar12.setBounds(10, 10, 75, 75);
-
-                //---- firstName12 ----
-                firstName12.setText("First Name");
-                firstName12.setFont(firstName12.getFont().deriveFont(firstName12.getFont().getStyle() | Font.BOLD, firstName12.getFont().getSize() + 2f));
-                firstName12.setBackground(SystemColor.menu);
-                customer12.add(firstName12);
-                firstName12.setBounds(90, 10, 80, firstName12.getPreferredSize().height);
-
-                //---- lastName12 ----
-                lastName12.setText("Last Name");
-                lastName12.setFont(lastName12.getFont().deriveFont(lastName12.getFont().getStyle() | Font.BOLD, lastName12.getFont().getSize() + 2f));
-                lastName12.setBackground(SystemColor.menu);
-                customer12.add(lastName12);
-                lastName12.setBounds(90, 27, 85, 17);
-
-                //---- moreButton12 ----
-                moreButton12.setText("MORE");
-                moreButton12.setBackground(Color.white);
-                moreButton12.setBorderPainted(false);
-                moreButton12.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer12.add(moreButton12);
-                moreButton12.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer12.getComponentCount(); i++) {
-                        Rectangle bounds = customer12.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer12.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer12.setMinimumSize(preferredSize);
-                    customer12.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer12);
-            customer12.setBounds(590, 430, 175, 100);
-
-            //======== customer13 ========
-            {
-                customer13.setBackground(SystemColor.menu);
-                customer13.setLayout(null);
-
-                //======== avatar13 ========
-                {
-                    avatar13.setBackground(Color.white);
-                    avatar13.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar13.getComponentCount(); i++) {
-                            Rectangle bounds = avatar13.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar13.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar13.setMinimumSize(preferredSize);
-                        avatar13.setPreferredSize(preferredSize);
-                    }
-                }
-                customer13.add(avatar13);
-                avatar13.setBounds(10, 10, 75, 75);
-
-                //---- firstName13 ----
-                firstName13.setText("First Name");
-                firstName13.setFont(firstName13.getFont().deriveFont(firstName13.getFont().getStyle() | Font.BOLD, firstName13.getFont().getSize() + 2f));
-                firstName13.setBackground(SystemColor.menu);
-                customer13.add(firstName13);
-                firstName13.setBounds(90, 10, 80, firstName13.getPreferredSize().height);
-
-                //---- lastName13 ----
-                lastName13.setText("Last Name");
-                lastName13.setFont(lastName13.getFont().deriveFont(lastName13.getFont().getStyle() | Font.BOLD, lastName13.getFont().getSize() + 2f));
-                lastName13.setBackground(SystemColor.menu);
-                customer13.add(lastName13);
-                lastName13.setBounds(90, 27, 85, 17);
-
-                //---- moreButton13 ----
-                moreButton13.setText("MORE");
-                moreButton13.setBackground(Color.white);
-                moreButton13.setBorderPainted(false);
-                moreButton13.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer13.add(moreButton13);
-                moreButton13.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer13.getComponentCount(); i++) {
-                        Rectangle bounds = customer13.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer13.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer13.setMinimumSize(preferredSize);
-                    customer13.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer13);
-            customer13.setBounds(35, 540, 175, 100);
-
-            //======== customer14 ========
-            {
-                customer14.setBackground(SystemColor.menu);
-                customer14.setLayout(null);
-
-                //======== avatar14 ========
-                {
-                    avatar14.setBackground(Color.white);
-                    avatar14.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar14.getComponentCount(); i++) {
-                            Rectangle bounds = avatar14.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar14.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar14.setMinimumSize(preferredSize);
-                        avatar14.setPreferredSize(preferredSize);
-                    }
-                }
-                customer14.add(avatar14);
-                avatar14.setBounds(10, 10, 75, 75);
-
-                //---- firstName14 ----
-                firstName14.setText("First Name");
-                firstName14.setFont(firstName14.getFont().deriveFont(firstName14.getFont().getStyle() | Font.BOLD, firstName14.getFont().getSize() + 2f));
-                firstName14.setBackground(SystemColor.menu);
-                customer14.add(firstName14);
-                firstName14.setBounds(90, 10, 80, firstName14.getPreferredSize().height);
-
-                //---- lastName14 ----
-                lastName14.setText("Last Name");
-                lastName14.setFont(lastName14.getFont().deriveFont(lastName14.getFont().getStyle() | Font.BOLD, lastName14.getFont().getSize() + 2f));
-                lastName14.setBackground(SystemColor.menu);
-                customer14.add(lastName14);
-                lastName14.setBounds(90, 27, 85, 17);
-
-                //---- moreButton14 ----
-                moreButton14.setText("MORE");
-                moreButton14.setBackground(Color.white);
-                moreButton14.setBorderPainted(false);
-                moreButton14.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer14.add(moreButton14);
-                moreButton14.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer14.getComponentCount(); i++) {
-                        Rectangle bounds = customer14.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer14.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer14.setMinimumSize(preferredSize);
-                    customer14.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer14);
-            customer14.setBounds(220, 540, 175, 100);
-
-            //======== customer15 ========
-            {
-                customer15.setBackground(SystemColor.menu);
-                customer15.setLayout(null);
-
-                //======== avatar15 ========
-                {
-                    avatar15.setBackground(Color.white);
-                    avatar15.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar15.getComponentCount(); i++) {
-                            Rectangle bounds = avatar15.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar15.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar15.setMinimumSize(preferredSize);
-                        avatar15.setPreferredSize(preferredSize);
-                    }
-                }
-                customer15.add(avatar15);
-                avatar15.setBounds(10, 10, 75, 75);
-
-                //---- firstName15 ----
-                firstName15.setText("First Name");
-                firstName15.setFont(firstName15.getFont().deriveFont(firstName15.getFont().getStyle() | Font.BOLD, firstName15.getFont().getSize() + 2f));
-                firstName15.setBackground(SystemColor.menu);
-                customer15.add(firstName15);
-                firstName15.setBounds(90, 10, 80, firstName15.getPreferredSize().height);
-
-                //---- lastName15 ----
-                lastName15.setText("Last Name");
-                lastName15.setFont(lastName15.getFont().deriveFont(lastName15.getFont().getStyle() | Font.BOLD, lastName15.getFont().getSize() + 2f));
-                lastName15.setBackground(SystemColor.menu);
-                customer15.add(lastName15);
-                lastName15.setBounds(90, 27, 85, 17);
-
-                //---- moreButton15 ----
-                moreButton15.setText("MORE");
-                moreButton15.setBackground(Color.white);
-                moreButton15.setBorderPainted(false);
-                moreButton15.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer15.add(moreButton15);
-                moreButton15.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer15.getComponentCount(); i++) {
-                        Rectangle bounds = customer15.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer15.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer15.setMinimumSize(preferredSize);
-                    customer15.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer15);
-            customer15.setBounds(405, 540, 175, 100);
-
-            //======== customer16 ========
-            {
-                customer16.setBackground(SystemColor.menu);
-                customer16.setLayout(null);
-
-                //======== avatar16 ========
-                {
-                    avatar16.setBackground(Color.white);
-                    avatar16.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < avatar16.getComponentCount(); i++) {
-                            Rectangle bounds = avatar16.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = avatar16.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        avatar16.setMinimumSize(preferredSize);
-                        avatar16.setPreferredSize(preferredSize);
-                    }
-                }
-                customer16.add(avatar16);
-                avatar16.setBounds(10, 10, 75, 75);
-
-                //---- firstName16 ----
-                firstName16.setText("First Name");
-                firstName16.setFont(firstName16.getFont().deriveFont(firstName16.getFont().getStyle() | Font.BOLD, firstName16.getFont().getSize() + 2f));
-                firstName16.setBackground(SystemColor.menu);
-                customer16.add(firstName16);
-                firstName16.setBounds(90, 10, 80, firstName16.getPreferredSize().height);
-
-                //---- lastName16 ----
-                lastName16.setText("Last Name");
-                lastName16.setFont(lastName16.getFont().deriveFont(lastName16.getFont().getStyle() | Font.BOLD, lastName16.getFont().getSize() + 2f));
-                lastName16.setBackground(SystemColor.menu);
-                customer16.add(lastName16);
-                lastName16.setBounds(90, 27, 85, 17);
-
-                //---- moreButton16 ----
-                moreButton16.setText("MORE");
-                moreButton16.setBackground(Color.white);
-                moreButton16.setBorderPainted(false);
-                moreButton16.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                customer16.add(moreButton16);
-                moreButton16.setBounds(100, 60, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < customer16.getComponentCount(); i++) {
-                        Rectangle bounds = customer16.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = customer16.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    customer16.setMinimumSize(preferredSize);
-                    customer16.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(customer16);
-            customer16.setBounds(590, 540, 175, 100);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel coachName;
-    private JButton customerNextButton;
-    private JPanel customer1;
-    private JPanel avatar1;
-    private JLabel firstName1;
-    private JLabel lastName1;
-    private JButton moreButton1;
-    private JPanel customer2;
-    private JPanel avatar2;
-    private JLabel firstName2;
-    private JLabel lastName2;
-    private JButton moreButton2;
-    private JPanel customer3;
-    private JPanel avatar3;
-    private JLabel firstName3;
-    private JLabel lastName3;
-    private JButton moreButton3;
-    private JPanel customer4;
-    private JPanel avatar4;
-    private JLabel firstName4;
-    private JLabel lastName4;
-    private JButton moreButton4;
-    private JPanel customer5;
-    private JPanel avatar5;
-    private JLabel firstName5;
-    private JLabel lastName5;
-    private JButton moreButton5;
-    private JPanel customer6;
-    private JPanel avatar6;
-    private JLabel firstName6;
-    private JLabel lastName6;
-    private JButton moreButton6;
-    private JPanel customer7;
-    private JPanel avatar7;
-    private JLabel firstName7;
-    private JLabel lastName7;
-    private JButton moreButton7;
-    private JPanel customer8;
-    private JPanel avatar8;
-    private JLabel firstName8;
-    private JLabel lastName8;
-    private JButton moreButton8;
-    private JLabel decorationLine2;
-    private JLabel coachName2;
-    private JButton coachNextButton;
-    private JPanel customer9;
-    private JPanel avatar9;
-    private JLabel firstName9;
-    private JLabel lastName9;
-    private JButton moreButton9;
-    private JPanel customer10;
-    private JPanel avatar10;
-    private JLabel firstName10;
-    private JLabel lastName10;
-    private JButton moreButton10;
-    private JPanel customer11;
-    private JPanel avatar11;
-    private JLabel firstName11;
-    private JLabel lastName11;
-    private JButton moreButton11;
-    private JPanel customer12;
-    private JPanel avatar12;
-    private JLabel firstName12;
-    private JLabel lastName12;
-    private JButton moreButton12;
-    private JPanel customer13;
-    private JPanel avatar13;
-    private JLabel firstName13;
-    private JLabel lastName13;
-    private JButton moreButton13;
-    private JPanel customer14;
-    private JPanel avatar14;
-    private JLabel firstName14;
-    private JLabel lastName14;
-    private JButton moreButton14;
-    private JPanel customer15;
-    private JPanel avatar15;
-    private JLabel firstName15;
-    private JLabel lastName15;
-    private JButton moreButton15;
-    private JPanel customer16;
-    private JPanel avatar16;
-    private JLabel firstName16;
-    private JLabel lastName16;
-    private JButton moreButton16;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        UserManageAllAdmin.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    UserManageAllAdmin frame = new UserManageAllAdmin();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/UploadModify.java
===================================================================
diff --git a/src/main/java/GUI/Coach/UploadModify.java b/src/main/java/GUI/Coach/UploadModify.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/UploadModify.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,178 +0,0 @@
-package GUI.Coach;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 11:08:16 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class UploadModify extends JFrame {
-    public UploadModify() {
-        initComponents();
-    }
-
-    private void finishButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonDetailCoach.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        finishButton = new JButton();
-        label1 = new JLabel();
-        textField1 = new JTextField();
-        label2 = new JLabel();
-        scrollPane1 = new JScrollPane();
-        textArea1 = new JTextArea();
-        finishButton2 = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- finishButton ----
-            finishButton.setBorderPainted(false);
-            finishButton.setBackground(SystemColor.textHighlight);
-            finishButton.setText("UPLOAD");
-            finishButton.setForeground(Color.white);
-            finishButton.addActionListener(e -> finishButtonActionPerformed(e));
-            body.add(finishButton);
-            finishButton.setBounds(35, 585, 90, 40);
-
-            //---- label1 ----
-            label1.setText("Lesson Title");
-            label1.setBackground(Color.white);
-            label1.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-            body.add(label1);
-            label1.setBounds(35, 135, 130, label1.getPreferredSize().height);
-
-            //---- textField1 ----
-            textField1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 16));
-            textField1.setMargin(new Insets(2, 10, 2, 6));
-            body.add(textField1);
-            textField1.setBounds(35, 165, 730, textField1.getPreferredSize().height);
-
-            //---- label2 ----
-            label2.setText("Lesson Description");
-            label2.setBackground(Color.white);
-            label2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-            body.add(label2);
-            label2.setBounds(35, 205, 265, 24);
-
-            //======== scrollPane1 ========
-            {
-
-                //---- textArea1 ----
-                textArea1.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 16));
-                textArea1.setMargin(new Insets(5, 10, 5, 10));
-                scrollPane1.setViewportView(textArea1);
-            }
-            body.add(scrollPane1);
-            scrollPane1.setBounds(35, 235, 730, 235);
-
-            //---- finishButton2 ----
-            finishButton2.setBorderPainted(false);
-            finishButton2.setBackground(new Color(220, 220, 220));
-            finishButton2.setText("SELECT A FILE");
-            finishButton2.setForeground(Color.white);
-            body.add(finishButton2);
-            finishButton2.setBounds(35, 485, 175, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JButton finishButton;
-    private JLabel label1;
-    private JTextField textField1;
-    private JLabel label2;
-    private JScrollPane scrollPane1;
-    private JTextArea textArea1;
-    private JButton finishButton2;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        UploadModify.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    UploadModify frame = new UploadModify();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Other/SignUp.java
===================================================================
diff --git a/src/main/java/GUI/Other/SignUp.java b/src/main/java/GUI/Other/SignUp.java
deleted file mode 100644
--- a/src/main/java/GUI/Other/SignUp.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,189 +0,0 @@
-package GUI.Other;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 16:12:35 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class SignUp extends JFrame {
-    public SignUp() {
-        initComponents();
-    }
-
-    private void signUpButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        Login.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        signUPIcon = new JLabel();
-        signUpButton = new JButton();
-        userButton = new JRadioButton();
-        adminButton = new JRadioButton();
-        coachButton = new JRadioButton();
-        username = new JTextField();
-        password = new JPasswordField();
-        email = new JTextField();
-        policy = new JButton();
-        agree = new JCheckBox();
-
-        //======== this ========
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setLayout(null);
-
-            //---- signUPIcon ----
-            signUPIcon.setText("SIGN UP");
-            signUPIcon.setBackground(Color.white);
-            signUPIcon.setHorizontalAlignment(SwingConstants.CENTER);
-            signUPIcon.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            body.add(signUPIcon);
-            signUPIcon.setBounds(100, 0, 200, 60);
-
-            //---- signUpButton ----
-            signUpButton.setText("SIGN UP");
-            signUpButton.setBackground(new Color(217, 0, 27));
-            signUpButton.setForeground(Color.white);
-            signUpButton.setBorderPainted(false);
-            signUpButton.addActionListener(e -> signUpButtonActionPerformed(e));
-            body.add(signUpButton);
-            signUpButton.setBounds(50, 410, 300, 50);
-
-            //---- userButton ----
-            userButton.setText("User");
-            userButton.setBackground(UIManager.getColor("Button.darcula.disabledText.shadow"));
-            userButton.setSelected(true);
-            body.add(userButton);
-            userButton.setBounds(new Rectangle(new Point(55, 95), userButton.getPreferredSize()));
-
-            //---- adminButton ----
-            adminButton.setText("GUI/Admin");
-            adminButton.setBackground(UIManager.getColor("Button.darcula.disabledText.shadow"));
-            body.add(adminButton);
-            adminButton.setBounds(280, 95, 70, 21);
-
-            //---- coachButton ----
-            coachButton.setText("Coach");
-            coachButton.setBackground(UIManager.getColor("Button.darcula.disabledText.shadow"));
-            body.add(coachButton);
-            coachButton.setBounds(165, 95, 70, 21);
-
-            //---- username ----
-            username.setBackground(new Color(242, 242, 242));
-            username.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            body.add(username);
-            username.setBounds(50, 130, 300, 50);
-
-            //---- password ----
-            password.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 18));
-            password.setBackground(new Color(242, 242, 242));
-            body.add(password);
-            password.setBounds(50, 250, 300, 50);
-
-            //---- email ----
-            email.setBackground(new Color(242, 242, 242));
-            email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            body.add(email);
-            email.setBounds(50, 190, 300, 50);
-
-            //---- policy ----
-            policy.setText("Terms & Conditions");
-            policy.setBackground(Color.white);
-            policy.setBorderPainted(false);
-            policy.setForeground(new Color(22, 155, 213));
-            policy.setHorizontalAlignment(SwingConstants.LEFT);
-            body.add(policy);
-            policy.setBounds(213, 300, 157, 50);
-
-            //---- agree ----
-            agree.setText("I have read and agree to ");
-            agree.setBackground(Color.white);
-            body.add(agree);
-            agree.setBounds(50, 300, 170, 50);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 400, 675);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-
-        //---- UserType ----
-        var UserType = new ButtonGroup();
-        UserType.add(userButton);
-        UserType.add(adminButton);
-        UserType.add(coachButton);
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel signUPIcon;
-    private JButton signUpButton;
-    private JRadioButton userButton;
-    private JRadioButton adminButton;
-    private JRadioButton coachButton;
-    private JTextField username;
-    private JPasswordField password;
-    private JTextField email;
-    private JButton policy;
-    private JCheckBox agree;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        SignUp.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    SignUp frame = new SignUp();
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/ViewCoachProfile.java
===================================================================
diff --git a/src/main/java/GUI/Coach/ViewCoachProfile.java b/src/main/java/GUI/Coach/ViewCoachProfile.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/ViewCoachProfile.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,485 +0,0 @@
-package GUI.Coach;
-
-import java.awt.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 10:50:20 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class ViewCoachProfile extends JFrame {
-    public ViewCoachProfile() {
-        initComponents();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        uidGym = new JLabel();
-        avatar = new JButton();
-        nameTip = new JLabel();
-        emailTip = new JLabel();
-        phoneNumberTip = new JLabel();
-        genderTip = new JLabel();
-        name = new JLabel();
-        email = new JLabel();
-        phoneNumber = new JLabel();
-        gender = new JLabel();
-        decorationLine2 = new JPanel();
-        decorationLine3 = new JPanel();
-        decorationLine4 = new JPanel();
-        decorationLine5 = new JPanel();
-        decorationLine6 = new JPanel();
-        decorationLine7 = new JPanel();
-        decorationLine8 = new JPanel();
-        decorationLine9 = new JPanel();
-        decorationLine10 = new JPanel();
-        decorationLine11 = new JPanel();
-        editButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- uidGym ----
-            uidGym.setText("UID:88888888 GYM: Muscle King ");
-            uidGym.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            uidGym.setForeground(Color.gray);
-            uidGym.setHorizontalAlignment(SwingConstants.RIGHT);
-            body.add(uidGym);
-            uidGym.setBounds(470, 93, 300, 24);
-
-            //---- avatar ----
-            avatar.setBackground(SystemColor.textHighlight);
-            avatar.setBorderPainted(false);
-            body.add(avatar);
-            avatar.setBounds(295, 145, 150, 150);
-
-            //---- nameTip ----
-            nameTip.setText("Name");
-            nameTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            nameTip.setBackground(Color.white);
-            nameTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            nameTip.setForeground(Color.gray);
-            body.add(nameTip);
-            nameTip.setBounds(175, 340, 175, nameTip.getPreferredSize().height);
-
-            //---- emailTip ----
-            emailTip.setText("Email");
-            emailTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            emailTip.setBackground(Color.white);
-            emailTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            emailTip.setForeground(Color.gray);
-            body.add(emailTip);
-            emailTip.setBounds(175, 400, 175, 23);
-
-            //---- phoneNumberTip ----
-            phoneNumberTip.setText("Phone Number");
-            phoneNumberTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            phoneNumberTip.setBackground(Color.white);
-            phoneNumberTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumberTip.setForeground(Color.gray);
-            body.add(phoneNumberTip);
-            phoneNumberTip.setBounds(175, 460, 175, 23);
-
-            //---- genderTip ----
-            genderTip.setText("Gender");
-            genderTip.setHorizontalAlignment(SwingConstants.RIGHT);
-            genderTip.setBackground(Color.white);
-            genderTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            genderTip.setForeground(Color.gray);
-            body.add(genderTip);
-            genderTip.setBounds(175, 520, 175, 23);
-
-            //---- name ----
-            name.setText("Your Name");
-            name.setHorizontalAlignment(SwingConstants.LEFT);
-            name.setBackground(Color.white);
-            name.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            name.setForeground(Color.gray);
-            body.add(name);
-            name.setBounds(390, 340, 175, 23);
-
-            //---- email ----
-            email.setText("username@example.com");
-            email.setHorizontalAlignment(SwingConstants.LEFT);
-            email.setBackground(Color.white);
-            email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            email.setForeground(Color.gray);
-            body.add(email);
-            email.setBounds(390, 400, 255, 23);
-
-            //---- phoneNumber ----
-            phoneNumber.setText("+86 123 4567 8910");
-            phoneNumber.setHorizontalAlignment(SwingConstants.LEFT);
-            phoneNumber.setBackground(Color.white);
-            phoneNumber.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            phoneNumber.setForeground(Color.gray);
-            body.add(phoneNumber);
-            phoneNumber.setBounds(390, 460, 255, 23);
-
-            //---- gender ----
-            gender.setText("Female");
-            gender.setHorizontalAlignment(SwingConstants.LEFT);
-            gender.setBackground(Color.white);
-            gender.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 17));
-            gender.setForeground(Color.gray);
-            body.add(gender);
-            gender.setBounds(390, 520, 255, 23);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(new Color(220, 220, 220));
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 380, 315, 2);
-
-            //======== decorationLine3 ========
-            {
-                decorationLine3.setBackground(new Color(220, 220, 220));
-                decorationLine3.setBorder(null);
-                decorationLine3.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine3.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine3.setMinimumSize(preferredSize);
-                    decorationLine3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine3);
-            decorationLine3.setBounds(35, 440, 315, 2);
-
-            //======== decorationLine4 ========
-            {
-                decorationLine4.setBackground(new Color(220, 220, 220));
-                decorationLine4.setBorder(null);
-                decorationLine4.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine4.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine4.setMinimumSize(preferredSize);
-                    decorationLine4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine4);
-            decorationLine4.setBounds(35, 500, 315, 2);
-
-            //======== decorationLine5 ========
-            {
-                decorationLine5.setBackground(new Color(220, 220, 220));
-                decorationLine5.setBorder(null);
-                decorationLine5.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine5.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine5.setMinimumSize(preferredSize);
-                    decorationLine5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine5);
-            decorationLine5.setBounds(35, 557, 315, 2);
-
-            //======== decorationLine6 ========
-            {
-                decorationLine6.setBackground(new Color(220, 220, 220));
-                decorationLine6.setBorder(null);
-                decorationLine6.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine6.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine6.setMinimumSize(preferredSize);
-                    decorationLine6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine6);
-            decorationLine6.setBounds(35, 325, 315, 2);
-
-            //======== decorationLine7 ========
-            {
-                decorationLine7.setBackground(new Color(220, 220, 220));
-                decorationLine7.setBorder(null);
-                decorationLine7.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine7.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine7.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine7.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine7.setMinimumSize(preferredSize);
-                    decorationLine7.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine7);
-            decorationLine7.setBounds(390, 325, 375, 2);
-
-            //======== decorationLine8 ========
-            {
-                decorationLine8.setBackground(new Color(220, 220, 220));
-                decorationLine8.setBorder(null);
-                decorationLine8.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine8.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine8.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine8.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine8.setMinimumSize(preferredSize);
-                    decorationLine8.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine8);
-            decorationLine8.setBounds(390, 380, 375, 2);
-
-            //======== decorationLine9 ========
-            {
-                decorationLine9.setBackground(new Color(220, 220, 220));
-                decorationLine9.setBorder(null);
-                decorationLine9.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine9.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine9.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine9.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine9.setMinimumSize(preferredSize);
-                    decorationLine9.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine9);
-            decorationLine9.setBounds(390, 440, 375, 2);
-
-            //======== decorationLine10 ========
-            {
-                decorationLine10.setBackground(new Color(220, 220, 220));
-                decorationLine10.setBorder(null);
-                decorationLine10.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine10.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine10.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine10.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine10.setMinimumSize(preferredSize);
-                    decorationLine10.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine10);
-            decorationLine10.setBounds(390, 500, 375, 2);
-
-            //======== decorationLine11 ========
-            {
-                decorationLine11.setBackground(new Color(220, 220, 220));
-                decorationLine11.setBorder(null);
-                decorationLine11.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine11.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine11.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine11.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine11.setMinimumSize(preferredSize);
-                    decorationLine11.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine11);
-            decorationLine11.setBounds(390, 557, 375, 2);
-
-            //---- editButton ----
-            editButton.setBorderPainted(false);
-            editButton.setBackground(SystemColor.textHighlight);
-            editButton.setText("LESSON");
-            editButton.setForeground(Color.white);
-            body.add(editButton);
-            editButton.setBounds(35, 590, 90, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel uidGym;
-    private JButton avatar;
-    private JLabel nameTip;
-    private JLabel emailTip;
-    private JLabel phoneNumberTip;
-    private JLabel genderTip;
-    private JLabel name;
-    private JLabel email;
-    private JLabel phoneNumber;
-    private JLabel gender;
-    private JPanel decorationLine2;
-    private JPanel decorationLine3;
-    private JPanel decorationLine4;
-    private JPanel decorationLine5;
-    private JPanel decorationLine6;
-    private JPanel decorationLine7;
-    private JPanel decorationLine8;
-    private JPanel decorationLine9;
-    private JPanel decorationLine10;
-    private JPanel decorationLine11;
-    private JButton editButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        ViewCoachProfile.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    ViewCoachProfile frame = new ViewCoachProfile();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Member/MyLessonMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/MyLessonMember.java b/src/main/java/GUI/Member/MyLessonMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/MyLessonMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,680 +0,0 @@
-package GUI.Member;
-
-import GUI.Coach.MyLessonCoach;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 12:10:09 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class MyLessonMember extends JFrame {
-    public MyLessonMember() {
-        initComponents();
-    }
-
-    private void moreButton1ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonDetailCustomer.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lesson1 = new JPanel();
-        lessonPicture1 = new JPanel();
-        lessonName = new JLabel();
-        lessonLevel1 = new JLabel();
-        coachName1 = new JLabel();
-        moreButton1 = new JButton();
-        lesson2 = new JPanel();
-        lessonName2 = new JLabel();
-        lessonLevel2 = new JLabel();
-        coachName2 = new JLabel();
-        lessonPicture2 = new JPanel();
-        moreButton2 = new JButton();
-        lesson3 = new JPanel();
-        lessonName3 = new JLabel();
-        lessonLevel3 = new JLabel();
-        moreButton3 = new JButton();
-        coachName3 = new JLabel();
-        lessonPicture3 = new JPanel();
-        lesson4 = new JPanel();
-        lessonName4 = new JLabel();
-        lessonLevel4 = new JLabel();
-        moreButton4 = new JButton();
-        coachName4 = new JLabel();
-        lessonPicture4 = new JPanel();
-        lesson5 = new JPanel();
-        lessonName5 = new JLabel();
-        lessonLevel5 = new JLabel();
-        coachName5 = new JLabel();
-        lessonPicture5 = new JPanel();
-        moreButton5 = new JButton();
-        lesson6 = new JPanel();
-        lessonPicture6 = new JPanel();
-        lessonName6 = new JLabel();
-        lessonLevel6 = new JLabel();
-        coachName6 = new JLabel();
-        moreButton6 = new JButton();
-        search = new JTextField();
-        searchButton = new JButton();
-        nextPageButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //======== lesson1 ========
-            {
-                lesson1.setBackground(SystemColor.menu);
-                lesson1.setLayout(null);
-
-                //======== lessonPicture1 ========
-                {
-                    lessonPicture1.setBackground(SystemColor.activeCaption);
-                    lessonPicture1.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture1.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture1.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture1.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture1.setMinimumSize(preferredSize);
-                        lessonPicture1.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson1.add(lessonPicture1);
-                lessonPicture1.setBounds(0, 0, 250, 160);
-
-                //---- lessonName ----
-                lessonName.setText("Lesson Name");
-                lessonName.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName.setBackground(SystemColor.menu);
-                lesson1.add(lessonName);
-                lessonName.setBounds(5, 165, 195, lessonName.getPreferredSize().height);
-
-                //---- lessonLevel1 ----
-                lessonLevel1.setText("Lesson Level");
-                lessonLevel1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel1.setBackground(SystemColor.menu);
-                lessonLevel1.setForeground(new Color(150, 150, 150));
-                lesson1.add(lessonLevel1);
-                lessonLevel1.setBounds(5, 190, 85, 17);
-
-                //---- coachName1 ----
-                coachName1.setText("Coach Name");
-                coachName1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName1.setBackground(SystemColor.menu);
-                coachName1.setForeground(new Color(120, 120, 120));
-                lesson1.add(coachName1);
-                coachName1.setBounds(5, 225, 85, 17);
-
-                //---- moreButton1 ----
-                moreButton1.setText("MORE");
-                moreButton1.setBackground(Color.white);
-                moreButton1.setBorderPainted(false);
-                moreButton1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                moreButton1.addActionListener(e -> moreButton1ActionPerformed(e));
-                lesson1.add(moreButton1);
-                moreButton1.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson1.getComponentCount(); i++) {
-                        Rectangle bounds = lesson1.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson1.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson1.setMinimumSize(preferredSize);
-                    lesson1.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson1);
-            lesson1.setBounds(25, 125, 240, 250);
-
-            //======== lesson2 ========
-            {
-                lesson2.setBackground(SystemColor.menu);
-                lesson2.setLayout(null);
-
-                //---- lessonName2 ----
-                lessonName2.setText("Lesson Name");
-                lessonName2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName2.setBackground(SystemColor.menu);
-                lesson2.add(lessonName2);
-                lessonName2.setBounds(5, 165, 195, lessonName2.getPreferredSize().height);
-
-                //---- lessonLevel2 ----
-                lessonLevel2.setText("Lesson Level");
-                lessonLevel2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel2.setBackground(SystemColor.menu);
-                lessonLevel2.setForeground(new Color(150, 150, 150));
-                lesson2.add(lessonLevel2);
-                lessonLevel2.setBounds(5, 190, 85, 17);
-
-                //---- coachName2 ----
-                coachName2.setText("Coach Name");
-                coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName2.setBackground(SystemColor.menu);
-                coachName2.setForeground(new Color(120, 120, 120));
-                lesson2.add(coachName2);
-                coachName2.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture2 ========
-                {
-                    lessonPicture2.setBackground(SystemColor.activeCaption);
-                    lessonPicture2.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture2.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture2.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture2.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture2.setMinimumSize(preferredSize);
-                        lessonPicture2.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson2.add(lessonPicture2);
-                lessonPicture2.setBounds(0, 0, 250, 160);
-
-                //---- moreButton2 ----
-                moreButton2.setText("MORE");
-                moreButton2.setBackground(Color.white);
-                moreButton2.setBorderPainted(false);
-                moreButton2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson2.add(moreButton2);
-                moreButton2.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson2.getComponentCount(); i++) {
-                        Rectangle bounds = lesson2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson2.setMinimumSize(preferredSize);
-                    lesson2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson2);
-            lesson2.setBounds(280, 125, 240, 250);
-
-            //======== lesson3 ========
-            {
-                lesson3.setBackground(SystemColor.menu);
-                lesson3.setLayout(null);
-
-                //---- lessonName3 ----
-                lessonName3.setText("Lesson Name");
-                lessonName3.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName3.setBackground(SystemColor.menu);
-                lesson3.add(lessonName3);
-                lessonName3.setBounds(5, 165, 195, lessonName3.getPreferredSize().height);
-
-                //---- lessonLevel3 ----
-                lessonLevel3.setText("Lesson Level");
-                lessonLevel3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel3.setBackground(SystemColor.menu);
-                lessonLevel3.setForeground(new Color(150, 150, 150));
-                lesson3.add(lessonLevel3);
-                lessonLevel3.setBounds(5, 190, 85, 17);
-
-                //---- moreButton3 ----
-                moreButton3.setText("MORE");
-                moreButton3.setBackground(Color.white);
-                moreButton3.setBorderPainted(false);
-                moreButton3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson3.add(moreButton3);
-                moreButton3.setBounds(170, 220, 65, 25);
-
-                //---- coachName3 ----
-                coachName3.setText("Coach Name");
-                coachName3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName3.setBackground(SystemColor.menu);
-                coachName3.setForeground(new Color(120, 120, 120));
-                lesson3.add(coachName3);
-                coachName3.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture3 ========
-                {
-                    lessonPicture3.setBackground(SystemColor.activeCaption);
-                    lessonPicture3.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture3.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture3.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture3.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture3.setMinimumSize(preferredSize);
-                        lessonPicture3.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson3.add(lessonPicture3);
-                lessonPicture3.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson3.getComponentCount(); i++) {
-                        Rectangle bounds = lesson3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson3.setMinimumSize(preferredSize);
-                    lesson3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson3);
-            lesson3.setBounds(535, 125, 240, 250);
-
-            //======== lesson4 ========
-            {
-                lesson4.setBackground(SystemColor.menu);
-                lesson4.setLayout(null);
-
-                //---- lessonName4 ----
-                lessonName4.setText("Lesson Name");
-                lessonName4.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName4.setBackground(SystemColor.menu);
-                lesson4.add(lessonName4);
-                lessonName4.setBounds(5, 165, 195, lessonName4.getPreferredSize().height);
-
-                //---- lessonLevel4 ----
-                lessonLevel4.setText("Lesson Level");
-                lessonLevel4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel4.setBackground(SystemColor.menu);
-                lessonLevel4.setForeground(new Color(150, 150, 150));
-                lesson4.add(lessonLevel4);
-                lessonLevel4.setBounds(5, 190, 85, 17);
-
-                //---- moreButton4 ----
-                moreButton4.setText("MORE");
-                moreButton4.setBackground(Color.white);
-                moreButton4.setBorderPainted(false);
-                moreButton4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson4.add(moreButton4);
-                moreButton4.setBounds(170, 220, 65, 25);
-
-                //---- coachName4 ----
-                coachName4.setText("Coach Name");
-                coachName4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName4.setBackground(SystemColor.menu);
-                coachName4.setForeground(new Color(120, 120, 120));
-                lesson4.add(coachName4);
-                coachName4.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture4 ========
-                {
-                    lessonPicture4.setBackground(SystemColor.activeCaption);
-                    lessonPicture4.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture4.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture4.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture4.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture4.setMinimumSize(preferredSize);
-                        lessonPicture4.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson4.add(lessonPicture4);
-                lessonPicture4.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson4.getComponentCount(); i++) {
-                        Rectangle bounds = lesson4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson4.setMinimumSize(preferredSize);
-                    lesson4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson4);
-            lesson4.setBounds(535, 385, 240, 250);
-
-            //======== lesson5 ========
-            {
-                lesson5.setBackground(SystemColor.menu);
-                lesson5.setLayout(null);
-
-                //---- lessonName5 ----
-                lessonName5.setText("Lesson Name");
-                lessonName5.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName5.setBackground(SystemColor.menu);
-                lesson5.add(lessonName5);
-                lessonName5.setBounds(5, 165, 195, lessonName5.getPreferredSize().height);
-
-                //---- lessonLevel5 ----
-                lessonLevel5.setText("Lesson Level");
-                lessonLevel5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel5.setBackground(SystemColor.menu);
-                lessonLevel5.setForeground(new Color(150, 150, 150));
-                lesson5.add(lessonLevel5);
-                lessonLevel5.setBounds(5, 190, 85, 17);
-
-                //---- coachName5 ----
-                coachName5.setText("Coach Name");
-                coachName5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName5.setBackground(SystemColor.menu);
-                coachName5.setForeground(new Color(120, 120, 120));
-                lesson5.add(coachName5);
-                coachName5.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture5 ========
-                {
-                    lessonPicture5.setBackground(SystemColor.activeCaption);
-                    lessonPicture5.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture5.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture5.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture5.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture5.setMinimumSize(preferredSize);
-                        lessonPicture5.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson5.add(lessonPicture5);
-                lessonPicture5.setBounds(0, 0, 250, 160);
-
-                //---- moreButton5 ----
-                moreButton5.setText("MORE");
-                moreButton5.setBackground(Color.white);
-                moreButton5.setBorderPainted(false);
-                moreButton5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson5.add(moreButton5);
-                moreButton5.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson5.getComponentCount(); i++) {
-                        Rectangle bounds = lesson5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson5.setMinimumSize(preferredSize);
-                    lesson5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson5);
-            lesson5.setBounds(280, 385, 240, 250);
-
-            //======== lesson6 ========
-            {
-                lesson6.setBackground(SystemColor.menu);
-                lesson6.setLayout(null);
-
-                //======== lessonPicture6 ========
-                {
-                    lessonPicture6.setBackground(SystemColor.activeCaption);
-                    lessonPicture6.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture6.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture6.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture6.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture6.setMinimumSize(preferredSize);
-                        lessonPicture6.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson6.add(lessonPicture6);
-                lessonPicture6.setBounds(0, 0, 250, 160);
-
-                //---- lessonName6 ----
-                lessonName6.setText("Lesson Name");
-                lessonName6.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName6.setBackground(SystemColor.menu);
-                lesson6.add(lessonName6);
-                lessonName6.setBounds(5, 165, 195, lessonName6.getPreferredSize().height);
-
-                //---- lessonLevel6 ----
-                lessonLevel6.setText("Lesson Level");
-                lessonLevel6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel6.setBackground(SystemColor.menu);
-                lessonLevel6.setForeground(new Color(150, 150, 150));
-                lesson6.add(lessonLevel6);
-                lessonLevel6.setBounds(5, 190, 85, 17);
-
-                //---- coachName6 ----
-                coachName6.setText("Coach Name");
-                coachName6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName6.setBackground(SystemColor.menu);
-                coachName6.setForeground(new Color(120, 120, 120));
-                lesson6.add(coachName6);
-                coachName6.setBounds(5, 225, 85, 17);
-
-                //---- moreButton6 ----
-                moreButton6.setText("MORE");
-                moreButton6.setBackground(Color.white);
-                moreButton6.setBorderPainted(false);
-                moreButton6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson6.add(moreButton6);
-                moreButton6.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson6.getComponentCount(); i++) {
-                        Rectangle bounds = lesson6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson6.setMinimumSize(preferredSize);
-                    lesson6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson6);
-            lesson6.setBounds(25, 385, 240, 250);
-
-            //---- search ----
-            search.setBackground(SystemColor.menu);
-            search.setBorder(null);
-            search.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            body.add(search);
-            search.setBounds(300, 45, 300, 40);
-
-            //---- searchButton ----
-            searchButton.setBorderPainted(false);
-            searchButton.setBackground(SystemColor.textHighlight);
-            body.add(searchButton);
-            searchButton.setBounds(600, 45, 40, 40);
-
-            //---- nextPageButton ----
-            nextPageButton.setBorderPainted(false);
-            nextPageButton.setBackground(new Color(217, 0, 27));
-            nextPageButton.setText("NEXT PAGE");
-            nextPageButton.setForeground(Color.white);
-            body.add(nextPageButton);
-            nextPageButton.setBounds(655, 45, 120, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel lesson1;
-    private JPanel lessonPicture1;
-    private JLabel lessonName;
-    private JLabel lessonLevel1;
-    private JLabel coachName1;
-    private JButton moreButton1;
-    private JPanel lesson2;
-    private JLabel lessonName2;
-    private JLabel lessonLevel2;
-    private JLabel coachName2;
-    private JPanel lessonPicture2;
-    private JButton moreButton2;
-    private JPanel lesson3;
-    private JLabel lessonName3;
-    private JLabel lessonLevel3;
-    private JButton moreButton3;
-    private JLabel coachName3;
-    private JPanel lessonPicture3;
-    private JPanel lesson4;
-    private JLabel lessonName4;
-    private JLabel lessonLevel4;
-    private JButton moreButton4;
-    private JLabel coachName4;
-    private JPanel lessonPicture4;
-    private JPanel lesson5;
-    private JLabel lessonName5;
-    private JLabel lessonLevel5;
-    private JLabel coachName5;
-    private JPanel lessonPicture5;
-    private JButton moreButton5;
-    private JPanel lesson6;
-    private JPanel lessonPicture6;
-    private JLabel lessonName6;
-    private JLabel lessonLevel6;
-    private JLabel coachName6;
-    private JButton moreButton6;
-    private JTextField search;
-    private JButton searchButton;
-    private JButton nextPageButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        MyLessonCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    MyLessonCoach frame = new MyLessonCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-1100/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Member/EditProfileMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/EditProfileMember.java b/src/main/java/GUI/Member/EditProfileMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/EditProfileMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,405 +0,0 @@
-/*
- * Created by JFormDesigner on Fri Apr 09 14:22:20 CST 2021
- */
-
-package GUI.Member;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-
-/**
- * @author Anna
- */
-public class EditProfileMember extends JFrame {
-    public EditProfileMember() {
-        initComponents();
-    }
-
-    private void finishButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        ProfileMember.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        finishButton = new JButton();
-        decorationLine2 = new JPanel();
-        nameContainer = new JPanel();
-        nameTip = new JLabel();
-        name = new JTextField();
-        emailContainer = new JPanel();
-        emailTip = new JLabel();
-        email = new JTextField();
-        phoneNumberContainer = new JPanel();
-        phoneNumberTip = new JLabel();
-        phoneNumber = new JTextField();
-        currentPasswordContainer = new JPanel();
-        currentPasswordTip = new JLabel();
-        currentPassword = new JPasswordField();
-        newPasswordContainer = new JPanel();
-        newPasswordTip = new JLabel();
-        newPassword = new JPasswordField();
-        confirmPasswordContainer = new JPanel();
-        confirmPasswordTip = new JLabel();
-        confirmPassword = new JPasswordField();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Edit Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- finishButton ----
-            finishButton.setBorderPainted(false);
-            finishButton.setBackground(SystemColor.textHighlight);
-            finishButton.setText("FINISH");
-            finishButton.setForeground(Color.white);
-            finishButton.addActionListener(e -> finishButtonActionPerformed(e));
-            body.add(finishButton);
-            finishButton.setBounds(50, 575, 90, 40);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(Color.lightGray);
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 125, 4, 480);
-
-            //======== nameContainer ========
-            {
-                nameContainer.setLayout(null);
-
-                //---- nameTip ----
-                nameTip.setText("Name");
-                nameTip.setBackground(Color.white);
-                nameTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                nameContainer.add(nameTip);
-                nameTip.setBounds(10, 15, 135, nameTip.getPreferredSize().height);
-
-                //---- name ----
-                name.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                name.setBorder(null);
-                name.setMargin(new Insets(2, 10, 2, 6));
-                nameContainer.add(name);
-                name.setBounds(185, 14, 500, name.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < nameContainer.getComponentCount(); i++) {
-                        Rectangle bounds = nameContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = nameContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    nameContainer.setMinimumSize(preferredSize);
-                    nameContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(nameContainer);
-            nameContainer.setBounds(50, 125, 700, 60);
-
-            //======== emailContainer ========
-            {
-                emailContainer.setLayout(null);
-
-                //---- emailTip ----
-                emailTip.setText("Email");
-                emailTip.setBackground(Color.white);
-                emailTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                emailContainer.add(emailTip);
-                emailTip.setBounds(10, 15, 135, emailTip.getPreferredSize().height);
-
-                //---- email ----
-                email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                email.setBorder(null);
-                email.setMargin(new Insets(2, 10, 2, 6));
-                emailContainer.add(email);
-                email.setBounds(185, 14, 500, email.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < emailContainer.getComponentCount(); i++) {
-                        Rectangle bounds = emailContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = emailContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    emailContainer.setMinimumSize(preferredSize);
-                    emailContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(emailContainer);
-            emailContainer.setBounds(50, 200, 700, 60);
-
-            //======== phoneNumberContainer ========
-            {
-                phoneNumberContainer.setLayout(null);
-
-                //---- phoneNumberTip ----
-                phoneNumberTip.setText("Phone Number");
-                phoneNumberTip.setBackground(Color.white);
-                phoneNumberTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                phoneNumberContainer.add(phoneNumberTip);
-                phoneNumberTip.setBounds(10, 15, 160, phoneNumberTip.getPreferredSize().height);
-
-                //---- phoneNumber ----
-                phoneNumber.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                phoneNumber.setBorder(null);
-                phoneNumber.setMargin(new Insets(2, 10, 2, 6));
-                phoneNumberContainer.add(phoneNumber);
-                phoneNumber.setBounds(185, 14, 500, phoneNumber.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < phoneNumberContainer.getComponentCount(); i++) {
-                        Rectangle bounds = phoneNumberContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = phoneNumberContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    phoneNumberContainer.setMinimumSize(preferredSize);
-                    phoneNumberContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(phoneNumberContainer);
-            phoneNumberContainer.setBounds(50, 275, 700, 60);
-
-            //======== currentPasswordContainer ========
-            {
-                currentPasswordContainer.setLayout(null);
-
-                //---- currentPasswordTip ----
-                currentPasswordTip.setText("Current Password");
-                currentPasswordTip.setBackground(Color.white);
-                currentPasswordTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                currentPasswordContainer.add(currentPasswordTip);
-                currentPasswordTip.setBounds(10, 15, 185, currentPasswordTip.getPreferredSize().height);
-
-                //---- currentPassword ----
-                currentPassword.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                currentPassword.setBorder(null);
-                currentPassword.setMargin(new Insets(2, 10, 2, 6));
-                currentPasswordContainer.add(currentPassword);
-                currentPassword.setBounds(185, 14, 500, currentPassword.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < currentPasswordContainer.getComponentCount(); i++) {
-                        Rectangle bounds = currentPasswordContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = currentPasswordContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    currentPasswordContainer.setMinimumSize(preferredSize);
-                    currentPasswordContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(currentPasswordContainer);
-            currentPasswordContainer.setBounds(50, 350, 700, 60);
-
-            //======== newPasswordContainer ========
-            {
-                newPasswordContainer.setLayout(null);
-
-                //---- newPasswordTip ----
-                newPasswordTip.setText("New Password");
-                newPasswordTip.setBackground(Color.white);
-                newPasswordTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                newPasswordContainer.add(newPasswordTip);
-                newPasswordTip.setBounds(10, 15, 185, newPasswordTip.getPreferredSize().height);
-
-                //---- newPassword ----
-                newPassword.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                newPassword.setBorder(null);
-                newPassword.setMargin(new Insets(2, 10, 2, 6));
-                newPasswordContainer.add(newPassword);
-                newPassword.setBounds(185, 14, 500, newPassword.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < newPasswordContainer.getComponentCount(); i++) {
-                        Rectangle bounds = newPasswordContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = newPasswordContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    newPasswordContainer.setMinimumSize(preferredSize);
-                    newPasswordContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(newPasswordContainer);
-            newPasswordContainer.setBounds(50, 425, 700, 60);
-
-            //======== confirmPasswordContainer ========
-            {
-                confirmPasswordContainer.setLayout(null);
-
-                //---- confirmPasswordTip ----
-                confirmPasswordTip.setText("Confim Password");
-                confirmPasswordTip.setBackground(Color.white);
-                confirmPasswordTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                confirmPasswordContainer.add(confirmPasswordTip);
-                confirmPasswordTip.setBounds(10, 15, 185, confirmPasswordTip.getPreferredSize().height);
-
-                //---- confirmPassword ----
-                confirmPassword.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                confirmPassword.setBorder(null);
-                confirmPassword.setMargin(new Insets(2, 10, 2, 6));
-                confirmPasswordContainer.add(confirmPassword);
-                confirmPassword.setBounds(185, 14, 500, confirmPassword.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < confirmPasswordContainer.getComponentCount(); i++) {
-                        Rectangle bounds = confirmPasswordContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = confirmPasswordContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    confirmPasswordContainer.setMinimumSize(preferredSize);
-                    confirmPasswordContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(confirmPasswordContainer);
-            confirmPasswordContainer.setBounds(50, 500, 700, 60);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JButton finishButton;
-    private JPanel decorationLine2;
-    private JPanel nameContainer;
-    private JLabel nameTip;
-    private JTextField name;
-    private JPanel emailContainer;
-    private JLabel emailTip;
-    private JTextField email;
-    private JPanel phoneNumberContainer;
-    private JLabel phoneNumberTip;
-    private JTextField phoneNumber;
-    private JPanel currentPasswordContainer;
-    private JLabel currentPasswordTip;
-    private JPasswordField currentPassword;
-    private JPanel newPasswordContainer;
-    private JLabel newPasswordTip;
-    private JPasswordField newPassword;
-    private JPanel confirmPasswordContainer;
-    private JLabel confirmPasswordTip;
-    private JPasswordField confirmPassword;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        EditProfileMember.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    EditProfileMember frame = new EditProfileMember();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/EditProfileCoach.java
===================================================================
diff --git a/src/main/java/GUI/Coach/EditProfileCoach.java b/src/main/java/GUI/Coach/EditProfileCoach.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/EditProfileCoach.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,406 +0,0 @@
-/*
- * Created by JFormDesigner on Fri Apr 09 14:50:26 CST 2021
- */
-
-package GUI.Coach;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-
-/**
- * @author Anna
- */
-public class EditProfileCoach extends JFrame {
-    public EditProfileCoach() {
-        initComponents();
-    }
-
-    private void finishButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        ProfileCoach.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        finishButton = new JButton();
-        decorationLine2 = new JPanel();
-        nameContainer = new JPanel();
-        nameTip = new JLabel();
-        name = new JTextField();
-        emailContainer = new JPanel();
-        emailTip = new JLabel();
-        email = new JTextField();
-        phoneNumberContainer = new JPanel();
-        phoneNumberTip = new JLabel();
-        phoneNumber = new JTextField();
-        currentPasswordContainer = new JPanel();
-        currentPasswordTip = new JLabel();
-        currentPassword = new JPasswordField();
-        newPasswordContainer = new JPanel();
-        newPasswordTip = new JLabel();
-        newPassword = new JPasswordField();
-        confirmPasswordContainer = new JPanel();
-        confirmPasswordTip = new JLabel();
-        confirmPassword = new JPasswordField();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Edit Profile ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- finishButton ----
-            finishButton.setBorderPainted(false);
-            finishButton.setBackground(SystemColor.textHighlight);
-            finishButton.setText("FINISH");
-            finishButton.setForeground(Color.white);
-            finishButton.addActionListener(e -> finishButtonActionPerformed(e));
-            body.add(finishButton);
-            finishButton.setBounds(50, 575, 90, 40);
-
-            //======== decorationLine2 ========
-            {
-                decorationLine2.setBackground(Color.lightGray);
-                decorationLine2.setBorder(null);
-                decorationLine2.setLayout(null);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < decorationLine2.getComponentCount(); i++) {
-                        Rectangle bounds = decorationLine2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = decorationLine2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    decorationLine2.setMinimumSize(preferredSize);
-                    decorationLine2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(decorationLine2);
-            decorationLine2.setBounds(35, 125, 4, 480);
-
-            //======== nameContainer ========
-            {
-                nameContainer.setLayout(null);
-
-                //---- nameTip ----
-                nameTip.setText("Name");
-                nameTip.setBackground(Color.white);
-                nameTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                nameContainer.add(nameTip);
-                nameTip.setBounds(10, 15, 135, nameTip.getPreferredSize().height);
-
-                //---- name ----
-                name.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                name.setBorder(null);
-                name.setMargin(new Insets(2, 10, 2, 6));
-                nameContainer.add(name);
-                name.setBounds(185, 14, 500, name.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < nameContainer.getComponentCount(); i++) {
-                        Rectangle bounds = nameContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = nameContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    nameContainer.setMinimumSize(preferredSize);
-                    nameContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(nameContainer);
-            nameContainer.setBounds(50, 125, 700, 60);
-
-            //======== emailContainer ========
-            {
-                emailContainer.setLayout(null);
-
-                //---- emailTip ----
-                emailTip.setText("Email");
-                emailTip.setBackground(Color.white);
-                emailTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                emailContainer.add(emailTip);
-                emailTip.setBounds(10, 15, 135, emailTip.getPreferredSize().height);
-
-                //---- email ----
-                email.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                email.setBorder(null);
-                email.setMargin(new Insets(2, 10, 2, 6));
-                emailContainer.add(email);
-                email.setBounds(185, 14, 500, email.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < emailContainer.getComponentCount(); i++) {
-                        Rectangle bounds = emailContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = emailContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    emailContainer.setMinimumSize(preferredSize);
-                    emailContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(emailContainer);
-            emailContainer.setBounds(50, 200, 700, 60);
-
-            //======== phoneNumberContainer ========
-            {
-                phoneNumberContainer.setLayout(null);
-
-                //---- phoneNumberTip ----
-                phoneNumberTip.setText("Phone Number");
-                phoneNumberTip.setBackground(Color.white);
-                phoneNumberTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                phoneNumberContainer.add(phoneNumberTip);
-                phoneNumberTip.setBounds(10, 15, 160, phoneNumberTip.getPreferredSize().height);
-
-                //---- phoneNumber ----
-                phoneNumber.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                phoneNumber.setBorder(null);
-                phoneNumber.setMargin(new Insets(2, 10, 2, 6));
-                phoneNumberContainer.add(phoneNumber);
-                phoneNumber.setBounds(185, 14, 500, phoneNumber.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < phoneNumberContainer.getComponentCount(); i++) {
-                        Rectangle bounds = phoneNumberContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = phoneNumberContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    phoneNumberContainer.setMinimumSize(preferredSize);
-                    phoneNumberContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(phoneNumberContainer);
-            phoneNumberContainer.setBounds(50, 275, 700, 60);
-
-            //======== currentPasswordContainer ========
-            {
-                currentPasswordContainer.setLayout(null);
-
-                //---- currentPasswordTip ----
-                currentPasswordTip.setText("Current Password");
-                currentPasswordTip.setBackground(Color.white);
-                currentPasswordTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                currentPasswordContainer.add(currentPasswordTip);
-                currentPasswordTip.setBounds(10, 15, 185, currentPasswordTip.getPreferredSize().height);
-
-                //---- currentPassword ----
-                currentPassword.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                currentPassword.setBorder(null);
-                currentPassword.setMargin(new Insets(2, 10, 2, 6));
-                currentPasswordContainer.add(currentPassword);
-                currentPassword.setBounds(185, 14, 500, currentPassword.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < currentPasswordContainer.getComponentCount(); i++) {
-                        Rectangle bounds = currentPasswordContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = currentPasswordContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    currentPasswordContainer.setMinimumSize(preferredSize);
-                    currentPasswordContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(currentPasswordContainer);
-            currentPasswordContainer.setBounds(50, 350, 700, 60);
-
-            //======== newPasswordContainer ========
-            {
-                newPasswordContainer.setLayout(null);
-
-                //---- newPasswordTip ----
-                newPasswordTip.setText("New Password");
-                newPasswordTip.setBackground(Color.white);
-                newPasswordTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                newPasswordContainer.add(newPasswordTip);
-                newPasswordTip.setBounds(10, 15, 185, newPasswordTip.getPreferredSize().height);
-
-                //---- newPassword ----
-                newPassword.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                newPassword.setBorder(null);
-                newPassword.setMargin(new Insets(2, 10, 2, 6));
-                newPasswordContainer.add(newPassword);
-                newPassword.setBounds(185, 14, 500, newPassword.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < newPasswordContainer.getComponentCount(); i++) {
-                        Rectangle bounds = newPasswordContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = newPasswordContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    newPasswordContainer.setMinimumSize(preferredSize);
-                    newPasswordContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(newPasswordContainer);
-            newPasswordContainer.setBounds(50, 425, 700, 60);
-
-            //======== confirmPasswordContainer ========
-            {
-                confirmPasswordContainer.setLayout(null);
-
-                //---- confirmPasswordTip ----
-                confirmPasswordTip.setText("Confim Password");
-                confirmPasswordTip.setBackground(Color.white);
-                confirmPasswordTip.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                confirmPasswordContainer.add(confirmPasswordTip);
-                confirmPasswordTip.setBounds(10, 15, 185, confirmPasswordTip.getPreferredSize().height);
-
-                //---- confirmPassword ----
-                confirmPassword.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 20));
-                confirmPassword.setBorder(null);
-                confirmPassword.setMargin(new Insets(2, 10, 2, 6));
-                confirmPasswordContainer.add(confirmPassword);
-                confirmPassword.setBounds(185, 14, 500, confirmPassword.getPreferredSize().height);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < confirmPasswordContainer.getComponentCount(); i++) {
-                        Rectangle bounds = confirmPasswordContainer.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = confirmPasswordContainer.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    confirmPasswordContainer.setMinimumSize(preferredSize);
-                    confirmPasswordContainer.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(confirmPasswordContainer);
-            confirmPasswordContainer.setBounds(50, 500, 700, 60);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JButton finishButton;
-    private JPanel decorationLine2;
-    private JPanel nameContainer;
-    private JLabel nameTip;
-    private JTextField name;
-    private JPanel emailContainer;
-    private JLabel emailTip;
-    private JTextField email;
-    private JPanel phoneNumberContainer;
-    private JLabel phoneNumberTip;
-    private JTextField phoneNumber;
-    private JPanel currentPasswordContainer;
-    private JLabel currentPasswordTip;
-    private JPasswordField currentPassword;
-    private JPanel newPasswordContainer;
-    private JLabel newPasswordTip;
-    private JPasswordField newPassword;
-    private JPanel confirmPasswordContainer;
-    private JLabel confirmPasswordTip;
-    private JPasswordField confirmPassword;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-
-    public static void main(String[] args) {
-        EditProfileCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    EditProfileCoach frame = new EditProfileCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/NavigatorCoach.java
===================================================================
diff --git a/src/main/java/GUI/Coach/NavigatorCoach.java b/src/main/java/GUI/Coach/NavigatorCoach.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/NavigatorCoach.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,288 +0,0 @@
-package GUI.Coach;
-
-import GUI.Other.Login;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 12:06:39 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class NavigatorCoach extends JFrame {
-    public NavigatorCoach() {
-        initComponents();
-    }
-
-    private void myLessonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorCoach.run();
-        MyLessonCoach.run();
-    }
-
-    private void myPlanActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorCoach.run();
-        PlanHomeCoach.run();
-    }
-
-    private void myProfileActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorCoach.run();
-        ProfileCoach.run();
-    }
-
-    private void switchAccoutActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        Login.run();
-    }
-
-
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        label1 = new JButton();
-        username = new JLabel();
-        welcomeMsg = new JLabel();
-        decorationLine1 = new JLabel();
-        menu = new JPanel();
-        myLessonMenu = new JPanel();
-        myLesson = new JButton();
-        myPlanMenu = new JPanel();
-        myPlan = new JButton();
-        myProfileMenu = new JPanel();
-        myProfile = new JButton();
-        label2 = new JButton();
-        label3 = new JButton();
-        label4 = new JButton();
-        switchAccout = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- label1 ----
-            label1.setText("avatar");
-            label1.setBackground(Color.black);
-            label1.setForeground(Color.white);
-            label1.setHorizontalAlignment(SwingConstants.CENTER);
-            label1.setBorderPainted(false);
-            body.add(label1);
-            label1.setBounds(20, 20, 75, 75);
-
-            //---- username ----
-            username.setText("Username");
-            username.setBackground(Color.white);
-            username.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-            body.add(username);
-            username.setBounds(new Rectangle(new Point(100, 30), username.getPreferredSize()));
-
-            //---- welcomeMsg ----
-            welcomeMsg.setText("Welcome, .....");
-            body.add(welcomeMsg);
-            welcomeMsg.setBounds(new Rectangle(new Point(103, 60), welcomeMsg.getPreferredSize()));
-
-            //---- decorationLine1 ----
-            decorationLine1.setBackground(Color.black);
-            decorationLine1.setText("     ");
-            decorationLine1.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine1);
-            decorationLine1.setBounds(25, 115, 300, 2);
-
-            //======== menu ========
-            {
-                menu.setLayout(new GridLayout(0, 1));
-
-                //======== myLessonMenu ========
-                {
-                    myLessonMenu.setBackground(Color.white);
-                    myLessonMenu.setLayout(new GridLayout());
-
-                    //---- myLesson ----
-                    myLesson.setText("My Lesson");
-                    myLesson.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    myLesson.setBackground(Color.white);
-                    myLesson.setBorderPainted(false);
-                    myLesson.setHorizontalAlignment(SwingConstants.LEFT);
-                    myLesson.addActionListener(e -> myLessonActionPerformed(e));
-                    myLessonMenu.add(myLesson);
-                }
-                menu.add(myLessonMenu);
-
-                //======== myPlanMenu ========
-                {
-                    myPlanMenu.setBackground(Color.white);
-                    myPlanMenu.setLayout(new GridLayout());
-
-                    //---- myPlan ----
-                    myPlan.setText("My Plan");
-                    myPlan.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    myPlan.setBackground(Color.white);
-                    myPlan.setBorderPainted(false);
-                    myPlan.setHorizontalAlignment(SwingConstants.LEFT);
-                    myPlan.addActionListener(e -> myPlanActionPerformed(e));
-                    myPlanMenu.add(myPlan);
-                }
-                menu.add(myPlanMenu);
-
-                //======== myProfileMenu ========
-                {
-                    myProfileMenu.setBackground(Color.white);
-                    myProfileMenu.setLayout(new GridLayout());
-
-                    //---- myProfile ----
-                    myProfile.setText("My Profile");
-                    myProfile.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    myProfile.setBackground(Color.white);
-                    myProfile.setBorderPainted(false);
-                    myProfile.setHorizontalAlignment(SwingConstants.LEFT);
-                    myProfile.addActionListener(e -> myProfileActionPerformed(e));
-                    myProfileMenu.add(myProfile);
-                }
-                menu.add(myProfileMenu);
-            }
-            body.add(menu);
-            menu.setBounds(50, 135, 280, 200);
-
-            //---- label2 ----
-            label2.setText("Icon");
-            label2.setBackground(Color.black);
-            label2.setForeground(Color.white);
-            label2.setHorizontalAlignment(SwingConstants.CENTER);
-            label2.setBorderPainted(false);
-            body.add(label2);
-            label2.setBounds(20, 157, 25, 25);
-
-            //---- label3 ----
-            label3.setText("Icon");
-            label3.setBackground(Color.black);
-            label3.setForeground(Color.white);
-            label3.setHorizontalAlignment(SwingConstants.CENTER);
-            label3.setBorderPainted(false);
-            body.add(label3);
-            label3.setBounds(20, 222, 25, 25);
-
-            //---- label4 ----
-            label4.setText("Icon");
-            label4.setBackground(Color.black);
-            label4.setForeground(Color.white);
-            label4.setHorizontalAlignment(SwingConstants.CENTER);
-            label4.setBorderPainted(false);
-            body.add(label4);
-            label4.setBounds(20, 290, 25, 25);
-
-            //---- switchAccout ----
-            switchAccout.setText("Switch Account");
-            switchAccout.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            switchAccout.setBackground(Color.white);
-            switchAccout.setBorderPainted(false);
-            switchAccout.addActionListener(e -> switchAccoutActionPerformed(e));
-            body.add(switchAccout);
-            switchAccout.setBounds(-5, 595, 175, 60);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 350, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JButton label1;
-    private JLabel username;
-    private JLabel welcomeMsg;
-    private JLabel decorationLine1;
-    private JPanel menu;
-    private JPanel myLessonMenu;
-    private JButton myLesson;
-    private JPanel myPlanMenu;
-    private JButton myPlan;
-    private JPanel myProfileMenu;
-    private JButton myProfile;
-    private JButton label2;
-    private JButton label3;
-    private JButton label4;
-    private JButton switchAccout;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        NavigatorCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    NavigatorCoach frame = new NavigatorCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-1100/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Admin/ALLLessonAdmin.java
===================================================================
diff --git a/src/main/java/GUI/Admin/ALLLessonAdmin.java b/src/main/java/GUI/Admin/ALLLessonAdmin.java
deleted file mode 100644
--- a/src/main/java/GUI/Admin/ALLLessonAdmin.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,677 +0,0 @@
-/*
- * Created by JFormDesigner on Fri Apr 23 10:17:10 CST 2021
- */
-
-package GUI.Admin;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-
-/**
- * @author Anna
- */
-public class ALLLessonAdmin extends JFrame {
-    public ALLLessonAdmin() {
-        initComponents();
-    }
-
-    private void moreButton1ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonDetailAdmin.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lesson1 = new JPanel();
-        lessonPicture1 = new JPanel();
-        lessonName = new JLabel();
-        lessonLevel1 = new JLabel();
-        coachName1 = new JLabel();
-        moreButton1 = new JButton();
-        lesson2 = new JPanel();
-        lessonName2 = new JLabel();
-        lessonLevel2 = new JLabel();
-        coachName2 = new JLabel();
-        lessonPicture2 = new JPanel();
-        moreButton2 = new JButton();
-        lesson3 = new JPanel();
-        lessonName3 = new JLabel();
-        lessonLevel3 = new JLabel();
-        moreButton3 = new JButton();
-        coachName3 = new JLabel();
-        lessonPicture3 = new JPanel();
-        lesson4 = new JPanel();
-        lessonName4 = new JLabel();
-        lessonLevel4 = new JLabel();
-        moreButton4 = new JButton();
-        coachName4 = new JLabel();
-        lessonPicture4 = new JPanel();
-        lesson5 = new JPanel();
-        lessonName5 = new JLabel();
-        lessonLevel5 = new JLabel();
-        coachName5 = new JLabel();
-        lessonPicture5 = new JPanel();
-        moreButton5 = new JButton();
-        lesson6 = new JPanel();
-        lessonPicture6 = new JPanel();
-        lessonName6 = new JLabel();
-        lessonLevel6 = new JLabel();
-        coachName6 = new JLabel();
-        moreButton6 = new JButton();
-        search = new JTextField();
-        searchButton = new JButton();
-        nextPageButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("ALL Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //======== lesson1 ========
-            {
-                lesson1.setBackground(SystemColor.menu);
-                lesson1.setLayout(null);
-
-                //======== lessonPicture1 ========
-                {
-                    lessonPicture1.setBackground(SystemColor.activeCaption);
-                    lessonPicture1.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture1.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture1.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture1.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture1.setMinimumSize(preferredSize);
-                        lessonPicture1.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson1.add(lessonPicture1);
-                lessonPicture1.setBounds(0, 0, 250, 160);
-
-                //---- lessonName ----
-                lessonName.setText("Lesson Name");
-                lessonName.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName.setBackground(SystemColor.menu);
-                lesson1.add(lessonName);
-                lessonName.setBounds(5, 165, 195, lessonName.getPreferredSize().height);
-
-                //---- lessonLevel1 ----
-                lessonLevel1.setText("Lesson Level");
-                lessonLevel1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel1.setBackground(SystemColor.menu);
-                lessonLevel1.setForeground(new Color(150, 150, 150));
-                lesson1.add(lessonLevel1);
-                lessonLevel1.setBounds(5, 190, 85, 17);
-
-                //---- coachName1 ----
-                coachName1.setText("Coach Name");
-                coachName1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName1.setBackground(SystemColor.menu);
-                coachName1.setForeground(new Color(120, 120, 120));
-                lesson1.add(coachName1);
-                coachName1.setBounds(5, 225, 85, 17);
-
-                //---- moreButton1 ----
-                moreButton1.setText("MORE");
-                moreButton1.setBackground(Color.white);
-                moreButton1.setBorderPainted(false);
-                moreButton1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                moreButton1.addActionListener(e -> moreButton1ActionPerformed(e));
-                lesson1.add(moreButton1);
-                moreButton1.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson1.getComponentCount(); i++) {
-                        Rectangle bounds = lesson1.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson1.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson1.setMinimumSize(preferredSize);
-                    lesson1.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson1);
-            lesson1.setBounds(25, 125, 240, 250);
-
-            //======== lesson2 ========
-            {
-                lesson2.setBackground(SystemColor.menu);
-                lesson2.setLayout(null);
-
-                //---- lessonName2 ----
-                lessonName2.setText("Lesson Name");
-                lessonName2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName2.setBackground(SystemColor.menu);
-                lesson2.add(lessonName2);
-                lessonName2.setBounds(5, 165, 195, lessonName2.getPreferredSize().height);
-
-                //---- lessonLevel2 ----
-                lessonLevel2.setText("Lesson Level");
-                lessonLevel2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel2.setBackground(SystemColor.menu);
-                lessonLevel2.setForeground(new Color(150, 150, 150));
-                lesson2.add(lessonLevel2);
-                lessonLevel2.setBounds(5, 190, 85, 17);
-
-                //---- coachName2 ----
-                coachName2.setText("Coach Name");
-                coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName2.setBackground(SystemColor.menu);
-                coachName2.setForeground(new Color(120, 120, 120));
-                lesson2.add(coachName2);
-                coachName2.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture2 ========
-                {
-                    lessonPicture2.setBackground(SystemColor.activeCaption);
-                    lessonPicture2.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture2.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture2.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture2.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture2.setMinimumSize(preferredSize);
-                        lessonPicture2.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson2.add(lessonPicture2);
-                lessonPicture2.setBounds(0, 0, 250, 160);
-
-                //---- moreButton2 ----
-                moreButton2.setText("MORE");
-                moreButton2.setBackground(Color.white);
-                moreButton2.setBorderPainted(false);
-                moreButton2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson2.add(moreButton2);
-                moreButton2.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson2.getComponentCount(); i++) {
-                        Rectangle bounds = lesson2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson2.setMinimumSize(preferredSize);
-                    lesson2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson2);
-            lesson2.setBounds(280, 125, 240, 250);
-
-            //======== lesson3 ========
-            {
-                lesson3.setBackground(SystemColor.menu);
-                lesson3.setLayout(null);
-
-                //---- lessonName3 ----
-                lessonName3.setText("Lesson Name");
-                lessonName3.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName3.setBackground(SystemColor.menu);
-                lesson3.add(lessonName3);
-                lessonName3.setBounds(5, 165, 195, lessonName3.getPreferredSize().height);
-
-                //---- lessonLevel3 ----
-                lessonLevel3.setText("Lesson Level");
-                lessonLevel3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel3.setBackground(SystemColor.menu);
-                lessonLevel3.setForeground(new Color(150, 150, 150));
-                lesson3.add(lessonLevel3);
-                lessonLevel3.setBounds(5, 190, 85, 17);
-
-                //---- moreButton3 ----
-                moreButton3.setText("MORE");
-                moreButton3.setBackground(Color.white);
-                moreButton3.setBorderPainted(false);
-                moreButton3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson3.add(moreButton3);
-                moreButton3.setBounds(170, 220, 65, 25);
-
-                //---- coachName3 ----
-                coachName3.setText("Coach Name");
-                coachName3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName3.setBackground(SystemColor.menu);
-                coachName3.setForeground(new Color(120, 120, 120));
-                lesson3.add(coachName3);
-                coachName3.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture3 ========
-                {
-                    lessonPicture3.setBackground(SystemColor.activeCaption);
-                    lessonPicture3.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture3.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture3.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture3.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture3.setMinimumSize(preferredSize);
-                        lessonPicture3.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson3.add(lessonPicture3);
-                lessonPicture3.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson3.getComponentCount(); i++) {
-                        Rectangle bounds = lesson3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson3.setMinimumSize(preferredSize);
-                    lesson3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson3);
-            lesson3.setBounds(535, 125, 240, 250);
-
-            //======== lesson4 ========
-            {
-                lesson4.setBackground(SystemColor.menu);
-                lesson4.setLayout(null);
-
-                //---- lessonName4 ----
-                lessonName4.setText("Lesson Name");
-                lessonName4.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName4.setBackground(SystemColor.menu);
-                lesson4.add(lessonName4);
-                lessonName4.setBounds(5, 165, 195, lessonName4.getPreferredSize().height);
-
-                //---- lessonLevel4 ----
-                lessonLevel4.setText("Lesson Level");
-                lessonLevel4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel4.setBackground(SystemColor.menu);
-                lessonLevel4.setForeground(new Color(150, 150, 150));
-                lesson4.add(lessonLevel4);
-                lessonLevel4.setBounds(5, 190, 85, 17);
-
-                //---- moreButton4 ----
-                moreButton4.setText("MORE");
-                moreButton4.setBackground(Color.white);
-                moreButton4.setBorderPainted(false);
-                moreButton4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson4.add(moreButton4);
-                moreButton4.setBounds(170, 220, 65, 25);
-
-                //---- coachName4 ----
-                coachName4.setText("Coach Name");
-                coachName4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName4.setBackground(SystemColor.menu);
-                coachName4.setForeground(new Color(120, 120, 120));
-                lesson4.add(coachName4);
-                coachName4.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture4 ========
-                {
-                    lessonPicture4.setBackground(SystemColor.activeCaption);
-                    lessonPicture4.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture4.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture4.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture4.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture4.setMinimumSize(preferredSize);
-                        lessonPicture4.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson4.add(lessonPicture4);
-                lessonPicture4.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson4.getComponentCount(); i++) {
-                        Rectangle bounds = lesson4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson4.setMinimumSize(preferredSize);
-                    lesson4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson4);
-            lesson4.setBounds(535, 385, 240, 250);
-
-            //======== lesson5 ========
-            {
-                lesson5.setBackground(SystemColor.menu);
-                lesson5.setLayout(null);
-
-                //---- lessonName5 ----
-                lessonName5.setText("Lesson Name");
-                lessonName5.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName5.setBackground(SystemColor.menu);
-                lesson5.add(lessonName5);
-                lessonName5.setBounds(5, 165, 195, lessonName5.getPreferredSize().height);
-
-                //---- lessonLevel5 ----
-                lessonLevel5.setText("Lesson Level");
-                lessonLevel5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel5.setBackground(SystemColor.menu);
-                lessonLevel5.setForeground(new Color(150, 150, 150));
-                lesson5.add(lessonLevel5);
-                lessonLevel5.setBounds(5, 190, 85, 17);
-
-                //---- coachName5 ----
-                coachName5.setText("Coach Name");
-                coachName5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName5.setBackground(SystemColor.menu);
-                coachName5.setForeground(new Color(120, 120, 120));
-                lesson5.add(coachName5);
-                coachName5.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture5 ========
-                {
-                    lessonPicture5.setBackground(SystemColor.activeCaption);
-                    lessonPicture5.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture5.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture5.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture5.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture5.setMinimumSize(preferredSize);
-                        lessonPicture5.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson5.add(lessonPicture5);
-                lessonPicture5.setBounds(0, 0, 250, 160);
-
-                //---- moreButton5 ----
-                moreButton5.setText("MORE");
-                moreButton5.setBackground(Color.white);
-                moreButton5.setBorderPainted(false);
-                moreButton5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson5.add(moreButton5);
-                moreButton5.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson5.getComponentCount(); i++) {
-                        Rectangle bounds = lesson5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson5.setMinimumSize(preferredSize);
-                    lesson5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson5);
-            lesson5.setBounds(280, 385, 240, 250);
-
-            //======== lesson6 ========
-            {
-                lesson6.setBackground(SystemColor.menu);
-                lesson6.setLayout(null);
-
-                //======== lessonPicture6 ========
-                {
-                    lessonPicture6.setBackground(SystemColor.activeCaption);
-                    lessonPicture6.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture6.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture6.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture6.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture6.setMinimumSize(preferredSize);
-                        lessonPicture6.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson6.add(lessonPicture6);
-                lessonPicture6.setBounds(0, 0, 250, 160);
-
-                //---- lessonName6 ----
-                lessonName6.setText("Lesson Name");
-                lessonName6.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName6.setBackground(SystemColor.menu);
-                lesson6.add(lessonName6);
-                lessonName6.setBounds(5, 165, 195, lessonName6.getPreferredSize().height);
-
-                //---- lessonLevel6 ----
-                lessonLevel6.setText("Lesson Level");
-                lessonLevel6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel6.setBackground(SystemColor.menu);
-                lessonLevel6.setForeground(new Color(150, 150, 150));
-                lesson6.add(lessonLevel6);
-                lessonLevel6.setBounds(5, 190, 85, 17);
-
-                //---- coachName6 ----
-                coachName6.setText("Coach Name");
-                coachName6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName6.setBackground(SystemColor.menu);
-                coachName6.setForeground(new Color(120, 120, 120));
-                lesson6.add(coachName6);
-                coachName6.setBounds(5, 225, 85, 17);
-
-                //---- moreButton6 ----
-                moreButton6.setText("MORE");
-                moreButton6.setBackground(Color.white);
-                moreButton6.setBorderPainted(false);
-                moreButton6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson6.add(moreButton6);
-                moreButton6.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson6.getComponentCount(); i++) {
-                        Rectangle bounds = lesson6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson6.setMinimumSize(preferredSize);
-                    lesson6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson6);
-            lesson6.setBounds(25, 385, 240, 250);
-
-            //---- search ----
-            search.setBackground(SystemColor.menu);
-            search.setBorder(null);
-            search.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            body.add(search);
-            search.setBounds(300, 45, 300, 40);
-
-            //---- searchButton ----
-            searchButton.setBorderPainted(false);
-            searchButton.setBackground(SystemColor.textHighlight);
-            body.add(searchButton);
-            searchButton.setBounds(600, 45, 40, 40);
-
-            //---- nextPageButton ----
-            nextPageButton.setBorderPainted(false);
-            nextPageButton.setBackground(new Color(217, 0, 27));
-            nextPageButton.setText("NEXT PAGE");
-            nextPageButton.setForeground(Color.white);
-            body.add(nextPageButton);
-            nextPageButton.setBounds(655, 45, 120, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel lesson1;
-    private JPanel lessonPicture1;
-    private JLabel lessonName;
-    private JLabel lessonLevel1;
-    private JLabel coachName1;
-    private JButton moreButton1;
-    private JPanel lesson2;
-    private JLabel lessonName2;
-    private JLabel lessonLevel2;
-    private JLabel coachName2;
-    private JPanel lessonPicture2;
-    private JButton moreButton2;
-    private JPanel lesson3;
-    private JLabel lessonName3;
-    private JLabel lessonLevel3;
-    private JButton moreButton3;
-    private JLabel coachName3;
-    private JPanel lessonPicture3;
-    private JPanel lesson4;
-    private JLabel lessonName4;
-    private JLabel lessonLevel4;
-    private JButton moreButton4;
-    private JLabel coachName4;
-    private JPanel lessonPicture4;
-    private JPanel lesson5;
-    private JLabel lessonName5;
-    private JLabel lessonLevel5;
-    private JLabel coachName5;
-    private JPanel lessonPicture5;
-    private JButton moreButton5;
-    private JPanel lesson6;
-    private JPanel lessonPicture6;
-    private JLabel lessonName6;
-    private JLabel lessonLevel6;
-    private JLabel coachName6;
-    private JButton moreButton6;
-    private JTextField search;
-    private JButton searchButton;
-    private JButton nextPageButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        ALLLessonAdmin.run();
-    }
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    ALLLessonAdmin frame = new ALLLessonAdmin();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Admin/LessonDetailAdmin.java
===================================================================
diff --git a/src/main/java/GUI/Admin/LessonDetailAdmin.java b/src/main/java/GUI/Admin/LessonDetailAdmin.java
deleted file mode 100644
--- a/src/main/java/GUI/Admin/LessonDetailAdmin.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,217 +0,0 @@
-package GUI.Admin;
-
-import GUI.Coach.ProfileCoach;
-import GUI.Coach.UploadModify;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 19:38:51 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class LessonDetailAdmin extends JFrame {
-    public LessonDetailAdmin() {
-        initComponents();
-    }
-
-    private void joinButton3ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        UploadModify.run();
-    }
-
-    private void coachDetailButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        ProfileCoach.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lessonPicture = new JLabel();
-        lessonName = new JLabel();
-        lessionMsg = new JTextPane();
-        coachAvatar = new JLabel();
-        coachName = new JLabel();
-        coachMsg = new JTextPane();
-        coachDetailButton = new JButton();
-        joinButton3 = new JButton();
-        joinButton4 = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Detail of Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- lessonPicture ----
-            lessonPicture.setText("Lesson Picture");
-            lessonPicture.setBorder(LineBorder.createBlackLineBorder());
-            lessonPicture.setHorizontalAlignment(SwingConstants.CENTER);
-            body.add(lessonPicture);
-            lessonPicture.setBounds(30, 165, 300, 251);
-
-            //---- lessonName ----
-            lessonName.setText("Lesson Name");
-            lessonName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 32));
-            lessonName.setBackground(Color.white);
-            body.add(lessonName);
-            lessonName.setBounds(350, 165, 267, 42);
-
-            //---- lessionMsg ----
-            lessionMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar sic tempor. Sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus pronin sapien nunc accuan eget.");
-            lessionMsg.setBackground(Color.white);
-            lessionMsg.setBorder(null);
-            lessionMsg.setCaretColor(Color.white);
-            lessionMsg.setDisabledTextColor(Color.white);
-            lessionMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            lessionMsg.setEditable(false);
-            body.add(lessionMsg);
-            lessionMsg.setBounds(350, 215, 398, 138);
-
-            //---- coachAvatar ----
-            coachAvatar.setText("Coach");
-            coachAvatar.setBorder(LineBorder.createBlackLineBorder());
-            coachAvatar.setHorizontalAlignment(SwingConstants.CENTER);
-            body.add(coachAvatar);
-            coachAvatar.setBounds(30, 440, 75, 75);
-
-            //---- coachName ----
-            coachName.setText("Coach Name");
-            coachName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 24));
-            coachName.setBackground(Color.white);
-            body.add(coachName);
-            coachName.setBounds(115, 440, 190, 42);
-
-            //---- coachMsg ----
-            coachMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo.");
-            coachMsg.setBackground(Color.white);
-            coachMsg.setBorder(null);
-            coachMsg.setCaretColor(Color.white);
-            coachMsg.setDisabledTextColor(Color.white);
-            coachMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            coachMsg.setEditable(false);
-            body.add(coachMsg);
-            coachMsg.setBounds(115, 475, 525, 45);
-
-            //---- coachDetailButton ----
-            coachDetailButton.setText("DETAIL");
-            coachDetailButton.setBackground(SystemColor.menu);
-            coachDetailButton.setBorder(null);
-            coachDetailButton.addActionListener(e -> coachDetailButtonActionPerformed(e));
-            body.add(coachDetailButton);
-            coachDetailButton.setBounds(660, 460, 100, 50);
-
-            //---- joinButton3 ----
-            joinButton3.setText("EDITOR");
-            joinButton3.setBackground(SystemColor.menu);
-            joinButton3.setBorder(null);
-            joinButton3.addActionListener(e -> joinButton3ActionPerformed(e));
-            body.add(joinButton3);
-            joinButton3.setBounds(30, 570, 100, 50);
-
-            //---- joinButton4 ----
-            joinButton4.setText("DELETE");
-            joinButton4.setBackground(new Color(217, 0, 27));
-            joinButton4.setBorder(null);
-            joinButton4.setForeground(Color.white);
-            body.add(joinButton4);
-            joinButton4.setBounds(130, 570, 100, 50);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel lessonPicture;
-    private JLabel lessonName;
-    private JTextPane lessionMsg;
-    private JLabel coachAvatar;
-    private JLabel coachName;
-    private JTextPane coachMsg;
-    private JButton coachDetailButton;
-    private JButton joinButton3;
-    private JButton joinButton4;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        LessonDetailAdmin.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    LessonDetailAdmin frame = new LessonDetailAdmin();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Member/Book.java
===================================================================
diff --git a/src/main/java/GUI/Member/Book.java b/src/main/java/GUI/Member/Book.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/Book.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,132 +0,0 @@
-package GUI.Member;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-/*
- * Created by JFormDesigner on Thu Apr 08 21:58:01 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class Book extends JFrame {
-    public Book() {
-        initComponents();
-    }
-
-    private void finishButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        PlanHomeMember.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        bookIcon = new JLabel();
-        finishButton = new JButton();
-        startTime = new JTextField();
-        endTime = new JPasswordField();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setLayout(null);
-
-            //---- bookIcon ----
-            bookIcon.setText("BOOK");
-            bookIcon.setBackground(Color.white);
-            bookIcon.setHorizontalAlignment(SwingConstants.CENTER);
-            bookIcon.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            body.add(bookIcon);
-            bookIcon.setBounds(140, 0, 120, 60);
-
-            //---- finishButton ----
-            finishButton.setText("FINISH");
-            finishButton.setBackground(new Color(217, 0, 27));
-            finishButton.setForeground(Color.white);
-            finishButton.setBorderPainted(false);
-            finishButton.addActionListener(e -> finishButtonActionPerformed(e));
-            body.add(finishButton);
-            finishButton.setBounds(50, 255, 300, 50);
-
-            //---- startTime ----
-            startTime.setBackground(new Color(242, 242, 242));
-            startTime.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            body.add(startTime);
-            startTime.setBounds(50, 85, 300, 50);
-
-            //---- endTime ----
-            endTime.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 18));
-            endTime.setBackground(new Color(242, 242, 242));
-            body.add(endTime);
-            endTime.setBounds(50, 145, 300, 50);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 400, 675);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel bookIcon;
-    private JButton finishButton;
-    private JTextField startTime;
-    private JPasswordField endTime;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        Book.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    Book frame = new Book();
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Member/LessonDetailMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/LessonDetailMember.java b/src/main/java/GUI/Member/LessonDetailMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/LessonDetailMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,223 +0,0 @@
-/*
- * Created by JFormDesigner on Fri Apr 23 10:41:24 CST 2021
- */
-
-package GUI.Member;
-
-import GUI.Coach.ViewCoachProfile;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-
-/**
- * @author Anna
- */
-public class LessonDetailMember extends JFrame {
-    public LessonDetailMember() {
-        initComponents();
-    }
-
-    private void joinButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonVideo.run();
-    }
-
-    private void bookButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        Book.run();
-    }
-
-    private void coachDetailButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        ViewCoachProfile.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lessonPicture = new JLabel();
-        lessonName = new JLabel();
-        lessionMsg = new JTextPane();
-        joinButton = new JButton();
-        bookButton = new JButton();
-        coachAvatar = new JLabel();
-        coachName = new JLabel();
-        coachMsg = new JTextPane();
-        coachDetailButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Detail of Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //---- lessonPicture ----
-            lessonPicture.setText("Lesson Picture");
-            lessonPicture.setBorder(LineBorder.createBlackLineBorder());
-            lessonPicture.setHorizontalAlignment(SwingConstants.CENTER);
-            body.add(lessonPicture);
-            lessonPicture.setBounds(30, 165, 300, 251);
-
-            //---- lessonName ----
-            lessonName.setText("Lesson Name");
-            lessonName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 32));
-            lessonName.setBackground(Color.white);
-            body.add(lessonName);
-            lessonName.setBounds(350, 165, 267, 42);
-
-            //---- lessionMsg ----
-            lessionMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar sic tempor. Sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam fermentum, nulla luctus pharetra vulputate, felis tellus mollis orci, sed rhoncus pronin sapien nunc accuan eget.");
-            lessionMsg.setBackground(Color.white);
-            lessionMsg.setBorder(null);
-            lessionMsg.setCaretColor(Color.white);
-            lessionMsg.setDisabledTextColor(Color.white);
-            lessionMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            lessionMsg.setEditable(false);
-            body.add(lessionMsg);
-            lessionMsg.setBounds(350, 215, 398, 138);
-
-            //---- joinButton ----
-            joinButton.setText("JOIN NOW");
-            joinButton.setBackground(SystemColor.menu);
-            joinButton.setBorder(null);
-            joinButton.addActionListener(e -> joinButtonActionPerformed(e));
-            body.add(joinButton);
-            joinButton.setBounds(350, 365, 100, 50);
-
-            //---- bookButton ----
-            bookButton.setText("BOOK(vip)");
-            bookButton.setBackground(new Color(217, 0, 27));
-            bookButton.setBorder(null);
-            bookButton.setForeground(Color.white);
-            bookButton.addActionListener(e -> bookButtonActionPerformed(e));
-            body.add(bookButton);
-            bookButton.setBounds(450, 365, 100, 50);
-
-            //---- coachAvatar ----
-            coachAvatar.setText("Coach");
-            coachAvatar.setBorder(LineBorder.createBlackLineBorder());
-            coachAvatar.setHorizontalAlignment(SwingConstants.CENTER);
-            body.add(coachAvatar);
-            coachAvatar.setBounds(30, 485, 75, 75);
-
-            //---- coachName ----
-            coachName.setText("Coach Name");
-            coachName.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 24));
-            coachName.setBackground(Color.white);
-            body.add(coachName);
-            coachName.setBounds(115, 485, 190, 42);
-
-            //---- coachMsg ----
-            coachMsg.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo.");
-            coachMsg.setBackground(Color.white);
-            coachMsg.setBorder(null);
-            coachMsg.setCaretColor(Color.white);
-            coachMsg.setDisabledTextColor(Color.white);
-            coachMsg.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-            coachMsg.setEditable(false);
-            body.add(coachMsg);
-            coachMsg.setBounds(115, 520, 530, 45);
-
-            //---- coachDetailButton ----
-            coachDetailButton.setText("DETAIL");
-            coachDetailButton.setBackground(SystemColor.menu);
-            coachDetailButton.setBorder(null);
-            coachDetailButton.addActionListener(e -> coachDetailButtonActionPerformed(e));
-            body.add(coachDetailButton);
-            coachDetailButton.setBounds(650, 505, 100, 50);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JLabel lessonPicture;
-    private JLabel lessonName;
-    private JTextPane lessionMsg;
-    private JButton joinButton;
-    private JButton bookButton;
-    private JLabel coachAvatar;
-    private JLabel coachName;
-    private JTextPane coachMsg;
-    private JButton coachDetailButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        LessonDetailMember.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    LessonDetailMember frame = new LessonDetailMember();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Member/LessonHomeMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/LessonHomeMember.java b/src/main/java/GUI/Member/LessonHomeMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/LessonHomeMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,695 +0,0 @@
-package GUI.Member;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 10:53:28 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class LessonHomeMember extends JFrame {
-    public LessonHomeMember() {
-        initComponents();
-    }
-
-    private void coachSearchButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        CoachSearch.run();
-    }
-
-    private void moreButton1ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonDetailCustomer.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lesson1 = new JPanel();
-        lessonPicture1 = new JPanel();
-        lessonName = new JLabel();
-        lessonLevel1 = new JLabel();
-        coachName1 = new JLabel();
-        moreButton1 = new JButton();
-        lesson2 = new JPanel();
-        lessonName2 = new JLabel();
-        lessonLevel2 = new JLabel();
-        coachName2 = new JLabel();
-        lessonPicture2 = new JPanel();
-        moreButton2 = new JButton();
-        lesson3 = new JPanel();
-        lessonName3 = new JLabel();
-        lessonLevel3 = new JLabel();
-        moreButton3 = new JButton();
-        coachName3 = new JLabel();
-        lessonPicture3 = new JPanel();
-        lesson4 = new JPanel();
-        lessonName4 = new JLabel();
-        lessonLevel4 = new JLabel();
-        moreButton4 = new JButton();
-        coachName4 = new JLabel();
-        lessonPicture4 = new JPanel();
-        lesson5 = new JPanel();
-        lessonName5 = new JLabel();
-        lessonLevel5 = new JLabel();
-        coachName5 = new JLabel();
-        lessonPicture5 = new JPanel();
-        moreButton5 = new JButton();
-        lesson6 = new JPanel();
-        lessonPicture6 = new JPanel();
-        lessonName6 = new JLabel();
-        lessonLevel6 = new JLabel();
-        coachName6 = new JLabel();
-        moreButton6 = new JButton();
-        search = new JTextField();
-        searchButton = new JButton();
-        nextPageButton = new JButton();
-        coachSearchButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //======== lesson1 ========
-            {
-                lesson1.setBackground(SystemColor.menu);
-                lesson1.setLayout(null);
-
-                //======== lessonPicture1 ========
-                {
-                    lessonPicture1.setBackground(SystemColor.activeCaption);
-                    lessonPicture1.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture1.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture1.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture1.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture1.setMinimumSize(preferredSize);
-                        lessonPicture1.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson1.add(lessonPicture1);
-                lessonPicture1.setBounds(0, 0, 250, 160);
-
-                //---- lessonName ----
-                lessonName.setText("Lesson Name");
-                lessonName.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName.setBackground(SystemColor.menu);
-                lesson1.add(lessonName);
-                lessonName.setBounds(5, 165, 195, lessonName.getPreferredSize().height);
-
-                //---- lessonLevel1 ----
-                lessonLevel1.setText("Lesson Level");
-                lessonLevel1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel1.setBackground(SystemColor.menu);
-                lessonLevel1.setForeground(new Color(150, 150, 150));
-                lesson1.add(lessonLevel1);
-                lessonLevel1.setBounds(5, 190, 85, 17);
-
-                //---- coachName1 ----
-                coachName1.setText("Coach Name");
-                coachName1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName1.setBackground(SystemColor.menu);
-                coachName1.setForeground(new Color(120, 120, 120));
-                lesson1.add(coachName1);
-                coachName1.setBounds(5, 225, 85, 17);
-
-                //---- moreButton1 ----
-                moreButton1.setText("MORE");
-                moreButton1.setBackground(Color.white);
-                moreButton1.setBorderPainted(false);
-                moreButton1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                moreButton1.addActionListener(e -> moreButton1ActionPerformed(e));
-                lesson1.add(moreButton1);
-                moreButton1.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson1.getComponentCount(); i++) {
-                        Rectangle bounds = lesson1.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson1.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson1.setMinimumSize(preferredSize);
-                    lesson1.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson1);
-            lesson1.setBounds(25, 125, 240, 250);
-
-            //======== lesson2 ========
-            {
-                lesson2.setBackground(SystemColor.menu);
-                lesson2.setLayout(null);
-
-                //---- lessonName2 ----
-                lessonName2.setText("Lesson Name");
-                lessonName2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName2.setBackground(SystemColor.menu);
-                lesson2.add(lessonName2);
-                lessonName2.setBounds(5, 165, 195, lessonName2.getPreferredSize().height);
-
-                //---- lessonLevel2 ----
-                lessonLevel2.setText("Lesson Level");
-                lessonLevel2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel2.setBackground(SystemColor.menu);
-                lessonLevel2.setForeground(new Color(150, 150, 150));
-                lesson2.add(lessonLevel2);
-                lessonLevel2.setBounds(5, 190, 85, 17);
-
-                //---- coachName2 ----
-                coachName2.setText("Coach Name");
-                coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName2.setBackground(SystemColor.menu);
-                coachName2.setForeground(new Color(120, 120, 120));
-                lesson2.add(coachName2);
-                coachName2.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture2 ========
-                {
-                    lessonPicture2.setBackground(SystemColor.activeCaption);
-                    lessonPicture2.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture2.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture2.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture2.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture2.setMinimumSize(preferredSize);
-                        lessonPicture2.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson2.add(lessonPicture2);
-                lessonPicture2.setBounds(0, 0, 250, 160);
-
-                //---- moreButton2 ----
-                moreButton2.setText("MORE");
-                moreButton2.setBackground(Color.white);
-                moreButton2.setBorderPainted(false);
-                moreButton2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson2.add(moreButton2);
-                moreButton2.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson2.getComponentCount(); i++) {
-                        Rectangle bounds = lesson2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson2.setMinimumSize(preferredSize);
-                    lesson2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson2);
-            lesson2.setBounds(280, 125, 240, 250);
-
-            //======== lesson3 ========
-            {
-                lesson3.setBackground(SystemColor.menu);
-                lesson3.setLayout(null);
-
-                //---- lessonName3 ----
-                lessonName3.setText("Lesson Name");
-                lessonName3.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName3.setBackground(SystemColor.menu);
-                lesson3.add(lessonName3);
-                lessonName3.setBounds(5, 165, 195, lessonName3.getPreferredSize().height);
-
-                //---- lessonLevel3 ----
-                lessonLevel3.setText("Lesson Level");
-                lessonLevel3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel3.setBackground(SystemColor.menu);
-                lessonLevel3.setForeground(new Color(150, 150, 150));
-                lesson3.add(lessonLevel3);
-                lessonLevel3.setBounds(5, 190, 85, 17);
-
-                //---- moreButton3 ----
-                moreButton3.setText("MORE");
-                moreButton3.setBackground(Color.white);
-                moreButton3.setBorderPainted(false);
-                moreButton3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson3.add(moreButton3);
-                moreButton3.setBounds(170, 220, 65, 25);
-
-                //---- coachName3 ----
-                coachName3.setText("Coach Name");
-                coachName3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName3.setBackground(SystemColor.menu);
-                coachName3.setForeground(new Color(120, 120, 120));
-                lesson3.add(coachName3);
-                coachName3.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture3 ========
-                {
-                    lessonPicture3.setBackground(SystemColor.activeCaption);
-                    lessonPicture3.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture3.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture3.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture3.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture3.setMinimumSize(preferredSize);
-                        lessonPicture3.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson3.add(lessonPicture3);
-                lessonPicture3.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson3.getComponentCount(); i++) {
-                        Rectangle bounds = lesson3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson3.setMinimumSize(preferredSize);
-                    lesson3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson3);
-            lesson3.setBounds(535, 125, 240, 250);
-
-            //======== lesson4 ========
-            {
-                lesson4.setBackground(SystemColor.menu);
-                lesson4.setLayout(null);
-
-                //---- lessonName4 ----
-                lessonName4.setText("Lesson Name");
-                lessonName4.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName4.setBackground(SystemColor.menu);
-                lesson4.add(lessonName4);
-                lessonName4.setBounds(5, 165, 195, lessonName4.getPreferredSize().height);
-
-                //---- lessonLevel4 ----
-                lessonLevel4.setText("Lesson Level");
-                lessonLevel4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel4.setBackground(SystemColor.menu);
-                lessonLevel4.setForeground(new Color(150, 150, 150));
-                lesson4.add(lessonLevel4);
-                lessonLevel4.setBounds(5, 190, 85, 17);
-
-                //---- moreButton4 ----
-                moreButton4.setText("MORE");
-                moreButton4.setBackground(Color.white);
-                moreButton4.setBorderPainted(false);
-                moreButton4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson4.add(moreButton4);
-                moreButton4.setBounds(170, 220, 65, 25);
-
-                //---- coachName4 ----
-                coachName4.setText("Coach Name");
-                coachName4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName4.setBackground(SystemColor.menu);
-                coachName4.setForeground(new Color(120, 120, 120));
-                lesson4.add(coachName4);
-                coachName4.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture4 ========
-                {
-                    lessonPicture4.setBackground(SystemColor.activeCaption);
-                    lessonPicture4.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture4.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture4.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture4.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture4.setMinimumSize(preferredSize);
-                        lessonPicture4.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson4.add(lessonPicture4);
-                lessonPicture4.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson4.getComponentCount(); i++) {
-                        Rectangle bounds = lesson4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson4.setMinimumSize(preferredSize);
-                    lesson4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson4);
-            lesson4.setBounds(535, 385, 240, 250);
-
-            //======== lesson5 ========
-            {
-                lesson5.setBackground(SystemColor.menu);
-                lesson5.setLayout(null);
-
-                //---- lessonName5 ----
-                lessonName5.setText("Lesson Name");
-                lessonName5.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName5.setBackground(SystemColor.menu);
-                lesson5.add(lessonName5);
-                lessonName5.setBounds(5, 165, 195, lessonName5.getPreferredSize().height);
-
-                //---- lessonLevel5 ----
-                lessonLevel5.setText("Lesson Level");
-                lessonLevel5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel5.setBackground(SystemColor.menu);
-                lessonLevel5.setForeground(new Color(150, 150, 150));
-                lesson5.add(lessonLevel5);
-                lessonLevel5.setBounds(5, 190, 85, 17);
-
-                //---- coachName5 ----
-                coachName5.setText("Coach Name");
-                coachName5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName5.setBackground(SystemColor.menu);
-                coachName5.setForeground(new Color(120, 120, 120));
-                lesson5.add(coachName5);
-                coachName5.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture5 ========
-                {
-                    lessonPicture5.setBackground(SystemColor.activeCaption);
-                    lessonPicture5.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture5.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture5.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture5.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture5.setMinimumSize(preferredSize);
-                        lessonPicture5.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson5.add(lessonPicture5);
-                lessonPicture5.setBounds(0, 0, 250, 160);
-
-                //---- moreButton5 ----
-                moreButton5.setText("MORE");
-                moreButton5.setBackground(Color.white);
-                moreButton5.setBorderPainted(false);
-                moreButton5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson5.add(moreButton5);
-                moreButton5.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson5.getComponentCount(); i++) {
-                        Rectangle bounds = lesson5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson5.setMinimumSize(preferredSize);
-                    lesson5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson5);
-            lesson5.setBounds(280, 385, 240, 250);
-
-            //======== lesson6 ========
-            {
-                lesson6.setBackground(SystemColor.menu);
-                lesson6.setLayout(null);
-
-                //======== lessonPicture6 ========
-                {
-                    lessonPicture6.setBackground(SystemColor.activeCaption);
-                    lessonPicture6.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture6.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture6.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture6.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture6.setMinimumSize(preferredSize);
-                        lessonPicture6.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson6.add(lessonPicture6);
-                lessonPicture6.setBounds(0, 0, 250, 160);
-
-                //---- lessonName6 ----
-                lessonName6.setText("Lesson Name");
-                lessonName6.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName6.setBackground(SystemColor.menu);
-                lesson6.add(lessonName6);
-                lessonName6.setBounds(5, 165, 195, lessonName6.getPreferredSize().height);
-
-                //---- lessonLevel6 ----
-                lessonLevel6.setText("Lesson Level");
-                lessonLevel6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel6.setBackground(SystemColor.menu);
-                lessonLevel6.setForeground(new Color(150, 150, 150));
-                lesson6.add(lessonLevel6);
-                lessonLevel6.setBounds(5, 190, 85, 17);
-
-                //---- coachName6 ----
-                coachName6.setText("Coach Name");
-                coachName6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName6.setBackground(SystemColor.menu);
-                coachName6.setForeground(new Color(120, 120, 120));
-                lesson6.add(coachName6);
-                coachName6.setBounds(5, 225, 85, 17);
-
-                //---- moreButton6 ----
-                moreButton6.setText("MORE");
-                moreButton6.setBackground(Color.white);
-                moreButton6.setBorderPainted(false);
-                moreButton6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson6.add(moreButton6);
-                moreButton6.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson6.getComponentCount(); i++) {
-                        Rectangle bounds = lesson6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson6.setMinimumSize(preferredSize);
-                    lesson6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson6);
-            lesson6.setBounds(25, 385, 240, 250);
-
-            //---- search ----
-            search.setBackground(SystemColor.menu);
-            search.setBorder(null);
-            search.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            body.add(search);
-            search.setBounds(300, 45, 300, 40);
-
-            //---- searchButton ----
-            searchButton.setBorderPainted(false);
-            searchButton.setBackground(SystemColor.textHighlight);
-            body.add(searchButton);
-            searchButton.setBounds(600, 45, 40, 40);
-
-            //---- nextPageButton ----
-            nextPageButton.setBorderPainted(false);
-            nextPageButton.setBackground(new Color(217, 0, 27));
-            nextPageButton.setText("NEXT PAGE");
-            nextPageButton.setForeground(Color.white);
-            body.add(nextPageButton);
-            nextPageButton.setBounds(655, 45, 120, 40);
-
-            //---- coachSearchButton ----
-            coachSearchButton.setBorderPainted(false);
-            coachSearchButton.setBackground(SystemColor.textHighlight);
-            coachSearchButton.setText("COACH");
-            coachSearchButton.setForeground(Color.white);
-            coachSearchButton.addActionListener(e -> coachSearchButtonActionPerformed(e));
-            body.add(coachSearchButton);
-            coachSearchButton.setBounds(200, 45, 85, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel lesson1;
-    private JPanel lessonPicture1;
-    private JLabel lessonName;
-    private JLabel lessonLevel1;
-    private JLabel coachName1;
-    private JButton moreButton1;
-    private JPanel lesson2;
-    private JLabel lessonName2;
-    private JLabel lessonLevel2;
-    private JLabel coachName2;
-    private JPanel lessonPicture2;
-    private JButton moreButton2;
-    private JPanel lesson3;
-    private JLabel lessonName3;
-    private JLabel lessonLevel3;
-    private JButton moreButton3;
-    private JLabel coachName3;
-    private JPanel lessonPicture3;
-    private JPanel lesson4;
-    private JLabel lessonName4;
-    private JLabel lessonLevel4;
-    private JButton moreButton4;
-    private JLabel coachName4;
-    private JPanel lessonPicture4;
-    private JPanel lesson5;
-    private JLabel lessonName5;
-    private JLabel lessonLevel5;
-    private JLabel coachName5;
-    private JPanel lessonPicture5;
-    private JButton moreButton5;
-    private JPanel lesson6;
-    private JPanel lessonPicture6;
-    private JLabel lessonName6;
-    private JLabel lessonLevel6;
-    private JLabel coachName6;
-    private JButton moreButton6;
-    private JTextField search;
-    private JButton searchButton;
-    private JButton nextPageButton;
-    private JButton coachSearchButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        LessonHomeMember.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    LessonHomeMember frame = new LessonHomeMember();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: src/main/java/GUI/Coach/MyLessonCoach.java
===================================================================
diff --git a/src/main/java/GUI/Coach/MyLessonCoach.java b/src/main/java/GUI/Coach/MyLessonCoach.java
deleted file mode 100644
--- a/src/main/java/GUI/Coach/MyLessonCoach.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,702 +0,0 @@
-package GUI.Coach;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 11:03:20 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class MyLessonCoach extends JFrame {
-    public MyLessonCoach() {
-        initComponents();
-    }
-
-    private void nextPageButton2ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        UploadModify.run();
-    }
-
-    private void moreButton1ActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        LessonDetailCoach.run();
-    }
-
-    private void homeButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        MyLessonCoach.run();
-    }
-
-    private void nextPageButtonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        MyLessonCoach.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        decorationLine = new JLabel();
-        title = new JLabel();
-        lesson1 = new JPanel();
-        lessonPicture1 = new JPanel();
-        lessonName = new JLabel();
-        lessonLevel1 = new JLabel();
-        coachName1 = new JLabel();
-        moreButton1 = new JButton();
-        lesson2 = new JPanel();
-        lessonName2 = new JLabel();
-        lessonLevel2 = new JLabel();
-        coachName2 = new JLabel();
-        lessonPicture2 = new JPanel();
-        moreButton2 = new JButton();
-        lesson3 = new JPanel();
-        lessonName3 = new JLabel();
-        lessonLevel3 = new JLabel();
-        moreButton3 = new JButton();
-        coachName3 = new JLabel();
-        lessonPicture3 = new JPanel();
-        lesson4 = new JPanel();
-        lessonName4 = new JLabel();
-        lessonLevel4 = new JLabel();
-        moreButton4 = new JButton();
-        coachName4 = new JLabel();
-        lessonPicture4 = new JPanel();
-        lesson5 = new JPanel();
-        lessonName5 = new JLabel();
-        lessonLevel5 = new JLabel();
-        coachName5 = new JLabel();
-        lessonPicture5 = new JPanel();
-        moreButton5 = new JButton();
-        lesson6 = new JPanel();
-        lessonPicture6 = new JPanel();
-        lessonName6 = new JLabel();
-        lessonLevel6 = new JLabel();
-        coachName6 = new JLabel();
-        moreButton6 = new JButton();
-        nextPageButton = new JButton();
-        Upload = new JButton();
-        homeButton = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- decorationLine ----
-            decorationLine.setBackground(Color.black);
-            decorationLine.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine);
-            decorationLine.setBounds(35, 115, 730, decorationLine.getPreferredSize().height);
-
-            //---- title ----
-            title.setText("My Lesson ");
-            title.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 32));
-            title.setBackground(Color.white);
-            body.add(title);
-            title.setBounds(new Rectangle(new Point(25, 45), title.getPreferredSize()));
-
-            //======== lesson1 ========
-            {
-                lesson1.setBackground(SystemColor.menu);
-                lesson1.setLayout(null);
-
-                //======== lessonPicture1 ========
-                {
-                    lessonPicture1.setBackground(SystemColor.activeCaption);
-                    lessonPicture1.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture1.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture1.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture1.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture1.setMinimumSize(preferredSize);
-                        lessonPicture1.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson1.add(lessonPicture1);
-                lessonPicture1.setBounds(0, 0, 250, 160);
-
-                //---- lessonName ----
-                lessonName.setText("Lesson Name");
-                lessonName.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName.setBackground(SystemColor.menu);
-                lesson1.add(lessonName);
-                lessonName.setBounds(5, 165, 195, lessonName.getPreferredSize().height);
-
-                //---- lessonLevel1 ----
-                lessonLevel1.setText("Lesson Level");
-                lessonLevel1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel1.setBackground(SystemColor.menu);
-                lessonLevel1.setForeground(new Color(150, 150, 150));
-                lesson1.add(lessonLevel1);
-                lessonLevel1.setBounds(5, 190, 85, 17);
-
-                //---- coachName1 ----
-                coachName1.setText("Coach Name");
-                coachName1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName1.setBackground(SystemColor.menu);
-                coachName1.setForeground(new Color(120, 120, 120));
-                lesson1.add(coachName1);
-                coachName1.setBounds(5, 225, 85, 17);
-
-                //---- moreButton1 ----
-                moreButton1.setText("MORE");
-                moreButton1.setBackground(Color.white);
-                moreButton1.setBorderPainted(false);
-                moreButton1.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                moreButton1.addActionListener(e -> moreButton1ActionPerformed(e));
-                lesson1.add(moreButton1);
-                moreButton1.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson1.getComponentCount(); i++) {
-                        Rectangle bounds = lesson1.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson1.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson1.setMinimumSize(preferredSize);
-                    lesson1.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson1);
-            lesson1.setBounds(25, 125, 240, 250);
-
-            //======== lesson2 ========
-            {
-                lesson2.setBackground(SystemColor.menu);
-                lesson2.setLayout(null);
-
-                //---- lessonName2 ----
-                lessonName2.setText("Lesson Name");
-                lessonName2.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName2.setBackground(SystemColor.menu);
-                lesson2.add(lessonName2);
-                lessonName2.setBounds(5, 165, 195, lessonName2.getPreferredSize().height);
-
-                //---- lessonLevel2 ----
-                lessonLevel2.setText("Lesson Level");
-                lessonLevel2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel2.setBackground(SystemColor.menu);
-                lessonLevel2.setForeground(new Color(150, 150, 150));
-                lesson2.add(lessonLevel2);
-                lessonLevel2.setBounds(5, 190, 85, 17);
-
-                //---- coachName2 ----
-                coachName2.setText("Coach Name");
-                coachName2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName2.setBackground(SystemColor.menu);
-                coachName2.setForeground(new Color(120, 120, 120));
-                lesson2.add(coachName2);
-                coachName2.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture2 ========
-                {
-                    lessonPicture2.setBackground(SystemColor.activeCaption);
-                    lessonPicture2.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture2.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture2.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture2.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture2.setMinimumSize(preferredSize);
-                        lessonPicture2.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson2.add(lessonPicture2);
-                lessonPicture2.setBounds(0, 0, 250, 160);
-
-                //---- moreButton2 ----
-                moreButton2.setText("MORE");
-                moreButton2.setBackground(Color.white);
-                moreButton2.setBorderPainted(false);
-                moreButton2.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson2.add(moreButton2);
-                moreButton2.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson2.getComponentCount(); i++) {
-                        Rectangle bounds = lesson2.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson2.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson2.setMinimumSize(preferredSize);
-                    lesson2.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson2);
-            lesson2.setBounds(280, 125, 240, 250);
-
-            //======== lesson3 ========
-            {
-                lesson3.setBackground(SystemColor.menu);
-                lesson3.setLayout(null);
-
-                //---- lessonName3 ----
-                lessonName3.setText("Lesson Name");
-                lessonName3.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName3.setBackground(SystemColor.menu);
-                lesson3.add(lessonName3);
-                lessonName3.setBounds(5, 165, 195, lessonName3.getPreferredSize().height);
-
-                //---- lessonLevel3 ----
-                lessonLevel3.setText("Lesson Level");
-                lessonLevel3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel3.setBackground(SystemColor.menu);
-                lessonLevel3.setForeground(new Color(150, 150, 150));
-                lesson3.add(lessonLevel3);
-                lessonLevel3.setBounds(5, 190, 85, 17);
-
-                //---- moreButton3 ----
-                moreButton3.setText("MORE");
-                moreButton3.setBackground(Color.white);
-                moreButton3.setBorderPainted(false);
-                moreButton3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson3.add(moreButton3);
-                moreButton3.setBounds(170, 220, 65, 25);
-
-                //---- coachName3 ----
-                coachName3.setText("Coach Name");
-                coachName3.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName3.setBackground(SystemColor.menu);
-                coachName3.setForeground(new Color(120, 120, 120));
-                lesson3.add(coachName3);
-                coachName3.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture3 ========
-                {
-                    lessonPicture3.setBackground(SystemColor.activeCaption);
-                    lessonPicture3.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture3.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture3.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture3.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture3.setMinimumSize(preferredSize);
-                        lessonPicture3.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson3.add(lessonPicture3);
-                lessonPicture3.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson3.getComponentCount(); i++) {
-                        Rectangle bounds = lesson3.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson3.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson3.setMinimumSize(preferredSize);
-                    lesson3.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson3);
-            lesson3.setBounds(535, 125, 240, 250);
-
-            //======== lesson4 ========
-            {
-                lesson4.setBackground(SystemColor.menu);
-                lesson4.setLayout(null);
-
-                //---- lessonName4 ----
-                lessonName4.setText("Lesson Name");
-                lessonName4.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName4.setBackground(SystemColor.menu);
-                lesson4.add(lessonName4);
-                lessonName4.setBounds(5, 165, 195, lessonName4.getPreferredSize().height);
-
-                //---- lessonLevel4 ----
-                lessonLevel4.setText("Lesson Level");
-                lessonLevel4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel4.setBackground(SystemColor.menu);
-                lessonLevel4.setForeground(new Color(150, 150, 150));
-                lesson4.add(lessonLevel4);
-                lessonLevel4.setBounds(5, 190, 85, 17);
-
-                //---- moreButton4 ----
-                moreButton4.setText("MORE");
-                moreButton4.setBackground(Color.white);
-                moreButton4.setBorderPainted(false);
-                moreButton4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson4.add(moreButton4);
-                moreButton4.setBounds(170, 220, 65, 25);
-
-                //---- coachName4 ----
-                coachName4.setText("Coach Name");
-                coachName4.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName4.setBackground(SystemColor.menu);
-                coachName4.setForeground(new Color(120, 120, 120));
-                lesson4.add(coachName4);
-                coachName4.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture4 ========
-                {
-                    lessonPicture4.setBackground(SystemColor.activeCaption);
-                    lessonPicture4.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture4.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture4.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture4.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture4.setMinimumSize(preferredSize);
-                        lessonPicture4.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson4.add(lessonPicture4);
-                lessonPicture4.setBounds(0, 0, 250, 160);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson4.getComponentCount(); i++) {
-                        Rectangle bounds = lesson4.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson4.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson4.setMinimumSize(preferredSize);
-                    lesson4.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson4);
-            lesson4.setBounds(535, 385, 240, 250);
-
-            //======== lesson5 ========
-            {
-                lesson5.setBackground(SystemColor.menu);
-                lesson5.setLayout(null);
-
-                //---- lessonName5 ----
-                lessonName5.setText("Lesson Name");
-                lessonName5.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName5.setBackground(SystemColor.menu);
-                lesson5.add(lessonName5);
-                lessonName5.setBounds(5, 165, 195, lessonName5.getPreferredSize().height);
-
-                //---- lessonLevel5 ----
-                lessonLevel5.setText("Lesson Level");
-                lessonLevel5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel5.setBackground(SystemColor.menu);
-                lessonLevel5.setForeground(new Color(150, 150, 150));
-                lesson5.add(lessonLevel5);
-                lessonLevel5.setBounds(5, 190, 85, 17);
-
-                //---- coachName5 ----
-                coachName5.setText("Coach Name");
-                coachName5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName5.setBackground(SystemColor.menu);
-                coachName5.setForeground(new Color(120, 120, 120));
-                lesson5.add(coachName5);
-                coachName5.setBounds(5, 225, 85, 17);
-
-                //======== lessonPicture5 ========
-                {
-                    lessonPicture5.setBackground(SystemColor.activeCaption);
-                    lessonPicture5.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture5.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture5.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture5.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture5.setMinimumSize(preferredSize);
-                        lessonPicture5.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson5.add(lessonPicture5);
-                lessonPicture5.setBounds(0, 0, 250, 160);
-
-                //---- moreButton5 ----
-                moreButton5.setText("MORE");
-                moreButton5.setBackground(Color.white);
-                moreButton5.setBorderPainted(false);
-                moreButton5.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson5.add(moreButton5);
-                moreButton5.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson5.getComponentCount(); i++) {
-                        Rectangle bounds = lesson5.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson5.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson5.setMinimumSize(preferredSize);
-                    lesson5.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson5);
-            lesson5.setBounds(280, 385, 240, 250);
-
-            //======== lesson6 ========
-            {
-                lesson6.setBackground(SystemColor.menu);
-                lesson6.setLayout(null);
-
-                //======== lessonPicture6 ========
-                {
-                    lessonPicture6.setBackground(SystemColor.activeCaption);
-                    lessonPicture6.setLayout(null);
-
-                    {
-                        // compute preferred size
-                        Dimension preferredSize = new Dimension();
-                        for(int i = 0; i < lessonPicture6.getComponentCount(); i++) {
-                            Rectangle bounds = lessonPicture6.getComponent(i).getBounds();
-                            preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                            preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                        }
-                        Insets insets = lessonPicture6.getInsets();
-                        preferredSize.width += insets.right;
-                        preferredSize.height += insets.bottom;
-                        lessonPicture6.setMinimumSize(preferredSize);
-                        lessonPicture6.setPreferredSize(preferredSize);
-                    }
-                }
-                lesson6.add(lessonPicture6);
-                lessonPicture6.setBounds(0, 0, 250, 160);
-
-                //---- lessonName6 ----
-                lessonName6.setText("Lesson Name");
-                lessonName6.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 18));
-                lessonName6.setBackground(SystemColor.menu);
-                lesson6.add(lessonName6);
-                lessonName6.setBounds(5, 165, 195, lessonName6.getPreferredSize().height);
-
-                //---- lessonLevel6 ----
-                lessonLevel6.setText("Lesson Level");
-                lessonLevel6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                lessonLevel6.setBackground(SystemColor.menu);
-                lessonLevel6.setForeground(new Color(150, 150, 150));
-                lesson6.add(lessonLevel6);
-                lessonLevel6.setBounds(5, 190, 85, 17);
-
-                //---- coachName6 ----
-                coachName6.setText("Coach Name");
-                coachName6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 13));
-                coachName6.setBackground(SystemColor.menu);
-                coachName6.setForeground(new Color(120, 120, 120));
-                lesson6.add(coachName6);
-                coachName6.setBounds(5, 225, 85, 17);
-
-                //---- moreButton6 ----
-                moreButton6.setText("MORE");
-                moreButton6.setBackground(Color.white);
-                moreButton6.setBorderPainted(false);
-                moreButton6.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 9));
-                lesson6.add(moreButton6);
-                moreButton6.setBounds(170, 220, 65, 25);
-
-                {
-                    // compute preferred size
-                    Dimension preferredSize = new Dimension();
-                    for(int i = 0; i < lesson6.getComponentCount(); i++) {
-                        Rectangle bounds = lesson6.getComponent(i).getBounds();
-                        preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                        preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                    }
-                    Insets insets = lesson6.getInsets();
-                    preferredSize.width += insets.right;
-                    preferredSize.height += insets.bottom;
-                    lesson6.setMinimumSize(preferredSize);
-                    lesson6.setPreferredSize(preferredSize);
-                }
-            }
-            body.add(lesson6);
-            lesson6.setBounds(25, 385, 240, 250);
-
-            //---- nextPageButton ----
-            nextPageButton.setBorderPainted(false);
-            nextPageButton.setBackground(SystemColor.textHighlight);
-            nextPageButton.setText("NEXT PAGE");
-            nextPageButton.setForeground(Color.white);
-            nextPageButton.addActionListener(e -> nextPageButtonActionPerformed(e));
-            body.add(nextPageButton);
-            nextPageButton.setBounds(660, 45, 120, 40);
-
-            //---- Upload ----
-            Upload.setBorderPainted(false);
-            Upload.setBackground(new Color(217, 0, 27));
-            Upload.setText("UPLOAD");
-            Upload.setForeground(Color.white);
-            Upload.addActionListener(e -> nextPageButton2ActionPerformed(e));
-            body.add(Upload);
-            Upload.setBounds(490, 45, 120, 40);
-
-            //---- homeButton ----
-            homeButton.setBorderPainted(false);
-            homeButton.setBackground(SystemColor.textHighlight);
-            homeButton.setText("NEXT PAGE");
-            homeButton.setForeground(Color.white);
-            homeButton.addActionListener(e -> homeButtonActionPerformed(e));
-            body.add(homeButton);
-            homeButton.setBounds(615, 45, 40, 40);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 800, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JLabel decorationLine;
-    private JLabel title;
-    private JPanel lesson1;
-    private JPanel lessonPicture1;
-    private JLabel lessonName;
-    private JLabel lessonLevel1;
-    private JLabel coachName1;
-    private JButton moreButton1;
-    private JPanel lesson2;
-    private JLabel lessonName2;
-    private JLabel lessonLevel2;
-    private JLabel coachName2;
-    private JPanel lessonPicture2;
-    private JButton moreButton2;
-    private JPanel lesson3;
-    private JLabel lessonName3;
-    private JLabel lessonLevel3;
-    private JButton moreButton3;
-    private JLabel coachName3;
-    private JPanel lessonPicture3;
-    private JPanel lesson4;
-    private JLabel lessonName4;
-    private JLabel lessonLevel4;
-    private JButton moreButton4;
-    private JLabel coachName4;
-    private JPanel lessonPicture4;
-    private JPanel lesson5;
-    private JLabel lessonName5;
-    private JLabel lessonLevel5;
-    private JLabel coachName5;
-    private JPanel lessonPicture5;
-    private JButton moreButton5;
-    private JPanel lesson6;
-    private JPanel lessonPicture6;
-    private JLabel lessonName6;
-    private JLabel lessonLevel6;
-    private JLabel coachName6;
-    private JButton moreButton6;
-    private JButton nextPageButton;
-    private JButton Upload;
-    private JButton homeButton;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        MyLessonCoach.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    MyLessonCoach frame = new MyLessonCoach();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-400/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: Test/Java/org/qmbupt/grp85/gui/MemberGuiTest.java
===================================================================
diff --git a/Test/Java/org/qmbupt/grp85/gui/MemberGuiTest.java b/Test/Java/org/qmbupt/grp85/gui/MemberGuiTest.java
deleted file mode 100644
--- a/Test/Java/org/qmbupt/grp85/gui/MemberGuiTest.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,4 +0,0 @@
-package org.qmbupt.grp85.gui;
-
-public class MemberGuiTest {
-}
Index: src/main/java/GUI/Member/NavigatorMember.java
===================================================================
diff --git a/src/main/java/GUI/Member/NavigatorMember.java b/src/main/java/GUI/Member/NavigatorMember.java
deleted file mode 100644
--- a/src/main/java/GUI/Member/NavigatorMember.java	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ /dev/null	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
@@ -1,287 +0,0 @@
-package GUI.Member;
-
-import GUI.Other.Login;
-
-import java.awt.*;
-import java.awt.event.*;
-import javax.swing.*;
-import javax.swing.border.*;
-/*
- * Created by JFormDesigner on Fri Apr 09 12:20:21 CST 2021
- */
-
-
-/**
- * @author Anna
- */
-public class NavigatorMember extends JFrame {
-    public NavigatorMember() {
-        initComponents();
-    }
-
-    private void myLessonActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorMember.run();
-        LessonHomeMember.run();
-    }
-
-    private void myPlanActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorMember.run();
-        PlanHomeMember.run();
-
-    }
-
-    private void myProfileActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        java.awt.Window[] win = java.awt.Window.getWindows();
-        int i=0;
-        while (i<win.length) {
-            win[i].dispose();
-            i++;
-        }
-        NavigatorMember.run();
-        ProfileMember.run();
-    }
-
-    private void switchAccoutActionPerformed(ActionEvent e) {
-        // TODO add your code here
-        this.dispose();
-        Login.run();
-    }
-
-    private void initComponents() {
-        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
-        body = new JPanel();
-        label1 = new JButton();
-        username = new JLabel();
-        welcomeMsg = new JLabel();
-        decorationLine1 = new JLabel();
-        menu = new JPanel();
-        myLessonMenu = new JPanel();
-        myLesson = new JButton();
-        myPlanMenu = new JPanel();
-        myPlan = new JButton();
-        myProfileMenu = new JPanel();
-        myProfile = new JButton();
-        label2 = new JButton();
-        label3 = new JButton();
-        label4 = new JButton();
-        switchAccout = new JButton();
-
-        //======== this ========
-        setBackground(Color.white);
-        var contentPane = getContentPane();
-        contentPane.setLayout(null);
-
-        //======== body ========
-        {
-            body.setBackground(Color.white);
-            body.setBorder(null);
-            body.setLayout(null);
-
-            //---- label1 ----
-            label1.setText("avatar");
-            label1.setBackground(Color.black);
-            label1.setForeground(Color.white);
-            label1.setHorizontalAlignment(SwingConstants.CENTER);
-            label1.setBorderPainted(false);
-            body.add(label1);
-            label1.setBounds(20, 20, 75, 75);
-
-            //---- username ----
-            username.setText("Username");
-            username.setBackground(Color.white);
-            username.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 24));
-            body.add(username);
-            username.setBounds(new Rectangle(new Point(100, 30), username.getPreferredSize()));
-
-            //---- welcomeMsg ----
-            welcomeMsg.setText("Welcome, .....");
-            body.add(welcomeMsg);
-            welcomeMsg.setBounds(new Rectangle(new Point(103, 60), welcomeMsg.getPreferredSize()));
-
-            //---- decorationLine1 ----
-            decorationLine1.setBackground(Color.black);
-            decorationLine1.setText("     ");
-            decorationLine1.setBorder(LineBorder.createBlackLineBorder());
-            body.add(decorationLine1);
-            decorationLine1.setBounds(25, 115, 300, 2);
-
-            //======== menu ========
-            {
-                menu.setLayout(new GridLayout(0, 1));
-
-                //======== myLessonMenu ========
-                {
-                    myLessonMenu.setBackground(Color.white);
-                    myLessonMenu.setLayout(new GridLayout());
-
-                    //---- myLesson ----
-                    myLesson.setText("ALL Lesson");
-                    myLesson.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    myLesson.setBackground(Color.white);
-                    myLesson.setBorderPainted(false);
-                    myLesson.setHorizontalAlignment(SwingConstants.LEFT);
-                    myLesson.addActionListener(e -> myLessonActionPerformed(e));
-                    myLessonMenu.add(myLesson);
-                }
-                menu.add(myLessonMenu);
-
-                //======== myPlanMenu ========
-                {
-                    myPlanMenu.setBackground(Color.white);
-                    myPlanMenu.setLayout(new GridLayout());
-
-                    //---- myPlan ----
-                    myPlan.setText("My Plan");
-                    myPlan.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    myPlan.setBackground(Color.white);
-                    myPlan.setBorderPainted(false);
-                    myPlan.setHorizontalAlignment(SwingConstants.LEFT);
-                    myPlan.addActionListener(e -> myPlanActionPerformed(e));
-                    myPlanMenu.add(myPlan);
-                }
-                menu.add(myPlanMenu);
-
-                //======== myProfileMenu ========
-                {
-                    myProfileMenu.setBackground(Color.white);
-                    myProfileMenu.setLayout(new GridLayout());
-
-                    //---- myProfile ----
-                    myProfile.setText("My Profile");
-                    myProfile.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-                    myProfile.setBackground(Color.white);
-                    myProfile.setBorderPainted(false);
-                    myProfile.setHorizontalAlignment(SwingConstants.LEFT);
-                    myProfile.addActionListener(e -> myProfileActionPerformed(e));
-                    myProfileMenu.add(myProfile);
-                }
-                menu.add(myProfileMenu);
-            }
-            body.add(menu);
-            menu.setBounds(50, 135, 280, 200);
-
-            //---- label2 ----
-            label2.setText("Icon");
-            label2.setBackground(Color.black);
-            label2.setForeground(Color.white);
-            label2.setHorizontalAlignment(SwingConstants.CENTER);
-            label2.setBorderPainted(false);
-            body.add(label2);
-            label2.setBounds(20, 157, 25, 25);
-
-            //---- label3 ----
-            label3.setText("Icon");
-            label3.setBackground(Color.black);
-            label3.setForeground(Color.white);
-            label3.setHorizontalAlignment(SwingConstants.CENTER);
-            label3.setBorderPainted(false);
-            body.add(label3);
-            label3.setBounds(20, 222, 25, 25);
-
-            //---- label4 ----
-            label4.setText("Icon");
-            label4.setBackground(Color.black);
-            label4.setForeground(Color.white);
-            label4.setHorizontalAlignment(SwingConstants.CENTER);
-            label4.setBorderPainted(false);
-            body.add(label4);
-            label4.setBounds(20, 290, 25, 25);
-
-            //---- switchAccout ----
-            switchAccout.setText("Switch Account");
-            switchAccout.setFont(new Font("Microsoft YaHei UI", Font.PLAIN, 18));
-            switchAccout.setBackground(Color.white);
-            switchAccout.setBorderPainted(false);
-            switchAccout.addActionListener(e -> switchAccoutActionPerformed(e));
-            body.add(switchAccout);
-            switchAccout.setBounds(-5, 595, 175, 60);
-
-            {
-                // compute preferred size
-                Dimension preferredSize = new Dimension();
-                for(int i = 0; i < body.getComponentCount(); i++) {
-                    Rectangle bounds = body.getComponent(i).getBounds();
-                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-                }
-                Insets insets = body.getInsets();
-                preferredSize.width += insets.right;
-                preferredSize.height += insets.bottom;
-                body.setMinimumSize(preferredSize);
-                body.setPreferredSize(preferredSize);
-            }
-        }
-        contentPane.add(body);
-        body.setBounds(0, 0, 350, 655);
-
-        {
-            // compute preferred size
-            Dimension preferredSize = new Dimension();
-            for(int i = 0; i < contentPane.getComponentCount(); i++) {
-                Rectangle bounds = contentPane.getComponent(i).getBounds();
-                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
-                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
-            }
-            Insets insets = contentPane.getInsets();
-            preferredSize.width += insets.right;
-            preferredSize.height += insets.bottom;
-            contentPane.setMinimumSize(preferredSize);
-            contentPane.setPreferredSize(preferredSize);
-        }
-        pack();
-        setLocationRelativeTo(getOwner());
-        // JFormDesigner - End of component initialization  //GEN-END:initComponents
-    }
-
-    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
-    private JPanel body;
-    private JButton label1;
-    private JLabel username;
-    private JLabel welcomeMsg;
-    private JLabel decorationLine1;
-    private JPanel menu;
-    private JPanel myLessonMenu;
-    private JButton myLesson;
-    private JPanel myPlanMenu;
-    private JButton myPlan;
-    private JPanel myProfileMenu;
-    private JButton myProfile;
-    private JButton label2;
-    private JButton label3;
-    private JButton label4;
-    private JButton switchAccout;
-    // JFormDesigner - End of variables declaration  //GEN-END:variables
-    public static void main(String[] args) {
-        NavigatorMember.run();
-    }
-
-    public static void run(){
-        EventQueue.invokeLater(new Runnable() {
-            public void run() {
-                try {
-                    NavigatorMember frame = new NavigatorMember();
-                    Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
-                    frame.setLocation(screenSize.width/2-1100/2,screenSize.height/2-700/2);
-                    frame.setVisible(true);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-}
Index: Group85.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_15\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/Test/Java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.8.0-M1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.8.0-M1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.8.0-M1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.8.0-M1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib:1.4.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.jetbrains:annotations:13.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.8.0-M1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.8.0-M1\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Group85.iml b/Group85.iml
--- a/Group85.iml	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ b/Group85.iml	(date 1619153685600)
@@ -1,31 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_15">
-    <output url="file://$MODULE_DIR$/target/classes" />
-    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_15_PREVIEW" inherit-compiler-output="true">
+    <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/Test/Java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/target" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="Maven: junit:junit:4.12" level="project" />
-    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains:annotations:13.0" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.8.0-M1" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" default=\"true\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 73edf30f47c2120183b5ee5f7f6be81aab2e0a19)
+++ b/.idea/misc.xml	(date 1619153536339)
@@ -1,13 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="15" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" project-jdk-name="15" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
